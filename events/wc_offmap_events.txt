namespace = WCOME

### Spawn troops events
#Small troops
character_event = {
	id = WCOME.10
	desc = {
		trigger = {
			has_character_modifier = follower_of_cthun
		}
		text = EVTDESC_WCOME_cthun.10
		picture = GFX_evt_cthun
	}
	desc = {
		trigger = {
			has_character_modifier = follower_of_nzoth
		}
		text = EVTDESC_WCOME_nzoth.10
		picture = GFX_evt_nzoth
	}
	desc = {
		trigger = {
			has_character_modifier = follower_of_yogg_saron
		}
		text = EVTDESC_WCOME_yoggsaron.10
		picture = GFX_evt_yogg_saron
	}
	border = GFX_event_normal_frame_religion
	
	is_triggered_only = yes
	
	immediate = {
	}
	
	option = {
		name= {
			text = EVTOPTA_WCOME_cthun.10
			trigger = {
				has_character_modifier = follower_of_cthun
			}
		}
		name= {
			text = EVTOPTA_WCOME_nzoth.10
			trigger = {
				has_character_modifier = follower_of_nzoth
			}
		}
		name= {
			text = EVTOPTA_WCOME_yoggsaron.10
			trigger = {
				has_character_modifier = follower_of_yogg_saron
			}
		}
		
		capital_scope = { save_event_target_as = target_province }
		
		if = {
			limit = {
				has_character_modifier = follower_of_cthun
			}
			spawn_cthun_follower_troops_effect = yes
		}
		if = {
			limit = {
				has_character_modifier = follower_of_nzoth
			}
			spawn_nzoth_follower_troops_effect = yes
		}
		if = {
			limit = {
				has_character_modifier = follower_of_yogg_saron
			}
			spawn_yogg_saron_follower_troops_effect = yes
		}
	}
}
#Medium troops
character_event = {
	id = WCOME.11
	desc = {
		trigger = {
			has_character_modifier = follower_of_cthun
		}
		text = EVTDESC_WCOME_cthun.11
		picture = GFX_evt_cthun
	}
	
	desc = {
		trigger = {
			has_character_modifier = follower_of_nzoth
		}
		text = EVTDESC_WCOME_nzoth.11
		picture = GFX_evt_nzoth
	}
	desc = {
		trigger = {
			has_character_modifier = follower_of_yogg_saron
		}
		text = EVTDESC_WCOME_yoggsaron.11
		picture = GFX_evt_yogg_saron
	}
	border = GFX_event_normal_frame_religion
	
	is_triggered_only = yes
	
	immediate = {
	}
	
	option = {
		name= {
			text = EVTOPTA_WCOME_cthun.11
			trigger = {
				has_character_modifier = follower_of_cthun
			}
		}
		name= {
			text = EVTOPTA_WCOME_nzoth.11
			trigger = {
				has_character_modifier = follower_of_nzoth
			}
		}
		name= {
			text = EVTOPTA_WCOME_yoggsaron.11
			trigger = {
				has_character_modifier = follower_of_yogg_saron
			}
		}
		
		capital_scope = { save_event_target_as = target_province }
		
		if = {
			limit = {
				has_character_modifier = follower_of_cthun
			}
			spawn_cthun_follower_troops_effect = yes
			spawn_cthun_follower_troops_effect = yes
		}
		if = {
			limit = {
				has_character_modifier = follower_of_nzoth
			}
			spawn_nzoth_follower_troops_effect = yes
			spawn_nzoth_follower_troops_effect = yes
		}
		if = {
			limit = {
				has_character_modifier = follower_of_yogg_saron
			}
			spawn_yogg_saron_follower_troops_effect = yes
			spawn_yogg_saron_follower_troops_effect = yes
		}
	}
}
#Large troops
character_event = {
	id = WCOME.12
	desc = {
		trigger = {
			has_character_modifier = follower_of_cthun
		}
		text = EVTDESC_WCOME_cthun.12
		picture = GFX_evt_cthun
	}
	
	desc = {
		trigger = {
			has_character_modifier = follower_of_nzoth
		}
		text = EVTDESC_WCOME_nzoth.12
		picture = GFX_evt_nzoth
	}
	desc = {
		trigger = {
			has_character_modifier = follower_of_yogg_saron
		}
		text = EVTDESC_WCOME_yoggsaron.12
		picture = GFX_evt_yogg_saron
	}
	border = GFX_event_normal_frame_religion
	
	is_triggered_only = yes
	
	immediate = {
	}
	
	option = {
		name= {
			text = EVTOPTA_WCOME_cthun.12
			trigger = {
				has_character_modifier = follower_of_cthun
			}
		}
		name= {
			text = EVTOPTA_WCOME_nzoth.12
			trigger = {
				has_character_modifier = follower_of_nzoth
			}
		}
		name= {
			text = EVTOPTA_WCOME_yoggsaron.12
			trigger = {
				has_character_modifier = follower_of_yogg_saron
			}
		}
		
		capital_scope = { save_event_target_as = target_province }
		
		if = {
			limit = {
				has_character_modifier = follower_of_cthun
			}
			spawn_cthun_follower_troops_effect = yes
			spawn_cthun_follower_troops_effect = yes
			spawn_cthun_follower_troops_effect = yes
		}
		if = {
			limit = {
				has_character_modifier = follower_of_nzoth
			}
			spawn_nzoth_follower_troops_effect = yes
			spawn_nzoth_follower_troops_effect = yes
			spawn_nzoth_follower_troops_effect = yes
		}
		if = {
			limit = {
				has_character_modifier = follower_of_yogg_saron
			}
			spawn_yogg_saron_follower_troops_effect = yes
			spawn_yogg_saron_follower_troops_effect = yes
			spawn_yogg_saron_follower_troops_effect = yes
		}
	}
}

### Spawn general events
#C'thun's general
character_event = {
	id = WCOME.20
	picture = GFX_evt_cthun
	desc = EVTDESC_WCOME.20
	border = GFX_event_normal_frame_religion
	
	is_triggered_only = yes
	
	immediate = {
		random_list = {
			40 = {
				create_character = {
					dynasty = none
					religion = old_gods_worship
					culture = nraqi
					female = no
					age = 1000000
					attributes = {
						martial=5 diplomacy=5 stewardship=5 intrigue=5 learning=5
					}
					random_traits = yes
					trait = creature_nraqi
					trait = brilliant_strategist
					trait = cruel
					trait = patient
					trait = being_void
				}
			}
			60 = {
				create_character = {
					dynasty = none
					religion = old_gods_worship
					culture = qiraji
					female = no
					age = 300
					attributes = {
						martial=5 diplomacy=5 stewardship=5 intrigue=5 learning=5
					}
					random_traits = yes
					trait = creature_qiraji
					trait = brilliant_strategist
					trait = cruel
					trait = patient
					trait = being_void
				}
			}
		}
		new_character = {
			random_list = {
				50 = {
					add_trait = class_warrior_6
				}
				30 = {
					add_trait = class_warrior_5
				}
				20 = {
					add_trait = class_warrior_7
				}
			}
			# Removes wrong traits
			remove_trait = chaste
			remove_trait = kind
			remove_trait = charitable
			remove_trait = humble
			remove_trait = honest
			remove_trait = zealous
			remove_trait = trusting
			remove_trait = craven
			save_event_target_as = target_general
		}
	}
	
	option = {
		name = EVTOPTA_WCOME.20
		# reverse_opinion = { modifier = opinion_loyal_servant who = event_target:target_general }
	}
}
#N'zoth's general
character_event = {
	id = WCOME.21
	picture = GFX_evt_nzoth
	desc = EVTDESC_WCOME.21
	border = GFX_event_normal_frame_religion
	
	is_triggered_only = yes
	
	immediate = {
		random_list = {
			40 = {
				create_character = {
					dynasty = none
					religion = old_gods_worship
					culture = nraqi
					female = no
					age = 1000000
					attributes = {
						martial=5 diplomacy=5 stewardship=5 intrigue=5 learning=5
					}
					random_traits = yes
					trait = creature_nraqi
					trait = brilliant_strategist
					trait = cruel
					trait = patient
					trait = being_void
				}
			}
			60 = {
				create_character = {
					dynasty = none
					religion = old_gods_worship
					culture = naga
					female = no
					age = 500
					attributes = {
						martial=5 diplomacy=5 stewardship=5 intrigue=5 learning=5
					}
					random_traits = yes
					trait = creature_naga
					trait = brilliant_strategist
					trait = cruel
					trait = patient
					trait = being_void
				}
			}
		}
		new_character = {
			random_list = {
				50 = {
					add_trait = class_warrior_6
				}
				30 = {
					add_trait = class_warrior_5
				}
				20 = {
					add_trait = class_warrior_7
				}
			}
			# Removes wrong traits
			remove_trait = chaste
			remove_trait = kind
			remove_trait = charitable
			remove_trait = humble
			remove_trait = honest
			remove_trait = zealous
			remove_trait = trusting
			remove_trait = craven
			save_event_target_as = target_general
		}
	}
	
	option = {
		name = EVTOPTA_WCOME.21
		# reverse_opinion = { modifier = opinion_loyal_servant who = event_target:target_general }
	}
}
#Yogg-Saron's general
character_event = {
	id = WCOME.22
	picture = GFX_evt_yogg_saron
	desc = EVTDESC_WCOME.22
	border = GFX_event_normal_frame_religion
	
	is_triggered_only = yes
	
	immediate = {
		random_list = {
			60 = {
				create_character = {
					dynasty = none
					religion = old_gods_worship
					culture = nraqi
					female = no
					age = 1000000
					attributes = {
						martial=5 diplomacy=5 stewardship=5 intrigue=5 learning=5
					}
					random_traits = yes
					trait = creature_nraqi
					trait = brilliant_strategist
					trait = cruel
					trait = patient
					trait = being_void
				}
			}
			40 = {
				create_character = {
					dynasty = none
					religion = old_gods_worship
					culture = titanforged
					female = no
					age = 1000
					attributes = {
						martial=5 diplomacy=5 stewardship=5 intrigue=5 learning=5
					}
					random_traits = yes
					trait = creature_watcher
					trait = brilliant_strategist
					trait = cruel
					trait = patient
					trait = being_void
				}
			}
		}
		new_character = {
			random_list = {
				50 = {
					add_trait = class_warrior_6
				}
				30 = {
					add_trait = class_warrior_5
				}
				20 = {
					add_trait = class_warrior_7
				}
			}
			# Removes wrong traits
			remove_trait = chaste
			remove_trait = kind
			remove_trait = charitable
			remove_trait = humble
			remove_trait = honest
			remove_trait = zealous
			remove_trait = trusting
			remove_trait = craven
			save_event_target_as = target_general
		}
	}
	
	option = {
		name = EVTOPTA_WCOME.22
		# reverse_opinion = { modifier = opinion_loyal_servant who = event_target:target_general }
	}
}
#Powerful C'Thrax general
character_event = {
	id = WCOME.25
	picture = GFX_evt_cthun
	desc = EVTDESC_WCOME.25
	border = GFX_event_normal_frame_religion
	
	is_triggered_only = yes
	
	immediate = {
		create_character = {
			dynasty = none
			religion = old_gods_worship
			culture = nraqi
			female = no
			age = 1000000
			attributes = {
				martial=10 diplomacy=5 stewardship=5 intrigue=5 learning=5
			}
			random_traits = yes
			trait = creature_cthraxxi
			trait = brilliant_strategist
			trait = cruel
			trait = patient
			trait = being_void
		}
		new_character = {
			random_list = {
				50 = {
					add_trait = class_warrior_6
				}
				30 = {
					add_trait = class_warrior_5
				}
				20 = {
					add_trait = class_warrior_7
				}
			}
			set_graphical_culture = cthraxxi
			# Removes wrong traits
			remove_trait = chaste
			remove_trait = kind
			remove_trait = charitable
			remove_trait = humble
			remove_trait = honest
			remove_trait = zealous
			remove_trait = trusting
			remove_trait = craven
			save_event_target_as = target_general
		}
	}
	
	option = {
		name = EVTOPTA_WCOME.25
		# reverse_opinion = { modifier = opinion_loyal_servant who = event_target:target_general }
	}
}

### Add character modifier buff events
#Weak C'Thun's power
character_event = {
	id = WCOME.30
	picture = GFX_evt_cthun
	desc = EVTDESC_WCOME.30
	border = GFX_event_normal_frame_religion
	
	is_triggered_only = yes
	
	immediate = {
	}
	
	option = {
		name = EVTOPTA_WCOME.30
		hidden_tooltip = {
			remove_offmap_power_effect = yes
		}
		add_character_modifier = { name = touch_of_chaos years = 5}
		clr_character_flag = requested_offmap_power
	}
}
#Strong C'Thun's power
character_event = {
	id = WCOME.31
	picture = GFX_evt_cthun
	desc = EVTDESC_WCOME.31
	border = GFX_event_normal_frame_religion
	
	is_triggered_only = yes
	
	immediate = {
	}
	
	option = {
		name = EVTOPTA_WCOME.31
		hidden_tooltip = {
			remove_offmap_power_effect = yes
		}
		add_character_modifier = { name = touch_of_madness years = 1}
		clr_character_flag = requested_offmap_power
	}
}
#Weak N'Zoth's power
character_event = {
	id = WCOME.32
	picture = GFX_evt_nzoth
	desc = EVTDESC_WCOME.32
	border = GFX_event_normal_frame_religion
	
	is_triggered_only = yes
	
	immediate = {
	}
	
	option = {
		name = EVTOPTA_WCOME.32
		hidden_tooltip = {
			remove_offmap_power_effect = yes
		}
		add_character_modifier = { name = dreams_of_deep years = 5}
		clr_character_flag = requested_offmap_power
	}
}
#Strong N'Zoth's power
character_event = {
	id = WCOME.33
	picture = GFX_evt_nzoth
	desc = EVTDESC_WCOME.33
	border = GFX_event_normal_frame_religion
	
	is_triggered_only = yes
	
	immediate = {
	}
	
	option = {
		name = EVTOPTA_WCOME.33
		hidden_tooltip = {
			remove_offmap_power_effect = yes
		}
		add_character_modifier = { name = dreams_of_nyalotha years = 1}
		clr_character_flag = requested_offmap_power
	}
}
#Weak Yogg-Saron's power
character_event = {
	id = WCOME.34
	picture = GFX_evt_yogg_saron
	desc = EVTDESC_WCOME.34
	border = GFX_event_normal_frame_religion
	
	is_triggered_only = yes
	
	immediate = {
	}
	
	option = {
		name = EVTOPTA_WCOME.34
		hidden_tooltip = {
			remove_offmap_power_effect = yes
		}
		add_character_modifier = { name = gaze_of_death years = 5}
		clr_character_flag = requested_offmap_power
	}
}
#Strong Yogg-Saron's power
character_event = {
	id = WCOME.35
	picture = GFX_evt_yogg_saron
	desc = EVTDESC_WCOME.35
	border = GFX_event_normal_frame_religion
	
	is_triggered_only = yes
	
	immediate = {
	}
	
	option = {
		name = EVTOPTA_WCOME.35
		hidden_tooltip = {
			remove_offmap_power_effect = yes
		}
		add_character_modifier = { name = gaze_of_undeath years = 1}
		clr_character_flag = requested_offmap_power
	}
}

### Killing of Old God event chain
# Enters Old God's prison
character_event = {
	id = WCOME.200
	desc = {
		trigger = { event_target:target_wonder = { has_cthun_wonder_trigger = yes } }
		text = EVTDESC_WCOME_200
		picture = GFX_evt_cthun
	}
	desc = {
		trigger = { event_target:target_wonder = { has_nzoth_wonder_trigger = yes } }
		text = EVTDESC_WCOME_200
		picture = GFX_evt_nzoth
	}
	desc = {
		trigger = { event_target:target_wonder = { has_yogg_saron_wonder_trigger = yes } }
		text = EVTDESC_WCOME_200
		picture = GFX_evt_yogg_saron
	}
	border = GFX_event_normal_frame_religion
	portrait = event_target:target_old_god
	
	is_triggered_only = yes
	
	only_playable = yes
	
	trigger = {
		NOT = { religion = old_gods_worship }
		FROM = {
			location = {
				wonder = {
					OR = {
						has_wonder_upgrade = upgrade_old_god_cthun_1
						has_wonder_upgrade = upgrade_old_god_cthun_2
						has_wonder_upgrade = upgrade_old_god_nzoth_1
						has_wonder_upgrade = upgrade_old_god_nzoth_2
						has_wonder_upgrade = upgrade_old_god_yogg_saron_1
						has_wonder_upgrade = upgrade_old_god_yogg_saron_2
					}
				}
			}
			holder_scope = { top_liege = { any_current_enemy = { character = ROOT } } }
		}
	}
	
	immediate = {
		FROM = {
			location = {
				wonder = {
					save_event_target_as = target_wonder
					
					# Saves targets and set flag
					if = {
						limit = { has_cthun_wonder_trigger = yes }
						offmap_cthun = {
							save_event_target_as = target_offmap
							offmap_ruler = { save_event_target_as = target_old_god }
						}
						ROOT = { set_character_flag = killed_cthun_flag }
					}
					else_if = {
						limit = { has_nzoth_wonder_trigger = yes }
						offmap_nzoth = {
							save_event_target_as = target_offmap
							offmap_ruler = { save_event_target_as = target_old_god }
						}
						ROOT = { set_character_flag = killed_nzoth_flag }
					}
					else = {
						offmap_yoggsaron = {
							save_event_target_as = target_offmap
							offmap_ruler = { save_event_target_as = target_old_god }
						}
						ROOT = { set_character_flag = killed_yogg_saron_flag }
					}
					
					#Destroys upgrades
					#C'Thun
					if = { limit = { has_wonder_upgrade = upgrade_old_god_cthun_1 } destroy_wonder_upgrade = upgrade_old_god_cthun_1 }
					if = { limit = { has_wonder_upgrade = upgrade_old_god_cthun_2 } destroy_wonder_upgrade = upgrade_old_god_cthun_2 }
					#N'Zoth
					if = { limit = { has_wonder_upgrade = upgrade_old_god_nzoth_1 } destroy_wonder_upgrade = upgrade_old_god_nzoth_1 }
					if = { limit = { has_wonder_upgrade = upgrade_old_god_nzoth_2 } destroy_wonder_upgrade = upgrade_old_god_nzoth_2 }
					#Yogg-Saron
					if = { limit = { has_wonder_upgrade = upgrade_old_god_yogg_saron_1 } destroy_wonder_upgrade = upgrade_old_god_yogg_saron_1 }
					if = { limit = { has_wonder_upgrade = upgrade_old_god_yogg_saron_2 } destroy_wonder_upgrade = upgrade_old_god_yogg_saron_2 }
					
					#Sets status
					event_target:target_offmap = { set_status = old_god_dead }
				}
			}
		}
	}
	
	option = {
		name = EVTOPTA_WCOME.200
		
		prestige = 1000
		
		if = {
			limit = { NOT = { has_nickname = nick_the_godslayer } }
			give_nickname = nick_the_godslayer
		}
		# Gives nick_twilight_of_the_gods if you personally killed all the Gods
		if = {
			limit = {
				has_character_flag = killed_cthun_flag
				has_character_flag = killed_nzoth_flag
				has_character_flag = killed_yogg_saron_flag
			}
			remove_nickname = yes
			give_nickname = nick_twilight_of_the_gods
		}
		
		if = {
			limit = {
				OR = {
					# Killed C'Thun and doesn't have bloodline
					AND = {
						event_target:target_wonder = { has_cthun_wonder_trigger = yes }
						NOT = { any_owned_bloodline = { has_bloodline_flag = godslayer_cthun_flag } }
					}
					# Killed N'Zoth and doesn't have bloodline
					AND = {
						event_target:target_wonder = { has_nzoth_wonder_trigger = yes }
						NOT = { any_owned_bloodline = { has_bloodline_flag = godslayer_nzoth_flag } }
					}
					# Killed Yogg-Saron and doesn't have bloodline
					AND = {
						event_target:target_wonder = { has_yogg_saron_wonder_trigger = yes }
						NOT = { any_owned_bloodline = { has_bloodline_flag = godslayer_yogg_saron_flag } }
					}
				}
			}
			if = {
				limit = { is_female = yes }
				create_bloodline = {
					type = godslayer_bloodline
					inheritance = matrilineal
				}
				new_bloodline = { save_event_target_as = target_bloodline }
			}
			else = {
				create_bloodline = {
					type = godslayer_bloodline
				}
				new_bloodline = { save_event_target_as = target_bloodline }
			}
			event_target:target_bloodline = {
				if = {
					limit = { event_target:target_wonder = { has_cthun_wonder_trigger = yes } }
					set_bloodline_flag = godslayer_cthun_flag
					set_description = godslayer_cthun_desc
				}
				else_if = {
					limit = { event_target:target_wonder = { has_nzoth_wonder_trigger = yes } }
					set_bloodline_flag = godslayer_nzoth_flag
					set_description = godslayer_nzoth_desc
				}
				else = {
					set_bloodline_flag = godslayer_yogg_saron_flag
					set_description = godslayer_yogg_saron_desc
				}
			}
		}
		
		any_player = { narrative_event = { id = WCOME.201 } }
	}
}
# Notification
narrative_event = {
	id = WCOME.201
	title = EVTTITLE_WCOME_201
	desc = {
		trigger = { event_target:target_wonder = { has_cthun_wonder_trigger = yes } }
		text = EVTDESC_WCOME_201
		picture = GFX_evt_cthun
	}
	desc = {
		trigger = { event_target:target_wonder = { has_nzoth_wonder_trigger = yes } }
		text = EVTDESC_WCOME_201
		picture = GFX_evt_nzoth
	}
	desc = {
		trigger = { event_target:target_wonder = { has_yogg_saron_wonder_trigger = yes } }
		text = EVTDESC_WCOME_201
		picture = GFX_evt_yogg_saron
	}
	border = GFX_event_narrative_frame_intrigue
	portrait = event_target:target_old_god
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_WCOME_201
		trigger = {
			NOT = { true_religion = old_gods_worship }
		}
	}
	option = {
		name = EVTOPTA_WCOME_201_old_gods
		trigger = {
			true_religion = old_gods_worship 
		}
	}
}

### Losing Old God province if following wrong religion
#on_wonder_owner_change
character_event = {
	id = WCOME.250
	
	is_triggered_only = yes
	hide_window = yes
	
	trigger = {
		NOT = { religion = old_gods_worship }
		FROM = {
			OR = {
				has_wonder_upgrade = upgrade_old_god_cthun_1
				has_wonder_upgrade = upgrade_old_god_cthun_2
				has_wonder_upgrade = upgrade_old_god_nzoth_1
				has_wonder_upgrade = upgrade_old_god_nzoth_2
				has_wonder_upgrade = upgrade_old_god_yogg_saron_1
				has_wonder_upgrade = upgrade_old_god_yogg_saron_2
			}
		}
	}
	
	immediate = {
		FROM = {
			save_event_target_as = target_wonder
			location = { save_event_target_as = target_prison_location }
		}
		character_event = { id = WCOME.252 }
	}
}
#on_character_convert_religion
character_event = {
	id = WCOME.251
	
	is_triggered_only = yes
	hide_window = yes
	
	only_playable = yes
	only_independent = yes
	
	trigger = {
		NOT = { religion = old_gods_worship }
		any_realm_wonder = {
			OR = {
				has_wonder_upgrade = upgrade_old_god_cthun_1
				has_wonder_upgrade = upgrade_old_god_cthun_2
				has_wonder_upgrade = upgrade_old_god_nzoth_1
				has_wonder_upgrade = upgrade_old_god_nzoth_2
				has_wonder_upgrade = upgrade_old_god_yogg_saron_1
				has_wonder_upgrade = upgrade_old_god_yogg_saron_2
			}
		}
	}
	
	immediate = {
		random_realm_wonder = {
			limit = {
				OR = {
					has_wonder_upgrade = upgrade_old_god_cthun_1
					has_wonder_upgrade = upgrade_old_god_cthun_2
					has_wonder_upgrade = upgrade_old_god_nzoth_1
					has_wonder_upgrade = upgrade_old_god_nzoth_2
					has_wonder_upgrade = upgrade_old_god_yogg_saron_1
					has_wonder_upgrade = upgrade_old_god_yogg_saron_2
				}
			}
			save_event_target_as = target_wonder
			location = { save_event_target_as = target_prison_location }
		}
		character_event = { id = WCOME.252 }
	}
}
#Pinged event
character_event = {
	id = WCOME.252
	desc = {
		trigger = { event_target:target_wonder = { has_cthun_wonder_trigger = yes } }
		text = EVTDESC_WCOME.252
		picture = GFX_evt_cthun
	}
	desc = {
		trigger = { event_target:target_wonder = { has_nzoth_wonder_trigger = yes } }
		text = EVTDESC_WCOME.252
		picture = GFX_evt_nzoth
	}
	desc = {
		trigger = { event_target:target_wonder = { has_yogg_saron_wonder_trigger = yes } }
		text = EVTDESC_WCOME.252
		picture = GFX_evt_yogg_saron
	}
	border = GFX_event_normal_frame_religion
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_WCOME.252
		if = {
			limit = { event_target:target_wonder = { has_cthun_wonder_trigger = yes } }
			e_herald_cthun = { holder_scope = { grant_title_no_opinion = c_ahnqiraj } }
		}
		else_if = {
			limit = { event_target:target_wonder = { has_nzoth_wonder_trigger = yes } }
			e_herald_nzoth = { holder_scope = { grant_title_no_opinion = c_sagehold } }
		}
		else = {
			e_herald_yoggsaron = { holder_scope = { grant_title_no_opinion = c_ulduar } }
		}
	}
}

### Freeing of Old God
# Ritual begins
character_event = {
	id = WCOME.300
	desc = {
		trigger = { event_target:target_wonder = { has_cthun_wonder_trigger = yes } }
		text = EVTDESC_WCOME_300
		picture = GFX_evt_cthun
	}
	desc = {
		trigger = { event_target:target_wonder = { has_nzoth_wonder_trigger = yes } }
		text = EVTDESC_WCOME_300
		picture = GFX_evt_nzoth
	}
	desc = {
		trigger = { event_target:target_wonder = { has_yogg_saron_wonder_trigger = yes } }
		text = EVTDESC_WCOME_300
		picture = GFX_evt_yogg_saron
	}
	border = GFX_event_normal_frame_religion
	portrait = event_target:target_old_god
	
	is_triggered_only = yes
	
	immediate = {
		#Picks wonder
		if = {
			limit = { NOT = { event_target:target_wonder = { always = yes } } }
			if = {
				limit = { has_character_modifier = follower_of_cthun }
				random_wonder = {
					limit = { has_cthun_wonder_trigger = yes }
					save_event_target_as = target_wonder
				}
			}
			else_if = {
				limit = { has_character_modifier = follower_of_nzoth }
				random_wonder = {
					limit = { has_nzoth_wonder_trigger = yes }
					save_event_target_as = target_wonder
				}
			}
			else = {
				random_wonder = {
					limit = { has_yogg_saron_wonder_trigger = yes }
					save_event_target_as = target_wonder
				}
			}
		}
		
		# Saves Old God's target depending on picked wonder
		if = {
			limit = { event_target:target_wonder = { has_cthun_wonder_trigger = yes } }
			offmap_cthun = {
				save_event_target_as = target_offmap
				offmap_ruler = { save_event_target_as = target_old_god }
			}
		}
		else_if = {
			limit = { event_target:target_wonder = { has_nzoth_wonder_trigger = yes } }
			offmap_nzoth = {
				save_event_target_as = target_offmap
				offmap_ruler = { save_event_target_as = target_old_god }
			}
		}
		else = {
			offmap_yoggsaron = {
				save_event_target_as = target_offmap
				offmap_ruler = { save_event_target_as = target_old_god }
			}
		}
		
		event_target:target_wonder = { location = { save_event_target_as = target_province } }
	}
	
	option = {
		name = EVTOPTA_WCOME.300
		
		if = {
			limit = { event_target:target_offmap = { has_status = old_god_imprisoned } }
			event_target:target_offmap = { set_status = old_god_partly_imprisoned }
			if = {
				limit = { event_target:target_wonder = { has_yogg_saron_wonder_trigger = yes } }
				set_global_flag = ulduar_opened_flag
			}
			clr_character_flag = freeing_old_god_flag
		}
		else_if = {
			limit = { event_target:target_offmap = { has_status = old_god_partly_imprisoned } }
			event_target:target_offmap = { set_status = old_god_partly_free }
			event_target:target_wonder = {
				add_upgrade_slots = 1
				if = {
					limit = { event_target:target_wonder = { has_cthun_wonder_trigger = yes } }
					add_wonder_upgrade = upgrade_old_god_cthun_1
				}
				else_if = {
					limit = { event_target:target_wonder = { has_nzoth_wonder_trigger = yes } }
					add_wonder_upgrade = upgrade_old_god_nzoth_1
				}
				else = {
					add_wonder_upgrade = upgrade_old_god_yogg_saron_1
				}
			}
			
			unleash_old_god_effect = yes
			
			any_player = { narrative_event = { id = WCOME.360 } }
		}
		else_if = {
			limit = { event_target:target_offmap = { has_status = old_god_partly_free } }
			event_target:target_offmap = { set_status = old_god_free }
			event_target:target_wonder = {
				if = {
					limit = { event_target:target_wonder = { has_cthun_wonder_trigger = yes } }
					destroy_wonder_upgrade = upgrade_old_god_cthun_1
					add_wonder_upgrade = upgrade_old_god_cthun_2
				}
				else_if = {
					limit = { event_target:target_wonder = { has_nzoth_wonder_trigger = yes } }
					destroy_wonder_upgrade = upgrade_old_god_nzoth_1
					add_wonder_upgrade = upgrade_old_god_nzoth_2
				}
				else = {
					destroy_wonder_upgrade = upgrade_old_god_yogg_saron_1
					add_wonder_upgrade = upgrade_old_god_yogg_saron_2
				}
			}
			clr_character_flag = freeing_old_god_flag
		}
	}
}
# Notifies Old God is free
narrative_event = {
	id = WCOME.360
	title = EVTTITLE_WCOME.360
	desc = {
		trigger = { event_target:target_wonder = { has_cthun_wonder_trigger = yes } }
		text = EVTDESC_WCOME_360
		picture = GFX_evt_cthun
	}
	desc = {
		trigger = { event_target:target_wonder = { has_nzoth_wonder_trigger = yes } }
		text = EVTDESC_WCOME_360
		picture = GFX_evt_nzoth
	}
	desc = {
		trigger = { event_target:target_wonder = { has_yogg_saron_wonder_trigger = yes } }
		text = EVTDESC_WCOME_360
		picture = GFX_evt_yogg_saron
	}
	border = GFX_event_narrative_frame_war
	portrait = event_target:target_old_god
	
	is_triggered_only = yes
	
	option = {
		trigger = { true_religion = old_gods_worship }
		name = EVTOPTA_WCOME.360
		tooltip = {
			if = {
				limit = { character = ROOT }
				unleash_old_god_effect = yes
			}
		}
	}
	option = {
		trigger = { NOT = { true_religion = old_gods_worship } }
		name = EVTOPTB_WCOME.360
	}
}
### Old God forces start their work
#Effect event
province_event = {
	id = WCOME.365
	
	is_triggered_only = yes
	hide_window = yes
	
	trigger = {
		NOT = { event_target:target_offmap = { has_status = old_god_dead } }
	}
	
	immediate = {
		event_target:target_offmap = { set_policy = old_god_working }
		
		any_player = { narrative_event = { id = WCOME.370 } }
	}
}
#Notification event
narrative_event = {
	id = WCOME.370
	title = EVTTITLE_WCOME.370
	desc = {
		trigger = { event_target:target_wonder = { has_cthun_wonder_trigger = yes } }
		text = EVTDESC_WCOME_370
		picture = GFX_evt_cthun
	}
	desc = {
		trigger = { event_target:target_wonder = { has_nzoth_wonder_trigger = yes } }
		text = EVTDESC_WCOME_370
		picture = GFX_evt_nzoth
	}
	desc = {
		trigger = { event_target:target_wonder = { has_yogg_saron_wonder_trigger = yes } }
		text = EVTDESC_WCOME_370
		picture = GFX_evt_yogg_saron
	}
	border = GFX_event_narrative_frame_war
	portrait = event_target:target_old_god
	
	is_triggered_only = yes
	
	option = {
		trigger = { true_religion = old_gods_worship }
		name = EVTOPTA_WCOME.360
	}
	option = {
		trigger = { NOT = { true_religion = old_gods_worship } }
		name = EVTOPTB_WCOME.360
	}
}

#Healed by Old Gods
character_event = {
	id = WCOME.500
	picture = GFX_evt_old_god_healing
	desc = EVTDESC_WCOME.500
	border = GFX_event_normal_frame_religion
	
	is_triggered_only = yes
	
	only_playable = yes
	
	#Heal wounds
	option = {
		name = EVTOPTA_WCOME.500
		trigger = {
			has_injury_trigger = yes
			NOR = {
				has_symptom_trigger = yes
				has_disease_trigger = yes
			}
			NOR = {
				trait = one_eyed
				trait = one_handed 
				trait = one_legged 
				trait = disfigured
				trait = inbred
				trait = blinded
				trait = infirm
				trait = clubfooted
				trait = hunchback
				trait = dwarf
				trait = eunuch
				trait = harelip
				trait = stutter
				trait = lisp
				trait = maimed
				trait = mangled
				trait = incapable
			}
		}
		heal_wounds_effect = yes
		hidden_effect = {
			random_list = {
				15 = {
					trigger = {
						potential_mutation_trigger = yes
						allow_mutation_trigger = yes
					}
					character_event = { id = WCVOD.300 }
				}
				85 = {}
			}
		}
	}
	
	#Heal diseases
	option = {
		name = EVTOPTB_WCOME.500
		trigger = {
			OR = {
				has_symptom_trigger = yes
				has_disease_trigger = yes
			}
		}
		#general disease clearing effects:
		remove_disease_trait_effect = yes
		remove_symptoms_effect = yes
		clear_disease_level_effect = yes
		remove_disease_flags_effect = yes
		hidden_effect = { remove_treatment_modifiers_effect = yes }
		#get heal wounds as a bonus
		heal_wounds_effect = yes
		hidden_effect = {
			random_list = {
				30 = {
					trigger = {
						potential_mutation_trigger = yes
						allow_mutation_trigger = yes
					}
					character_event = { id = WCVOD.300 }
				}
				70 = {}
			}
		}
	}
	
	#Heal deformities and missing body parts
	option = {
		name = EVTOPTC_WCOME.500
		trigger = {
			OR = {
				trait = one_eyed
				trait = one_handed 
				trait = one_legged 
				trait = disfigured
				trait = inbred
				trait = blinded
				trait = infirm
				trait = clubfooted
				trait = hunchback
				trait = dwarf
				trait = eunuch
				trait = harelip
				trait = stutter
				trait = lisp
				trait = maimed
				trait = mangled
				trait = incapable
			}
		}
		#Heals one of deformities or missing body parts
		random_list = {
			10 = {
				trigger = { trait = one_handed }
				heal_one_handed_effect = yes
				random_list = {
					40 = {
						trigger = {
							potential_mutation_trigger = yes
							allow_mutation_trigger = yes
							
							NOT = { trait = tentacle_arm_mutation }
						}
						add_tentacle_arm_mutation_effect = yes
					}
					40 = {
						trigger = {
							potential_mutation_trigger = yes
							allow_mutation_trigger = yes
							
							NOT = { trait = chela_hand_mutation }
						}
						add_chela_hand_mutation_effect = yes
					}
					20 = {
					}
				}
			}
			10 = {
				trigger = { trait = one_legged }
				heal_one_legged_effect = yes
			}
			10 = {
				trigger = { trait = one_eyed }
				heal_one_eyed_effect = yes
				random_list = {
					60 = {
						trigger = {
							potential_mutation_trigger = yes
							allow_mutation_trigger = yes
							
							NOT = { trait = eyes_mutation }
						}
						add_eyes_mutation_effect = yes
					}
					40 = {
						
					}
				}
			}
			10 = {
				trigger = { trait = disfigured }
				heal_disfigured_effect = yes
			}
			10 = {
				trigger = { trait = blinded }
				remove_trait = blinded
				random_list = {
					60 = {
						trigger = {
							potential_mutation_trigger = yes
							allow_mutation_trigger = yes
							
							NOT = { trait = eyes_mutation }
						}
						add_eyes_mutation_effect = yes
					}
					40 = {
						
					}
				}
			}
			10 = {
				trigger = { trait = infirm }
				remove_trait = infirm 
			}
			10 = {
				trigger = { trait = inbred }
				remove_trait = inbred
			}
			10 = {
				trigger = { trait = clubfooted }
				remove_trait = clubfooted
			}
			10 = {
				trigger = { trait = hunchback }
				remove_trait = hunchback
			}
			10 = {
				trigger = { trait = dwarf }
				remove_trait = dwarf
			}
			10 = {
				trigger = { trait = eunuch }
				remove_trait = eunuch
			}
			10 = {
				trigger = { trait = harelip }
				remove_trait = harelip
			}
			10 = {
				trigger = { trait = stutter }
				remove_trait = stutter
			}
			10 = {
				trigger = { trait = lisp }
				remove_trait = lisp
			}
			10 = {
				trigger = { trait = incapable }
				remove_trait = incapable
			}
			10 = {
				trigger = { trait = maimed }
				remove_trait = maimed
			}
			10 = {
				trigger = { trait = mangled }
				remove_trait = mangled
			}
		}
		#get heal wounds as a bonus
		heal_wounds_effect = yes
		hidden_effect = {
			random_list = {
				50 = {
					trigger = {
						potential_mutation_trigger = yes
						allow_mutation_trigger = yes
					}
					character_event = { id = WCVOD.300 }
				}
				50 = {}
			}
		}
	}
}