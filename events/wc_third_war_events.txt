namespace = WCTHW

### When shit happens, Medivh tries to fix it
# Special event that fires if some game rules are active
character_event = {
	id = WCTHW.49
	
	is_triggered_only = yes
	hide_window = yes
	
	ai = no
	
	trigger = {
		OR = {
			multiplayer = no
			is_multiplayer_host_character = yes
		}
		
		NOT = { has_global_flag = medivh_saved_world_flag }
		
		OR = {
			has_game_rule = {
				name = scourge_invasion
				value = off
			}
			has_game_rule = {
				name = legion_invasion
				value = off
			}
			has_game_rule = {
				name = old_god_black_empire_invasion
				value = off
			}
		}
		
		year = 605
	}
	
	immediate = {
		set_global_flag = medivh_saved_world_flag
		
		73 = { province_event = { id = WCTHW.50 } }
	}
}
# Regular event that fires when other events happen
province_event = {
	id = WCTHW.50

	is_triggered_only = yes
	hide_window = yes

	immediate = {
		# Exodus of the Horde
		province_event = { id = WCTHW.99 days = 3 }

		# Terror of the Tides (the naga)
		province_event = { id = WCVOD.699 days = 10 }

		# Foundation of Theramore
		province_event = { id = WCTHW.145 days = 120 }
	}
}
#######################
#	Horde
#######################

### Exodus of the Horde ###
# Medivh's Vision
# Ping event
province_event = {
	id = WCTHW.99

	is_triggered_only = yes
	hide_window = yes

	trigger = {
		NOT = { has_global_flag = exodus_horde_happened_flag }

		e_horde = { has_holder = no }
	}

	immediate = {
		set_global_flag = exodus_horde_happened_flag
		
		# Selects a new warchief
		random_character = {
			limit = {
				horde_exodus_warchief_trigger = yes
			}
			preferred_limit = {
				has_character_flag = is_thrall
			}
			preferred_limit = {
				ai = no
			}
			preferred_limit = {
				has_claim = e_horde
			}
			preferred_limit = {
				prestige = 1000
			}
			preferred_limit = {
				prestige = 750
			}
			preferred_limit = {
				prestige = 500
			}
			preferred_limit = {
				prestige = 250
			}
			
			add_trait = travelling
			
			narrative_event = { id = WCTHW.100 }
			break = yes
		}
		clr_global_flag = exodus_horde_happened_flag
	}
}
# Main event
narrative_event = {
	id = WCTHW.100
	title = EVTTITLE_WCTHW_100
	desc = EVTDESC_WCTHW_100
	picture = GFX_evt_durotar
	border = GFX_event_narrative_frame_diplomacy

	is_triggered_only = yes

	immediate = {
		log = "WCTHW.100 fired for [Root.GetBestName]"
		
		if = {
			limit = { is_ruler = yes }
			primary_title = { save_event_target_as = target_primary_title }
		}
	}

	# Sail to Kalimdor!
	option = {
		name = EVTOPTA_WCTHW_100

		add_trait_silently_kind_effect = yes
		remove_trait_silently_cruel_effect = yes
		remove_trait_envious_effect = yes

		hidden_effect = {
			# Invites another clan
			random_independent_ruler = {
				limit = {
					NOT = { has_character_flag = invitation_to_sail_is_sent_flag }
					horde_exodus_clan_trigger = yes
				}
				preferred_limit = {
					ai = no
				}
				set_character_flag = invitation_to_sail_is_sent_flag

				primary_title = { save_event_target_as = target_clan }
				letter_event = { id = WCTHW.105 days = 3 }
			}
			
			73 = { province_event = { id = WCTHW.109 days = 10 } }
		}
	}

	# NO!
	option = {
		name = EVTOPTB_WCTHW_100

		clr_global_flag = exodus_horde_happened_flag
		# If player declines, tries to find another warchief
		set_character_flag = exodus_horde_declined_flag
		73 = { province_event = { id = WCTHW.99 } }

		custom_tooltip = {
			text = stops_the_event_chain
		}
		remove_trait = travelling

		ai_chance = {
			factor = 0
		}
	}
}
# Do you want to sail to Kalimdor with FROM?
letter_event = {
	id = WCTHW.105
	desc = EVTDESC_WCTHW_105
	border = GFX_event_letter_frame_diplomacy

	is_triggered_only = yes
	
	trigger = {
		horde_exodus_clan_trigger = yes
	}
	
	immediate = {
		# add_trait = travelling
	}

	option = {
		name = ACCEPT

		FROM = { letter_event = { id = WCTHW.106 } }
		hidden_effect = {
			primary_title = {
				set_title_flag = clan_sailed_to_kalimdor_flag
			}
		}
	}
	option = {
		name = DECLINE
		
		# remove_trait = travelling

		ai_chance = {
			factor = 0
		}
	}
	
	after = {
		clr_character_flag = invitation_to_sail_is_sent_flag
	}
}
# FROM want to sail to Kalimdor with you
letter_event = {
	id = WCTHW.106
	desc = EVTDESC_WCTHW_106
	border = GFX_event_letter_frame_diplomacy

	is_triggered_only = yes

	option = {
		name = EXCELLENT
	}
}
# Storm, trolls and naga
# Ping event
province_event = {
	id = WCTHW.109

	is_triggered_only = yes
	hide_window = yes

	immediate = {
		if = {
			limit = { FROM = { is_alive = yes } }
			FROM = { narrative_event = { id = WCTHW.110 } }
			break = yes
		}
		if = {
			limit = {
				event_target:target_primary_title = {
					has_holder = yes
					holder_scope = {
						horde_exodus_warchief_trigger = yes
					}
				}
			}
			event_target:target_primary_title = {
				holder_scope = {
					add_trait = travelling
					
					narrative_event = { id = WCTHW.110 }
				}
			}
			break = yes
		}
		province_event = { id = WCTHW.119 days = 30 }
	}
}
# Main event
narrative_event = {
	id = WCTHW.110
	title = EVTTITLE_WCTHW_100
	desc = EVTDESC_WCTHW_110
	picture = GFX_evt_sea_serpent
	border = GFX_event_narrative_frame_war

	is_triggered_only = yes

	trigger = {
		2281 = {
			holder_scope = {
				top_liege = {
					horde_exodus_trolls_trigger = yes
				}
			}
		}
	}

	fail_trigger_effect = {
		# Skip event
		73 = { province_event = { id = WCTHW.119 days = 10 } }
	}

	immediate = {
		2281 = {
			holder_scope = {
				top_liege = {
					narrative_event = { id = WCTHW.111 }
					primary_title = { save_event_target_as = target_trolls }
				}
			}
		}
	}

	option = {
		name = EVTOPTA_WCTHW_110

		hidden_effect = { 73 = { province_event = { id = WCTHW.114 days = 5 } } }
	}
}
# Storm led orcs and naga to your shores
narrative_event = {
	id = WCTHW.111
	title = EVTTITLE_WCTHW_100
	desc = EVTDESC_WCTHW_111
	picture = GFX_evt_sea_serpent
	border = GFX_event_narrative_frame_war

	is_triggered_only = yes

	option = {
		name = EVTOPTA_WCTHW_111
	}
}
# Ships are almost repaired, do you want to sail without trolls?
# Ping event
province_event = {
	id = WCTHW.114

	is_triggered_only = yes
	hide_window = yes

	immediate = {
		if = {
			limit = { FROM = { is_alive = yes } }
			FROM = { narrative_event = { id = WCTHW.115 } }
			break = yes
		}
		if = {
			limit = {
				event_target:target_primary_title = {
					has_holder = yes
					holder_scope = {
						horde_exodus_warchief_trigger = yes
					}
				}
			}
			event_target:target_primary_title = {
				holder_scope = {
					add_trait = travelling
					
					narrative_event = { id = WCTHW.115 }
				}
			}
			break = yes
		}
		province_event = { id = WCTHW.119 days = 30 }
	}
}
# Main event
narrative_event = {
	id = WCTHW.115
	title = EVTTITLE_WCTHW_100
	desc = EVTDESC_WCTHW_115
	picture = GFX_evt_sea_serpent
	border = GFX_event_narrative_frame_war

	is_triggered_only = yes
	
	trigger = {
		2281 = {
			holder_scope = {
				top_liege = {
					horde_exodus_trolls_trigger = yes
				}
			}
		}
	}

	fail_trigger_effect = {
		# Skip event
		73 = { province_event = { id = WCTHW.119 days = 10 } }
	}

	# No, we will not abandon them!
	option = {
		name = EVTOPTA_WCTHW_115

		add_trait_silently_brave_effect = yes
		remove_trait_silently_craven_effect = yes
		
		prestige = 100

		2281 = {
			show_scope_change = no
			
			holder_scope = {
				show_scope_change = no
				
				top_liege = {
					show_scope_change = no
					
					opinion = { modifier = opinion_very_grateful who = ROOT years = 10 }
					event_target:target_trolls = { set_title_flag = trolls_sailed_to_kalimdor_flag }
				}
			}
		}
	}
	# Retreat to the ships!
	option = {
		name = EVTOPTB_WCTHW_115
		
		prestige = -100

		2281 = {
			show_scope_change = no
			
			holder_scope = {
				show_scope_change = no
				
				top_liege = {
					show_scope_change = no
					
					opinion = { modifier = opinion_hate who = ROOT years = 10 }
				}
			}
		}

		ai_chance = {
			factor = 0
		}
	}

	after = {
		2281 = {
			holder_scope = {
				top_liege = {
					narrative_event = { id = WCTHW.116 }
				}
			}
		}
		73 = { province_event = { id = WCTHW.119 days = 10 } }
	}
}
# Notifies about what orcs have done
narrative_event = {
	id = WCTHW.116
	title = EVTTITLE_WCTHW_100
	desc = {
		trigger = { event_target:target_trolls = { has_title_flag = trolls_sailed_to_kalimdor_flag } }
		text = EVTDESC_WCTHW_116_case_01
	}
	desc = {
		trigger = { event_target:target_trolls = { NOT = { has_title_flag = trolls_sailed_to_kalimdor_flag } } }
		text = EVTDESC_WCTHW_116_case_02
	}
	picture = GFX_evt_sea_serpent
	border = GFX_event_narrative_frame_war

	is_triggered_only = yes

	immediate = {
		if = {
			limit = { event_target:target_trolls = { NOT = { has_title_flag = trolls_sailed_to_kalimdor_flag } } }
			
			set_character_flag = force_naga_invasion_flag
			character_event = { id = WCWAR.705 }
		}
	}

	option = {
		name = {
			trigger = { event_target:target_trolls = { has_title_flag = trolls_sailed_to_kalimdor_flag } }
			text = EVTOPTA_WCTHW_116_case_01
		}
		name = {
			trigger = { event_target:target_trolls = { NOT = { has_title_flag = trolls_sailed_to_kalimdor_flag } } }
			text = EVTOPTA_WCTHW_116_case_02
		}
	}
}
# End of voyage
# Ping event
province_event = {
	id = WCTHW.119

	is_triggered_only = yes
	hide_window = yes

	immediate = {
		if = {
			limit = { FROM = { is_alive = yes } }
			FROM = { narrative_event = { id = WCTHW.120 } }
			break = yes
		}
		if = {
			limit = {
				event_target:target_primary_title = {
					has_holder = yes
					holder_scope = {
						horde_exodus_warchief_trigger = yes
					}
				}
			}
			event_target:target_primary_title = {
				holder_scope = {
					add_trait = travelling
					
					narrative_event = { id = WCTHW.120 }
				}
			}
			break = yes
		}
		create_character = {
			female = no
			dynasty = none
			culture = frostwolf religion = orcish_shamanism
			trait = creature_orc
			trait = brilliant_strategist
			trait = class_shaman_8
			trait = kind trait = just trait = brave
			random_traits = yes
			age = 25
		}
		new_character = {
			narrative_event = { id = WCTHW.120 }
		}
	}
}
# Main event
narrative_event = {
	id = WCTHW.120
	title = EVTTITLE_WCTHW_100
	desc = EVTDESC_WCTHW_120
	picture = GFX_evt_durotar
	border = GFX_event_narrative_frame_diplomacy

	is_triggered_only = yes

	major = yes
	major_trigger = {
		ai = no
	}
	show_root = yes
	hide_from = yes
	hide_new = yes

	immediate = {
		# Used in scripted effects
		save_event_target_as = target_settler
		
		remove_trait = travelling
		
		if = {
			limit = {
				is_ruler = yes
				NOR = {
					is_feudal = yes
					is_tribal = yes
				}
			}
			abdicate = yes
		}
		
		c_orgrimmar = {
			# event_target:target_settler and its people settle here
			settle_as_target_settler_effect = yes
		}
		
		if = {
			limit = { is_government_potential = tribal_monarchy_government }
			set_government_type = tribal_monarchy_government
		}
		
		# If you're not independent ruler, gives old titles to liege
		give_old_titles_to_heir_effect = yes
		
		d_orgrimmar = {
			any_direct_de_jure_vassal_title = {
				# event_target:target_settler and its people settle here
				settle_as_target_settler_effect = yes
			}
			grant_title_no_opinion = ROOT
		}
		d_drygulch = {
			any_direct_de_jure_vassal_title = {
				# event_target:target_settler and its people settle here
				settle_as_target_settler_effect = yes
			}
		}
		d_sarkoth = {
			any_direct_de_jure_vassal_title = {
				# event_target:target_settler and its people settle here
				settle_as_target_settler_effect = yes
			}
		}
		
		c_orgrimmar = {
			# Declares war against player
			target_settler_declare_war_effect = yes
		}
		
		clear_settler_flag_effect = yes
		
		# Spawns army for start
		spawn_colonial_troops_effect = yes
		
		e_horde = { set_preferred_capital = c_orgrimmar }	# Orgrimmar
		capital = c_orgrimmar									# Orgrimmar
		
		# If political factions are disabled, create e_horde as normal title
		if = {
			limit = {
				NOT = {
					has_game_rule = {
						name = political_factions
						value = disabled
					}
				}
			}
			narrative_event = { id = WCPLF.100 }			# Foundation of the Horde (faction)
		}
		else = {
			create_e_horde_effect = yes
		}
		
		# Grants titles to trolls and invited clan
		73 = { province_event = { id = WCTHW.125 days = 1 } } # Needs 1 day to prevent crash
	}

	option = {
		trigger = {
			OR = {
				character = ROOT
				primary_title = {
					OR = {
						has_title_flag = clan_sailed_to_kalimdor_flag
						has_title_flag = trolls_sailed_to_kalimdor_flag
					}
				}
			}
		}
		name = EVTOPTA_WCTHW_120
		
		# if = {
			# limit = { trait = travelling }
			# remove_trait = travelling
		# }
	}

	option = {
		trigger = {
			NOR = {
				character = ROOT
				primary_title = {
					OR = {
						has_title_flag = clan_sailed_to_kalimdor_flag
						has_title_flag = trolls_sailed_to_kalimdor_flag
					}
				}
			}
		}
		name = INTERESTING
	}
}
# Grants titles to trolls and invited clan
province_event = {
	id = WCTHW.125
	
	is_triggered_only = yes
	hide_window = yes
	
	immediate = {
		# Grants titles to trolls
		event_target:target_trolls = {
			if = {
				limit = { has_title_flag = trolls_sailed_to_kalimdor_flag }

				clr_title_flag = trolls_sailed_to_kalimdor_flag

				holder_scope = {
					# Used in scripted effects
					save_event_target_as = target_settler
					
					c_echo_isle = {
						# event_target:target_settler and its people settle here
						settle_as_target_settler_effect = yes
					}
					d_echo_isles = {
						any_direct_de_jure_vassal_title = {
							# event_target:target_settler and its people settle here
							settle_as_target_settler_effect = yes
						}
					}
					
					# If you're not independent ruler, gives old titles to liege
					give_old_titles_to_heir_effect = yes
					
					c_echo_isle = {
						# Declares war against player
						target_settler_declare_war_effect = yes
					}
		
					clear_settler_flag_effect = yes
					
					# Spawns army for start
					spawn_colonial_troops_effect = yes
					
					create_character = {
						female = yes
						dynasty = none
						culture = naga religion = old_gods_worship
						trait = creature_naga
						trait = proud trait = cruel
						random_traits = yes
						age = 300
						trait = being_void
					}
					new_character = {
						remove_education_effect = yes
						random_list = {
							10 = {
								add_trait = detached_priest
								add_trait = class_mage_3
							}
							30 = {
								add_trait = martial_cleric
								add_trait = class_mage_4
							}
							45 = {
								add_trait = scholarly_theologian
								add_trait = class_mage_5
							}
							15 = {
								add_trait = mastermind_theologian
								add_trait = class_mage_6
							}
						}
						save_event_target_as = target_naga
					}
					any_demesne_title = {
						limit = {
							lower_tier_than = DUKE

							region = world_south_seas
						}
						usurp_title_plus_barony_if_unlanded_and_vassals = { target = event_target:target_naga type = invasion }
						location = {
							culture = event_target:target_naga
							religion = event_target:target_naga
						}
					}

					event_target:target_naga = {
						if = {
							limit = { is_government_potential = black_pact_government }
							set_black_pact_government_effect = yes
						}

						set_defacto_liege = THIS
					}
				}
			}
		}
		
		# Grants title to invited clan
		event_target:target_clan = {
			if = {
				limit = { has_title_flag = clan_sailed_to_kalimdor_flag }
				
				clr_title_flag = clan_sailed_to_kalimdor_flag
				
				holder_scope = {
					ROOT = {
						show_scope_change = no
						random_demesne_title = {
							limit = {
								NOT = { title = c_orgrimmar }
								lower_tier_than = DUKE

								de_jure_liege_or_above = k_barrens
							}
							preferred_limit = {
								tier = COUNT
							}
							
							grant_title = { target = PREVPREV }
							location = {
								culture = PREVPREVPREV
								religion = PREVPREVPREV
							}
						}
						set_defacto_vassal = PREV
					}
					
					# Spawns army for start
					spawn_colonial_troops_effect = yes
				}
			}
		}
	}
}

### Foundation of Theramore ###
# Medivh's Vision
# Ping event
province_event = {
	id = WCTHW.145

	is_triggered_only = yes
	hide_window = yes

	trigger = {
		NOT = { has_global_flag = foundation_theramore_happened_flag }
	}

	immediate = {
		set_global_flag = foundation_theramore_happened_flag
		
		# Selects a leader of Theramore
		random_character = {
			limit = {
				theramore_founding_leader_trigger = yes
			}
			preferred_limit = {
				has_character_flag = is_jaina
			}
			preferred_limit = {
				ai = no
			}
			preferred_limit = {
				trait = kind
			}
			preferred_limit = {
				prestige = 1000
			}
			preferred_limit = {
				prestige = 750
			}
			preferred_limit = {
				prestige = 500
			}
			preferred_limit = {
				prestige = 250
			}
			add_trait = travelling
			
			narrative_event = { id = WCTHW.150 }
			break = yes
		}
		clr_global_flag = foundation_theramore_happened_flag
	}
}
# Main event
narrative_event = {
	id = WCTHW.150
	title = EVTTITLE_WCTHW_150
	desc = EVTDESC_WCTHW_150
	picture = GFX_evt_merchant_ship_at_sea_republic
	border = GFX_event_narrative_frame_diplomacy

	is_triggered_only = yes

	immediate = {
		log = "WCTHW.150 fired for [Root.GetBestName]"
		
		if = {
			limit = { is_ruler = yes }
			primary_title = { save_event_target_as = target_primary_title }
		}
	}

	# I will save these people!
	option = {
		name = EVTOPTA_WCTHW_150

		add_trait_silently_kind_effect = yes
		remove_trait_silently_cruel_effect = yes
		remove_trait_envious_effect = yes

		hidden_effect = {
			random_playable_ruler = {
				limit = {
					NOT = { has_character_flag = invitation_to_sail_is_sent_flag }
					theramore_founding_refugees_trigger = yes
				}
				preferred_limit = {
					ai = no
				}
				
				set_character_flag = invitation_to_sail_is_sent_flag

				primary_title = { save_event_target_as = target_refugees }
				letter_event = { id = WCTHW.151 days = 3 }
			}
			
			73 = { province_event = { id = WCTHW.154 days = 30 } }
		}
	}

	# This is madness!
	option = {
		name = EVTOPTB_WCTHW_150

		clr_global_flag = foundation_theramore_happened_flag
		# If player declines, tries to find another leader
		set_character_flag = foundation_theramore_declined_flag
		
		remove_trait = travelling
		
		73 = { province_event = { id = WCTHW.145 } }

		ai_chance = {
			factor = 0
		}
	}
}
# Do you want to sail to Kalimdor with FROM?
letter_event = {
	id = WCTHW.151
	desc = EVTDESC_WCTHW_105
	border = GFX_event_letter_frame_diplomacy

	is_triggered_only = yes
	
	trigger = {
		theramore_founding_refugees_trigger = yes
	}
	
	immediate = {
		# add_trait = travelling
	}

	option = {
		name = ACCEPT

		FROM = { letter_event = { id = WCTHW.152 } }
		hidden_effect = {
			primary_title = {
				set_title_flag = refugees_sailed_to_kalimdor_flag
			}
		}
	}
	option = {
		name = DECLINE
		
		# remove_trait = travelling

		ai_chance = {
			factor = 0
		}
	}
	
	after = {
		clr_character_flag = invitation_to_sail_is_sent_flag
	}
}
# FROM want to sail to Kalimdor with you
letter_event = {
	id = WCTHW.152
	desc = EVTDESC_WCTHW_106
	border = GFX_event_letter_frame_diplomacy

	is_triggered_only = yes

	option = {
		name = EXCELLENT
	}
}
# End of voyage
# Ping event
province_event = {
	id = WCTHW.154

	is_triggered_only = yes
	hide_window = yes

	immediate = {
		if = {
			limit = { FROM = { is_alive = yes } }
			FROM = { narrative_event = { id = WCTHW.155 } }
			break = yes
		}
		if = {
			limit = {
				event_target:target_primary_title = {
					has_holder = yes
					holder_scope = {
						theramore_founding_leader_trigger = yes
					}
				}
			}
			event_target:target_primary_title = {
				holder_scope = {
					add_trait = travelling
					
					narrative_event = { id = WCTHW.155 }
				}
			}
			break = yes
		}
		create_character = {
			female = yes
			dynasty = none
			culture = tirassian religion = holy_light
			trait = creature_human
			trait = mastermind_theologian
			trait = class_mage_8
			trait = kind trait = just trait = brave
			random_traits = yes
			age = 30
		}
		new_character = {
			narrative_event = { id = WCTHW.155 }
		}
	}
}
# Main event
narrative_event = {
	id = WCTHW.155
	title = EVTTITLE_WCTHW_150
	desc = EVTDESC_WCTHW_155
	picture = GFX_evt_merchant_ship_at_sea_republic
	border = GFX_event_narrative_frame_diplomacy

	is_triggered_only = yes

	major = yes
	major_trigger = {
		ai = no
	}
	show_root = yes
	hide_from = yes
	hide_new = yes

	immediate = {
		# Used in scripted effects
		save_event_target_as = target_settler
		
		remove_trait = travelling
		
		if = {
			limit = {
				is_ruler = yes
				NOR = {
					is_feudal = yes
					is_tribal = yes
				}
			}
			abdicate = yes
		}
		
		c_theramore = {
			# event_target:target_settler and its people settle here
			settle_as_target_settler_effect = yes
		}
		
		# If you're not independent ruler, gives old titles to liege
		give_old_titles_to_heir_effect = yes
		
		d_theramore = {
			any_direct_de_jure_vassal_title = {
				# event_target:target_settler and its people settle here
				settle_as_target_settler_effect = yes
			}
		}
		
		c_theramore = {
			# Declares war against player
			target_settler_declare_war_effect = yes
		}
		
		clear_settler_flag_effect = yes
		
		# Spawns army for start
		spawn_colonial_troops_effect = yes
		
		# Grants titles to refugees
		73 = { province_event = { id = WCTHW.160 days = 1 } } # Needs 1 day to prevent crash
	}

	option = {
		trigger = { character = ROOT }
		name = EVTOPTA_WCTHW_155
	}

	option = {
		trigger = { NOT = { character = ROOT } }
		name = INTERESTING
	}
}
# Grants titles to refugees
province_event = {
	id = WCTHW.160
	
	is_triggered_only = yes
	hide_window = yes
	
	immediate = {
		event_target:target_refugees = {
			if = {
				limit = { has_title_flag = refugees_sailed_to_kalimdor_flag }
				clr_title_flag = refugees_sailed_to_kalimdor_flag
				
				holder_scope = {
					# Used in scripted effects
					save_event_target_as = target_settler
					
					c_fray = {
						# event_target:target_settler and its people settle here
						settle_as_target_settler_effect = yes
					}
					
					# If you're not independent ruler, gives old titles to liege
					give_old_titles_to_heir_effect = yes
					
					c_fray = {
						# Declares war against player
						target_settler_declare_war_effect = yes
					}
					
					clear_settler_flag_effect = yes
					
					# Spawns army for start
					spawn_colonial_troops_effect = yes
				}
			}
		}
	}
}

### Corruption of the Sunwell ###
# on_siege_won_leader
character_event = {
	id = WCTHW.998

	is_triggered_only = yes
	hide_window = yes
	
	only_playable = yes

	trigger = {
		evil_public_religion_trigger = yes
		FROM = {
			tier = BARON
			is_capital = yes

			location = {
				has_wonder = wonder_sunwell
				wonder = {
					NOR = {
						has_wonder_flag = wonder_lightwell_flag
						has_wonder_flag = wonder_deathwell_flag
						has_wonder_flag = wonder_felwell_flag
						has_wonder_flag = wonder_voidwell_flag
					}
				}
			}
			holder_scope = { top_liege = { any_current_enemy = { character = ROOT } } }
		}
	}

	immediate = {
		narrative_event = { id = WCTHW.1000 }
	}
}
narrative_event = {
	id = WCTHW.1000
	title = EVTTITLE_WCTHW_1000
	picture = GFX_evt_corrupted_sunwell_fel
	desc = {
		trigger = {
			ROOT = {
				OR = {
					religion = orcish_fel
					religion = burning_legion_religion
				}
			}
		}
		text = EVTDESC_WCTHW_1000
		picture = GFX_evt_corrupted_sunwell_fel
	}
	desc = {
		trigger = {
			ROOT = {
				OR = {
					religion = death_god
					religion = old_gods_worship
				}
			}
		}
		text = EVTDESC_WCTHW_1000
		picture = GFX_evt_corrupted_sunwell_scourge
	}
	border = GFX_event_narrative_frame_war

	major = yes
	major_trigger = {
		ai = no
	}
	show_root = yes
	
	is_triggered_only = yes

	immediate = {
		ROOT = {
			save_event_target_as = target_corruptor
			
			trigger_switch = {
				on_trigger = religion
				orcish_fel = { add_felwell_effect = yes }
				burning_legion_religion = { add_felwell_effect = yes }
				death_god = { add_deathwell_effect = yes }
				old_gods_worship = { add_voidwell_effect = yes }
			}
		}
		73 = { province_event = { id = WCTHW.1009 days = 60 } }
	}
	
	option = {	# Fools!
		trigger = { evil_true_religion_trigger = yes }
		name = FOOLS
	}
	
	option = {	# Excellent!
		trigger = {
			evil_true_religion_trigger = no
			OR = {
				character = ROOT
				true_religion_associated_with_sunwell_trigger = yes
			}
		}
		name = EXCELLENT
	}

	option = {	# Alas!
		trigger = {
			evil_true_religion_trigger = no
			NOR = {
				character = ROOT
				true_religion_associated_with_sunwell_trigger = yes
			}
		}
		name = ALAS
	}
	
	option = {
		trigger = {
			evil_true_religion_trigger = no
			NOT = { character = ROOT }
		}
		name = I_SEE
	}

	after = {
		if = {
			limit = { character = ROOT }
			prestige = 500
			piety = 500
		}
	}
}

### Renaming of high elves ###
province_event = {
	id = WCTHW.1009

	is_triggered_only = yes
	hide_window = yes

	trigger = {
		NOT = { has_global_flag = blood_elves_happened_flag }
	}

	immediate = {
		# High King of Quel'Thalas
		if = {
			limit = {
				e_quelthalas = {
					has_holder = yes
					holder_scope = {
						NOT = { character = event_target:target_corruptor }	# One who corrupted the well
						
						trait = creature_high_elf
						evil_public_religion_trigger = no
					}
				}
			}
			e_quelthalas = { holder_scope = { narrative_event = { id = WCTHW.1010 } } }
		}
		# King of Quel'Thalas
		else_if = {
			limit = {
				k_quelthalas = {
					has_holder = yes
					holder_scope = {
						NOT = { character = event_target:target_corruptor }	# One who corrupted the well
						
						trait = creature_high_elf
						evil_public_religion_trigger = no
					}
				}
			}
			k_quelthalas = { holder_scope = { narrative_event = { id = WCTHW.1010 } } }
		}
		else= {
			# Top liege of the Sunwell
			394 = {
				wonder = {
					wonder_owner = {
						if = {
							limit = {
								NOT = { character = event_target:target_corruptor }	# One who corrupted the well
								
								trait = creature_high_elf
								evil_public_religion_trigger = no
							}
							narrative_event = { id = WCTHW.1010 }
						}
					}
				}
			}
		}
	}
}
narrative_event = {
	id = WCTHW.1010
	title = EVTTITLE_WCTHW_1010
	picture = GFX_evt_sunwell
	desc = EVTDESC_WCTHW_1010
	border = GFX_event_narrative_frame_diplomacy

	is_triggered_only = yes

	immediate = {
		set_global_flag = blood_elves_happened_flag
	}

	option = {
		name = EVTOPTA_WCTHW_1010

		convert_this_and_vassals_to_blood_elves_effect = yes

		custom_tooltip = {
			text = proclaims_your_people_the_blood_elves
			hidden_effect = { narrative_event = { id = WCTHW.1015 } }
		}
	}
	option = {
		name = EVTOPTB_WCTHW_1010

		ai_chance = {
			factor = 0
		}
	}
}
narrative_event = {
	id = WCTHW.1015
	title = EVTTITLE_WCTHW_1015
	picture = GFX_evt_sunwell
	desc = EVTDESC_WCTHW_1015
	border = GFX_event_narrative_frame_diplomacy

	is_triggered_only = yes

	major = yes
	major_trigger = {
		OR = {
			ai = no
			trait = creature_high_elf
			trait = creature_blood_elf
		}
	}
	show_root = yes
	
	option = {
		trigger = {
			OR = {
				character = event_target:target_corruptor	# One who corrupted the well
				evil_true_religion_trigger = yes
			}
		}
		
		name = FOOLS
	}

	option = {
		trigger = {
			NOT = {
				character = event_target:target_corruptor	# One who corrupted the well
				evil_true_religion_trigger = yes
			}
			OR = {
				trait = creature_high_elf
				trait = creature_blood_elf
			}
		}
		name = EVTOPTA_WCTHW_1010
		
		convert_this_and_vassals_to_blood_elves_effect = yes

		ai_chance = {
			factor = 90
			modifier = {
				factor = 0.01
				NOT = { location = { region = world_eastern_kingdoms_quelthalas } }
			}
		}
	}
	option = {
		trigger = {
			NOT = {
				character = event_target:target_corruptor	# One who corrupted the well
				evil_true_religion_trigger = yes
			}
			trait = creature_high_elf
		}
		name = EVTOPTB_WCTHW_1010

		ai_chance = {
			factor = 10
		}
	}
	option = {
		trigger = {
			NOT = {
				character = event_target:target_corruptor	# One who corrupted the well
				evil_true_religion_trigger = yes
				trait = creature_high_elf
				trait = creature_blood_elf
			}
		}
		name = EVTOPTC_WCTHW_1015	# Reaction of other races
	}
}

# Start event
narrative_event = {
	id = WCTHW.1100
	picture = GFX_evt_sunwell
	title = EVTTITLE_WCTHW_1100
	desc = EVTDESC_WCTHW_1100
	border = GFX_event_narrative_frame_religion

	is_triggered_only = yes

	option = {
		name = EVTOPTA_WCTHW_1100

		if = {
			limit = {
				OR = {
					religion_group = fel_group
					religion_group = void_group
					has_character_flag = consuming_fel_magic_flag
					has_character_flag = consuming_void_magic_flag
				}
			}
			hidden_effect = { 73 = { province_event = { id = WCTHW.1105 days = 15 } } }
		}
		else = {
			hidden_effect = { 73 = { province_event = { id = WCTHW.1110 days = 15 } } }
		}
	}
}
# Stop the restoring of the Sunwell
character_event = {
	id = WCTHW.1101

	is_triggered_only = yes
	hide_window = yes

	trigger = {
		OR = {
			AND = {
				NOR = {
					has_global_flag = voidwell_restoring_flag
					has_global_flag = felwell_restoring_flag
				}
				evil_public_religion_trigger = yes
			}
			AND =  {
				has_global_flag = voidwell_restoring_flag
				NOR = {
					religion_group = void_group
					has_character_flag = consuming_void_magic_flag
				}
			}
			AND = {
				has_global_flag = felwell_restoring_flag
				NOR = {
					religion_group = fel_group
					has_character_flag = consuming_fel_magic_flag
				}
			}
		}
	}

	immediate = {
		clr_global_flag = sunwell_is_being_restored_flag
		clr_global_flag = voidwell_restoring_flag
		clr_global_flag = felwell_restoring_flag
		clr_global_flag = sunwell_naaru_spark_flag
		character_event = { id = WCTHW.1102 }
	}
}
character_event = {
	id = WCTHW.1102
	picture = GFX_evt_sunwell
	desc =  EVTDESC_WCTHW_1102
	border = GFX_event_normal_frame_war

	is_triggered_only = yes

	option = {
		name = I_SEE
	}
}
# Arcane magic let us down: check event
province_event = {
	id = WCTHW.1105

	is_triggered_only = yes
	hide_window = yes

	immediate = {
		event_target:target_sunwell = {
			wonder_owner = {
				# character_event = { id = WCTHW.1101 }
				if = {
					limit = { has_global_flag = sunwell_is_being_restored_flag }
					narrative_event = { id = WCTHW.1106 }
				}
			}
		}
	}
}
# Arcane magic let us down: main event
narrative_event = {
	id = WCTHW.1106
	picture = GFX_evt_sunwell
	title = EVTTITLE_WCTHW_1100
	desc = EVTDESC_WCTHW_1106
	border = GFX_event_narrative_frame_religion

	is_triggered_only = yes

	option = {
		trigger = {
			OR = {
				religion_group = void_group
				has_character_flag = consuming_void_magic_flag
			}
		}
		name = EVTOPTA_WCTHW_1106

		if = {
			limit = { religion_group = void_group }
			if = { limit = { has_secret_religion = yes } clear_secret_religion = yes }
		}
		else_if = {
			limit = { secret_religion_group = void_group }
			convert_to_secret_religion = yes
		}
		else = {
			if = { limit = { has_secret_religion = yes } clear_secret_religion = yes }
			religion = voidfarer
		}

		hidden_effect = {
			set_global_flag = voidwell_restoring_flag
			73 = { province_event = { id = WCTHW.1115 days = 60 } }
		}

		ai_chance = {
			factor = 40
			modifier = {
				factor = 0.5
				NOT = { true_religion_group = void_group }
			}
			modifier = {
				factor = 0
				NOT = { trait = cynical }
			}
		}
	}
	option = {
		trigger = {
			OR = {
				religion_group = fel_group
				has_character_flag = consuming_fel_magic_flag
			}
		}
		name = EVTOPTB_WCTHW_1106

		if = {
			limit = { religion_group = fel_group }
			if = { limit = { has_secret_religion = yes } clear_secret_religion = yes }
		}
		else_if = {
			limit = { secret_religion_group = fel_group }
			convert_to_secret_religion = yes
		}
		else = {
			if = { limit = { has_secret_religion = yes } clear_secret_religion = yes }
			religion = illidari
		}

		hidden_effect = {
			set_global_flag = felwell_restoring_flag
			73 = { province_event = { id = WCTHW.1115 days = 60 } }
		}

		ai_chance = {
			factor = 40
			modifier = {
				factor = 0.5
				NOT = { true_religion_group = fel_group }
			}
			modifier = {
				factor = 0
				NOT = { trait = cynical }
			}
		}
	}
	option = {
		trigger = { evil_public_religion_trigger = no }
		name = EVTOPTC_WCTHW_1106

		hidden_effect = { 73 = { province_event = { id = WCTHW.1110 days = 15 } } }

		ai_chance = {
			factor = 60
		}
	}
}
# Anveena: check event
province_event = {
	id = WCTHW.1110

	is_triggered_only = yes
	hide_window = yes

	immediate = {
		event_target:target_sunwell = {
			wonder_owner = {
				character_event = { id = WCTHW.1101 }
				if = {
					limit = { has_global_flag = sunwell_is_being_restored_flag }
					narrative_event = { id = WCTHW.1111 }
				}
			}
		}
	}
}
# Anveena: main event
narrative_event = {
	id = WCTHW.1111
	picture = GFX_evt_sunwell
	title = EVTTITLE_WCTHW_1100
	desc = EVTDESC_WCTHW_1111
	border = GFX_event_narrative_frame_religion

	is_triggered_only = yes

	option = {
		name = EVTOPTA_WCTHW_1111

		hidden_effect = { 73 = { province_event = { id = WCTHW.1115 days = 60 } } }
	}
}
# Start of the restoring: check event
province_event = {
	id = WCTHW.1115

	is_triggered_only = yes
	hide_window = yes

	immediate = {
		event_target:target_sunwell = {
			wonder_owner = {
				character_event = { id = WCTHW.1101 }
				if = {
					limit = { has_global_flag = sunwell_is_being_restored_flag }
					narrative_event = { id = WCTHW.1116 }
				}
			}
		}
	}
}
# Start of the restoring: main event
narrative_event = {
	id = WCTHW.1116
	picture = GFX_evt_sunwell
	title = EVTTITLE_WCTHW_1100
	desc = {
		trigger = {
			NOR = {
				has_global_flag = felwell_restoring_flag
				has_global_flag = voidwell_restoring_flag
			}
		}
		text = EVTDESC_WCTHW_1116_normal
	}
	desc = {
		trigger = { has_global_flag = voidwell_restoring_flag }
		text = EVTDESC_WCTHW_1116_void
		picture = GFX_evt_corrupted_sunwell_scourge
	}
	desc = {
		trigger = { has_global_flag = felwell_restoring_flag }
		text = EVTDESC_WCTHW_1116_fel
		picture = GFX_evt_corrupted_sunwell_fel
	}
	border = GFX_event_narrative_frame_religion

	is_triggered_only = yes

	option = {
		name = {
			trigger = {
				NOR = {
					has_global_flag = felwell_restoring_flag
					has_global_flag = voidwell_restoring_flag
				}
			}
			text = EVTOPTA_WCTHW_1100
		}
		name = {
			trigger = { has_global_flag = voidwell_restoring_flag }
			text = EVTOPTA_WCTHW_1116_void
		}
		name = {
			trigger = { has_global_flag = felwell_restoring_flag }
			text = EVTOPTA_WCTHW_1116_fel
		}

		if = {
			limit = {
				NOR = {
					has_global_flag = felwell_restoring_flag
					has_global_flag = voidwell_restoring_flag
				}
				has_global_flag = draenei_fell_on_azeroth_flag
			}
			hidden_effect = { 73 = { province_event = { id = WCTHW.1120 days = 30 } } }
		}
		else = { 73 = { province_event = { id = WCTHW.1125 days = 60 } } }
	}
}
# Spark of naaru: check event
province_event = {
	id = WCTHW.1120

	is_triggered_only = yes
	hide_window = yes

	immediate = {
		event_target:target_sunwell = {
			wonder_owner = {
				character_event = { id = WCTHW.1101 }
				if = {
					limit = { has_global_flag = sunwell_is_being_restored_flag }
					narrative_event = { id = WCTHW.1121 }
				}
			}
		}
	}
}
# Spark of naaru: main event
narrative_event = {
	id = WCTHW.1121
	picture = GFX_evt_sunwell
	title = EVTTITLE_WCTHW_1100
	desc = EVTDESC_WCTHW_1121
	border = GFX_event_narrative_frame_religion

	is_triggered_only = yes

	option = {
		name = EVTOPTA_WCTHW_1121

		set_global_flag = sunwell_naaru_spark_flag
	}
	option = {
		name = EVTOPTB_WCTHW_1121

		ai_chance = {
			factor = 0
		}
	}
	after = {
		73 = { province_event = { id = WCTHW.1125 days = 30 } }
	}
}
# The Well is restored!: check event
province_event = {
	id = WCTHW.1125

	is_triggered_only = yes
	hide_window = yes

	immediate = {
		event_target:target_sunwell = {
			wonder_owner = {
				character_event = { id = WCTHW.1101 }
				if = {
					limit = { has_global_flag = sunwell_is_being_restored_flag }
					narrative_event = { id = WCTHW.1126 }
				}
			}
		}
	}
}
# The Well restored!: main event
narrative_event = {
	id = WCTHW.1126
	picture = GFX_evt_sunwell
	title = EVTTITLE_WCTHW_1126
	desc = {
		trigger = {
			event_target:target_sunwell = {
				NOR = {
					has_wonder_flag = wonder_deathwell_flag
					has_wonder_flag = wonder_felwell_flag
					has_wonder_flag = wonder_voidwell_flag
				}
			}
		}
		text = EVTDESC_WCTHW_1126_normal
		picture = GFX_evt_sunwell
	}
	desc = {
		trigger = { event_target:target_sunwell = { has_wonder_flag = wonder_voidwell_flag } }
		text = EVTDESC_WCTHW_1126_void
		picture = GFX_evt_corrupted_sunwell_scourge
	}
	desc = {
		trigger = { event_target:target_sunwell = { has_wonder_flag = wonder_felwell_flag } }
		text = EVTDESC_WCTHW_1126_fel
		picture = GFX_evt_corrupted_sunwell_fel
	}
	border = GFX_event_narrative_frame_religion
	
	major = yes
	major_trigger = {
		ai = no
	}
	show_root = yes

	is_triggered_only = yes

	immediate = {
		save_event_target_as = target_religion
		
		if = {
			limit = {
				NOR = {
					has_global_flag = sunwell_naaru_spark_flag
					has_global_flag = felwell_restoring_flag
					has_global_flag = voidwell_restoring_flag
				}
			}
			add_sunwell_effect = yes
		}
		else = {
			trigger_switch = {
				on_trigger = has_global_flag
				sunwell_naaru_spark_flag = { add_lightwell_effect = yes }
				felwell_restoring_flag = { add_felwell_effect = yes }
				voidwell_restoring_flag = { add_voidwell_effect = yes }
			}
		}
	}
	
	option = {	# Fools!
		trigger = { evil_true_religion_trigger = yes }
		name = FOOLS
	}
	
	option = {	# Excellent!
		trigger = {
			evil_true_religion_trigger = no
			OR = {
				character = ROOT
				true_religion_associated_with_sunwell_trigger = yes
			}
		}
		name = EXCELLENT
	}

	option = {	# Alas!
		trigger = {
			evil_true_religion_trigger = no
			NOR = {
				character = ROOT
				true_religion_associated_with_sunwell_trigger = yes
			}
		}
		name = ALAS
	}
	
	option = {
		trigger = {
			evil_true_religion_trigger = no
			NOT = { character = ROOT }
		}
		name = I_SEE
	}
	
	after = {
		if = {
			limit = { character = ROOT }
			prestige = 500
			piety = 500
		}
	}
}

### "Arthas's" event chain ###
### Introductory event
# Delayer event
province_event = {
	id = WCTHW.1999
	
	is_triggered_only = yes
	hide_window = yes
	
	immediate = {
		event_target:target_champion = {
			if = {
				limit = {
					scourge_champion_event_trigger = yes
				}
				narrative_event = { id = WCTHW.2000 }
			}
			else = {
				clr_global_flag = arthas_chain_ongoing
			}
		}
	}
}
# Delayed event
narrative_event = {
	id = WCTHW.2000
	title = EVTTITLE_WCTHW_2000
	picture = GFX_evt_stone_church
	desc = EVTDESC_WCTHW_2000
	border = GFX_event_narrative_frame_war

	is_triggered_only = yes
	hide_from = yes

	immediate = {
		save_event_target_as = target_champion
		
		set_global_flag = arthas_chain_ongoing
		
		# If you don't have realm that you can get via this event chain...
		if = {
			limit = { NOT = { event_target:target_realm = { always = yes } } }
			realm = { save_event_target_as = target_realm }
		}
	}

	option = {
		name = EVTOPTA_WCTHW_2000

		if = {
			limit = { NOT = { trait = stubborn } }
			add_trait = stubborn
		}
		if = {
			limit = { NOT = { trait = proud } }
			random = {
				chance = 50
				if = {
					limit = { trait = humble }
					remove_trait = humble
				}
				add_trait = proud
				hidden_tooltip = { character_event = { id = 38261 } } # Notify Proud
			}
		}

		73 = { province_event = { id = WCTHW.2004 days = 20 } }
	}
}
### Horrors of the Plague
#Delayer event
province_event = {
	id = WCTHW.2004
	
	is_triggered_only = yes
	hide_window = yes
	
	immediate = {
		event_target:target_champion = {
			if = {
				limit = {
					scourge_champion_event_trigger = yes
				}
				narrative_event = { id = WCTHW.2005 }
			}
			else = {
				clr_global_flag = arthas_chain_ongoing
			}
		}
	}
}
#Delayed event
narrative_event = {
	id = WCTHW.2005
	title = EVTTITLE_WCTHW_2000
	picture = GFX_evt_plague_eruptor
	desc = EVTDESC_WCTHW_2005
	border = GFX_event_narrative_frame_war

	is_triggered_only = yes
	hide_from = yes

	option = {
		name = EVTOPTA_WCTHW_2005

		if = {
			limit = { NOT = { trait = wroth } }
			if = {
				limit = { trait = patient }
				remove_trait = patient
			}
			add_trait = wroth
		}
		if = {
			limit = { NOT = { trait = cynical } }
			random = {
				chance = 50
				if = {
					limit = { trait = zealous }
					remove_trait = zealous
				}
				add_trait = cynical
				hidden_tooltip = { character_event = { id = 38258 } } #notify cynical
			}
		}

		73 = { province_event = { id = WCTHW.2009 days = 15 } }
	}
}
### Purge is a good thought
#Delayer event
province_event = {
	id = WCTHW.2009
	
	is_triggered_only = yes
	hide_window = yes
	
	immediate = {
		event_target:target_champion = {
			if = {
				limit = {
					scourge_champion_event_trigger = yes
					top_liege = {
						any_realm_province = {
							religion_group = light_group
							culture_group = human_group
							
							province_can_get_disease_trigger = yes
							region = world_eastern_kingdoms_lordaeron
							holder_scope = { NOT = { character = PREVPREV } }
						}
					}
				}
				narrative_event = { id = WCTHW.2010 }
			}
			else_if = {
				limit = {
					scourge_champion_event_trigger = yes
				}
				narrative_event = { id = WCTHW.2015 }
			}
			else = {
				clr_global_flag = arthas_chain_ongoing
			}
		}
	}
}
#Delayed event
narrative_event = {
	id = WCTHW.2010
	title = EVTTITLE_WCTHW_2000
	picture = GFX_evt_culling
	desc = EVTDESC_WCTHW_2010
	border = GFX_event_narrative_frame_war

	is_triggered_only = yes
	hide_from = yes

	immediate = {
		# Selects a province for culling
		top_liege = {
			random_realm_province = {
				limit = {
					religion_group = light_group
					culture_group = human_group
					
					province_can_get_disease_trigger = yes
					region = world_eastern_kingdoms_lordaeron
					holder_scope = { NOT = { character = PREVPREV } }
				}
				preferred_limit = {
					province_id = 324	# Stratholme
				}
				preferred_limit = {
					disease = plague_of_undeath
				}
				preferred_limit = {
					num_of_settlements = 5
				}
				preferred_limit = {
					num_of_settlements = 4
				}
				preferred_limit = {
					num_of_settlements = 3
				}
				save_event_target_as = target_province
				
				# spawn_disease = plague_of_undeath		# Spawn a big epidemic, it's not what we need.
			}
		}
	}

	option = {
		name = EVTOPTA_WCTHW_2010

		prestige = -100

		if = {
			limit = { NOT = { trait = cynical } }
			if = {
				limit = { trait = zealous }
				remove_trait = zealous
			}
			add_trait = cynical
		}

		event_target:target_province = {
			add_max_depopulation_effect = yes
			hidden_effect = {
				province_event = { id = WCTHW.2013 }
				any_province_character = {
					limit = {
						NOT = { character = ROOT }
						
						in_command = no
					}
					random = {
						chance = 75
						death = {
							death_reason = death_battle
							killer = ROOT
						}
					}
				}
			}
		}
	}
	option = {
		name = EVTOPTB_WCTHW_2010

		ai_chance = {
			factor = 0
		}
	}

	after = {
		73 = { province_event = { id = WCTHW.2014 days = 1 } }
	}
}
### Tells the world about what you did
#Ping event
province_event = {
	id = WCTHW.2013

	is_triggered_only = yes
	hide_window = yes

	immediate = {
		FROM = { narrative_event = { id = WCTHW.2011 } }
	}
}
#Main event
narrative_event = {
	id = WCTHW.2011
	title = EVTTITLE_WCTHW_2011
	picture = GFX_evt_culling
		desc = {
		trigger = { character = ROOT }
		text = EVTDESC_WCTHW_2011_arthas
	}
	desc = {
		trigger = {
				NOT = { character = ROOT }
		}
		text = EVTDESC_WCTHW_2011_world
	}
	border = GFX_event_narrative_frame_war

	is_triggered_only = yes

	major = yes
	major_trigger = {
		ai = no
	}
	show_from_from = yes

	option = {
		name = {
			trigger = {
				NOT = { character = ROOT }
				is_aggressive_trigger = no
			}
			text = EVTOPTA_WCTHW_2011_case_01
		}
		name = {
			trigger = { character = ROOT }
			text = EVTOPTA_WCTHW_2011_case_02
		}
		name = {
			trigger = {
				NOT = { character = ROOT }
				is_aggressive_trigger = yes
			}
			text = EXCELLENT
		}
	}
}
### A short trip to Northrend
#Delayer event
province_event = {
	id = WCTHW.2014
	
	is_triggered_only = yes
	hide_window = yes
	
	immediate = {
		event_target:target_champion = {
			if = {
				limit = {
					scourge_champion_event_trigger = yes
				}
				narrative_event = { id = WCTHW.2015 }
			}
			else = {
				clr_global_flag = arthas_chain_ongoing
			}
		}
	}
}
#Delayed event
narrative_event = {
	id = WCTHW.2015
	title = EVTTITLE_WCTHW_2000
	picture = GFX_evt_icecrown
	desc = EVTDESC_WCTHW_2015
	border = GFX_event_narrative_frame_war

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			e_scourge = {
				holder_scope = {
					# Creates Mal'Ganis
					create_character = {
						name = "Mal'Ganis"
						dynasty = none
						religion = burning_legion_religion
						culture = nathrezim
						female = no
						age = 30000
						attributes = {
							martial=3 diplomacy=6 stewardship=4 intrigue=4 learning=3
						}
						trait = intricate_webweaver
						trait = creature_nathrezim
						trait = class_warlock_6
						trait = being_demon
						trait = patient trait = deceitful trait = humble trait = arbitrary trait = cruel trait = cynical trait = gregarious trait = erudite
					}
					new_character = {
						save_event_target_as = target_dreadlord
					}
				}
			}
		}
	}

	option = {
		name = EVTOPTA_WCTHW_2015

		event_target:target_dreadlord = { show_portrait = yes }

		prestige = 100

		73 = { province_event = { id = WCTHW.2019 days = 10 } }
	}
	option = {
		name = EVTOPTB_WCTHW_2015

		prestige = 25

		custom_tooltip = {
			text = you_manage_to_avoid_your_fate_tooltip
			clr_global_flag = arthas_chain_ongoing
		}
		remove_trait = travelling

		ai_chance = {
			factor = 0
		}
	}
}
### Arrival in Northrend
#Delayer event
province_event = {
	id = WCTHW.2019
	
	is_triggered_only = yes
	hide_window = yes
	
	immediate = {
		event_target:target_champion = {
			if = {
				limit = {
					scourge_champion_event_trigger = yes
				}
				narrative_event = { id = WCTHW.2020 }
			}
			else = {
				clr_global_flag = arthas_chain_ongoing
			}
		}
	}
}
#Delayed event
narrative_event = {
	id = WCTHW.2020
	title = EVTTITLE_WCTHW_2000
	picture = GFX_evt_icecrown
	desc = EVTDESC_WCTHW_2020
	border = GFX_event_narrative_frame_war

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			e_scourge = { holder_scope = { narrative_event = { id = WCTHW.2021 } } }
			any_close_relative = { character_event = { id = WCTHW.2030 } }
		}
	}

	option = {
		name = EVTOPTA_WCTHW_2020

		prestige = 25

		if = {
			limit = { NOT = { trait = wroth } }
			if = {
				limit = { trait = patient }
				remove_trait = patient
			}
			add_trait = wroth
		}

		73 = { province_event = { id = WCTHW.2035 days = 10 } }
	}
}

# Reactions
### The Lich King's reaction to target_champion's arrival in Northrend
narrative_event = {
	id = WCTHW.2021
	title = EVTTITLE_WCTHW_2021
	picture = GFX_evt_icecrown
	desc = EVTDESC_WCTHW_2021
	border = GFX_event_narrative_frame_war

	is_triggered_only = yes

	option = {
		name = EXCELLENT
	}
}
### Ends event chain if you left Northrend
character_event = {
	id = WCTHW.2025
	title = EVTTITLE_WCTHW_2000
	picture = GFX_evt_icecrown
	desc = EVTDESC_WCTHW_2025
	border = GFX_event_normal_frame_war

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			e_scourge = { holder_scope = { narrative_event = { id = WCTHW.2026 } } }
			any_close_relative = { character_event = { id = WCTHW.2031 } }
		}
	}

	option = {
		name = EVTOPTB_WCTHW_2015

		custom_tooltip = {
			text = you_manage_to_avoid_your_fate_tooltip
		}
		remove_trait = travelling
	}
}
### The Lich King's reaction to target_champion's leaving of Northrend
narrative_event = {
	id = WCTHW.2026
	title = EVTTITLE_WCTHW_2021
	picture = GFX_evt_icecrown
	desc = EVTDESC_WCTHW_2026
	border = GFX_event_narrative_frame_war

	is_triggered_only = yes

	option = {
		name = ALAS
	}
}
### Close relative's reaction to target_champion's arrival in Northrend
character_event = {
	id = WCTHW.2030
	picture = GFX_evt_icecrown
	desc = EVTDESC_WCTHW_2030
	border = GFX_event_normal_frame_war

	is_triggered_only = yes

	option = {
		name = EVTOPTA_WCTHW_2030
	}
}
### Close relative's reaction to target_champion's leaving of Northrend
character_event = {
	id = WCTHW.2031
	picture = GFX_evt_icecrown
	desc = EVTDESC_WCTHW_2031
	border = GFX_event_normal_frame_war

	is_triggered_only = yes

	option = {
		name = EXCELLENT
	}
}

### Desertion in the army
#Delayer event
province_event = {
	id = WCTHW.2035

	is_triggered_only = yes
	hide_window = yes

	immediate = {
		event_target:target_champion = {
			if = {
				limit = {
					scourge_champion_event_trigger = yes
				}
				narrative_event = { id = WCTHW.2036 }
			}
			else = {
				clr_global_flag = arthas_chain_ongoing
				narrative_event = { id = WCTHW.2025 }
			}
		}
	}
}
#Delayed event
narrative_event = {
	id = WCTHW.2036
	title = EVTTITLE_WCTHW_2000
	picture = GFX_evt_icecrown
	desc = EVTDESC_WCTHW_2036
	border = GFX_event_narrative_frame_war

	is_triggered_only = yes

	# Burn the ships!
	option = {
		name = EVTOPTA_WCTHW_2036

		prestige = -25

		if = {
			limit = { NOT = { trait = deceitful } }
			if = {
				limit = { trait = honest }
				remove_trait = honest
			}
			add_trait = deceitful
		}
		
		73 = { province_event = { id = WCTHW.2040 days = 2 } }
	}

	# Let them run!
	option = {
		name = EVTOPTB_WCTHW_2036

		prestige = -100
		
		73 = { province_event = { id = WCTHW.2040 days = 2 } }

		ai_chance = {
			factor = 0
		}
	}
	
	# Sail back home
	option = {
		name = EVTOPTC_WCTHW_2036
		
		prestige = -50
		
		custom_tooltip = {
			text = you_manage_to_avoid_your_fate_tooltip
			clr_global_flag = arthas_chain_ongoing
			character_event = { id = WCTHW.2025 days = 15 }
		}
		
		ai_chance = {
			factor = 0
		}
	}
}
### Rumors about a powerful artifact
#Delayer event
province_event = {
	id = WCTHW.2040

	is_triggered_only = yes
	hide_window = yes

	immediate = {
		event_target:target_champion = {
			if = {
				limit = {
					scourge_champion_event_trigger = yes
				}
				narrative_event = { id = WCTHW.2041 }
			}
			else = {
				clr_global_flag = arthas_chain_ongoing
				narrative_event = { id = WCTHW.2025 }
			}
		}
	}
}
#Delayed event
narrative_event = {
	id = WCTHW.2041
	title = EVTTITLE_WCTHW_2000
	picture = GFX_evt_scourge_army
	desc = EVTDESC_WCTHW_2041
	border = GFX_event_narrative_frame_war

	is_triggered_only = yes

	option = {
		name = EVTOPTA_WCTHW_2041

		prestige = 100

		73 = { province_event = { id = WCTHW.2045 days = 2 } }
	}
}
### Frostmourne cave
#Delayer event
province_event = {
	id = WCTHW.2045

	is_triggered_only = yes
	hide_window = yes

	immediate = {
		event_target:target_champion = {
			if = {
				limit = {
					scourge_champion_event_trigger = yes
				}
				narrative_event = { id = WCTHW.2046 }
			}
			else = {
				clr_global_flag = arthas_chain_ongoing
				narrative_event = { id = WCTHW.2025 }
			}
		}
	}
}
#Delayed event
narrative_event = {
	id = WCTHW.2046
	title = EVTTITLE_WCTHW_2000
	picture = GFX_evt_icecrown
	desc = EVTDESC_WCTHW_2046
	border = GFX_event_narrative_frame_war

	is_triggered_only = yes

	immediate = {
		e_scourge = { holder_scope = { save_event_target_as = target_lich_king } }
		random_artifact = {
			limit = {
				is_artifact_equipped = yes
				has_artifact_flag = combat_weapon
			}
			save_event_target_as = target_champion_previous_weapon
		}
	}

	option = {
		name = EVTOPTA_WCTHW_2046

		add_artifact_frostmourne_effect = yes

		if = {
			limit = {
				event_target:target_champion_previous_weapon = { always = yes }
				c_frostfate = { holder_scope = { NOT = { character = ROOT } } }
			}
			custom_tooltip = {
				text = champion_discard_weapon_tooltip

				random_playable_ruler = {
					limit = {
						capital_scope = {
							OR = {
								region = world_northrend_dragonblight
								region = world_northrend_grizzly_hills
								region = world_northrend_crystalsong
							}
						}
					}
					preferred_limit = { ai = no }
					preferred_limit = { NOT = { religion = death_god } }
					preferred_limit = { government = feudal_government }
					preferred_limit = { has_landed_title = c_frostfate }

					character_event = { id = WCTHW.2047 }
				}
			}
		}

		73 = { province_event = { id = WCTHW.2049 days = 1 } }
	}
}
# Someone gets discarded weapon
character_event = {
	id = WCTHW.2047
	picture = GFX_evt_icecrown
	desc = EVTDESC_WCTHW_2047

	is_triggered_only = yes

	option = {
		name = EVTOPTA_WCTHW_2047

		event_target:target_champion_previous_weapon = {
			show_scope_change = no

			transfer_artifact = { from = owner to = ROOT }
		}
	}
}
### The Last Vestiges of the Sanity
#Delayer event
province_event = {
	id = WCTHW.2049

	is_triggered_only = yes
	hide_window = yes

	immediate = {
		event_target:target_champion = {
			if = {
				limit = {
					scourge_champion_event_trigger = yes
				}
				narrative_event = { id = WCTHW.2050 }
			}
			else = {
				clr_global_flag = arthas_chain_ongoing
				narrative_event = { id = WCTHW.2025 }
			}
		}
	}
}
#Delayed event
narrative_event = {
	id = WCTHW.2050
	title = EVTTITLE_WCTHW_2000
	picture = GFX_evt_icecrown
	desc = EVTDESC_WCTHW_2050
	border = GFX_event_narrative_frame_war

	is_triggered_only = yes

	option = {
		name = EVTOPTA_WCTHW_2050

		if = {
			limit = {
				scourge_champion_event_trigger = yes
			}
			73 = { province_event = { id = WCTHW.2054 days = 10 } }
		}
		else = {
			death = { death_reason = death_missing }
		}
	}
}
### The Homecoming
#Delayer event
province_event = {
	id = WCTHW.2054

	is_triggered_only = yes
	hide_window = yes

	immediate = {
		event_target:target_champion = {
			if = {
				limit = {
					scourge_champion_event_trigger = yes
				}
				narrative_event = { id = WCTHW.2055 }
			}
			else = {
				clr_global_flag = arthas_chain_ongoing
				death = { death_reason = death_missing }
			}
		}
	}
}
#Delayed event
narrative_event = {
	id = WCTHW.2055
	title = EVTTITLE_WCTHW_2000
	picture = GFX_evt_stone_church
	desc = {
		trigger = { has_character_flag = homecoming_close_relative_desc_flag }
		text = EVTDESC_WCTHW_2055_case_01
	}
	desc = {
		trigger = { has_character_flag = homecoming_not_close_relative_desc_flag }
		text = EVTDESC_WCTHW_2055_case_02
	}
	desc = {
		trigger = { has_character_flag = homecoming_inde_ruler_desc_flag }
		text = EVTDESC_WCTHW_2055_case_03
	}
	desc = {
		trigger = { has_character_flag = homecoming_ruined_homeland_desc_flag }
		text = EVTDESC_WCTHW_2055_case_04
	}
	border = GFX_event_narrative_frame_war

	is_triggered_only = yes

	immediate = {
		remove_trait = travelling
		
		imprison = no
		if = {
			limit = {
				is_ruler = yes
				NOR = {
					is_feudal = yes
					is_tribal = yes
				}
			}
			abdicate = yes
		}
		
		# Picks description
		# You're independent, you do massacre
		if = {
			limit = {
				is_ruler = yes
				independent = yes
			}
			set_character_flag = homecoming_inde_ruler_desc_flag
		}
		# Kill your king, do massacre
		else_if = {
			limit = {
				event_target:target_realm = {
					holder_scope = {
						independent = yes

						evil_public_religion_trigger = no
					}
				}
			}
			event_target:target_realm = { holder_scope = { save_event_target_as = target_ruler } }
			# King is your close relative
			if = {
				limit = { event_target:target_ruler = { is_close_relative = ROOT } }
				set_character_flag = homecoming_close_relative_desc_flag
			}
			# King isn't your close relative
			else = {
				set_character_flag = homecoming_not_close_relative_desc_flag
			}
		}
		# Your king is corrupted, homeland is ruined
		else = {
			set_character_flag = homecoming_ruined_homeland_desc_flag
		}
	}

	option = {
		name = {
			trigger = {
				NOR = {
					has_character_flag = homecoming_inde_ruler_desc_flag
					has_character_flag = homecoming_ruined_homeland_desc_flag
				}
			}
			text = EVTOPTA_WCTHW_2055_case_01
		}
		name = {
			trigger = {
				OR = {
					has_character_flag = homecoming_inde_ruler_desc_flag
					has_character_flag = homecoming_ruined_homeland_desc_flag
				}
			}
			text = EVTOPTA_WCTHW_2055_case_02
		}

		custom_tooltip = {
			text = becomes_death_knight
			hidden_effect = {
				set_character_flag = transition_into_death_knight_flag
				e_scourge = { holder_scope = { save_event_target_as = target_necromancer } }
				character_event = { id = WCPOD.5013 }
			}
		}
		religion = death_god

		tooltip = {
			event_target:target_ruler = {
				show_scope_change = no

				abdicate_to = ROOT
				death = {
					death_reason = death_murder_butchered
					killer = ROOT
				}
			}
		}

		hidden_effect = {
			if = {
				limit = { NOT = { has_character_flag = homecoming_ruined_homeland_desc_flag } }
				if = {
					limit = { NOT = { has_character_flag = homecoming_inde_ruler_desc_flag } }
					event_target:target_ruler = {
						narrative_event = { id = WCTHW.2056 }
					}
				}
				else = {
					narrative_event = { id = WCTHW.2057 }
				}
			}
		}
	}
	
	after = {
		clr_global_flag = arthas_chain_ongoing
	}
}

#Reactions
### target_ruler's reaction
narrative_event = {
	id = WCTHW.2056
	title = EVTTITLE_WCTHW_2056
	picture = GFX_evt_scourge_army
	desc = {
		trigger = { FROM = { has_character_flag = homecoming_close_relative_desc_flag } }
		text = EVTDESC_WCTHW_2056_case_01
	}
	desc = {
		trigger = { FROM = { has_character_flag = homecoming_close_relative_desc_flag } }
		text = EVTDESC_WCTHW_2056_case_02
	}
	border = GFX_event_narrative_frame_war

	is_triggered_only = yes

	option = {
		name = EVTOPTA_WCTHW_2056

		abdicate_to = FROM
		death = {
			death_reason = death_murder_butchered
			killer = FROM
		}

		hidden_effect = {
			FROM = {
				narrative_event = { id = WCTHW.2057 }
			}
		}
	}
}
### Tells the world about what you did
narrative_event = {
	id = WCTHW.2057
	title = EVTTITLE_WCTHW_2057
	picture = GFX_evt_scourge_army
	desc = {
		trigger = { ROOT = { NOT = { has_character_flag = homecoming_inde_ruler_desc_flag } } }
		text = EVTDESC_WCTHW_2057_case_01
	}
	desc = {
		trigger = { ROOT = { has_character_flag = homecoming_inde_ruler_desc_flag } }
		text = EVTDESC_WCTHW_2057_case_02
	}
	border = GFX_event_narrative_frame_war

	is_triggered_only = yes

	major = yes
	major_trigger = {
		ai = no
	}
	show_root = yes
	hide_from = yes
	hide_new = yes

	option = {
		name = {
			trigger = {
				NOT = { character = ROOT }
				is_aggressive_trigger = no
			}
			text = EVTOPTA_WCTHW_2057_case_01
		}
		name = {
			trigger = { character = ROOT }
			text = EVTOPTA_WCTHW_2057_case_02
		}
		name = {
			trigger = {
				NOT = { character = ROOT }
				is_aggressive_trigger = yes
			}
			text = EXCELLENT
		}
	}
}

###Fallback: spawns generic holder of Frostmourne if Arthas failed
character_event = {
	id = WCTHW.2060
	
	is_triggered_only = yes
	hide_window = yes
	
	only_playable = yes
	only_independent = yes
	
	trigger = {
		NOT = { has_global_flag = arthas_chain_ongoing }
		NOT = { has_global_flag = frostmourne_spawned_flag }
		
		has_landed_title = e_scourge
		OR = {
			year = 620
			ruled_years = 20
		}
	}
	
	immediate = {
		create_character = {
			dynasty = culture
			religion = death_god
			culture = lordaeronian
			female = no
			age = 20
			random_traits = yes
			trait = creature_human
			trait = brilliant_strategist
			trait = cruel
			trait = zealous
			trait = ambitious
		}
		new_character = {
			save_event_target_as = target_champion
			
			add_artifact_frostmourne_effect = yes
		}
		narrative_event = { id = WCTHW.2021 }
	}
}
