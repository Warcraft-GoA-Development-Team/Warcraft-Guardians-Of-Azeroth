namespace=WCSUP

### Adds race traits ###
character_event = {
	id = WCSUP.1
	
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		is_alive = yes
		is_dying = no
		
		is_save_game = no
		# potential_race_trigger = yes
		# has_race_trait_trigger = no
	}
	
	immediate = {
		if = {
			limit = { has_race_trait_trigger = no }
			character_event = { id = WCRAC.10 }
		}
		else = {
			# Adds tattoos
			add_random_tattoo_effect = yes
			# Adds religious branch
			if = {
				limit = { religion_has_branches_trigger = yes }
				liege = { ROOT = { add_prev_religious_branch_or_random_effect = yes } }
			}
			# Qiraji can pick only C'Thun
			if = {
				limit = { is_locked_qiraji_trigger = yes }
				add_character_modifier = {
					name = follower_of_cthun
					duration = -1
				}
			}
		}
	}
}

# Adds class traits at the start of the game
character_event = {
	id = WCSUP.5
	
	hide_window = yes
	is_triggered_only = yes
	
	ai = yes
	min_age = 16
	only_capable = yes
	prisoner = no
	
	trigger = {
		is_untouchable_trigger = no


		trigger_if = {
			limit = {	# Gives class traits to members of CC and SoE no matter what
				NOT = {
					society_member_of = cenarion_circle
					society_member_of = sisterhood_of_elune
				}
			}
			OR = {
				is_playable = no
				is_priest = yes
				controls_religion = yes
				government = order_government
			}
		}
		
		is_save_game = no
		has_class_trait_trigger = no
		united_class_trigger = yes
	}
	immediate = {
		if = {
			limit = { society_member_of = cenarion_circle }
			ai_add_druid_class_effect = yes
		}
		else_if = {
			limit = { society_member_of = sisterhood_of_elune }
			ai_add_priest_class_effect = yes
		}
		else = {
			ai_add_random_class_effect = yes
		}
	}
}

# Restores mana
character_event = {
	id = WCSUP.7
	
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		is_save_game = no
		has_1_2_magic_class_or_higher_trigger = yes
		NOR = {
			has_character_modifier = mana_1
			has_character_modifier = mana_2
			has_character_modifier = mana_3
			has_character_modifier = mana_4
			has_character_modifier = mana_5
		}
	}
	
	immediate = { character_event = { id = WCCLS.5 } }
}

# Sets succ_evil_elective
character_event = {
	id = WCSUP.20
	
	hide_window = yes
	is_triggered_only = yes
	
	only_playable = yes
	
	trigger = {
		is_save_game = no
		
		any_demesne_title = {
			NOT = { has_law = succ_evil_elective }
			is_law_potential = succ_evil_elective
		}
	}
	
	immediate = {
		any_demesne_title = {
			limit = {
				NOT = { has_law = succ_evil_elective }
				is_law_potential = succ_evil_elective
			}
			add_law = { law = succ_evil_elective cooldown = no opinion_effect = no }
		}
	}
}

# Sets undead_province
character_event = {
	id = WCSUP.30
	
	hide_window = yes
	is_triggered_only = yes
	
	only_playable = yes
	
	trigger = {
		is_save_game = no
		any_demesne_province = {
			NOT = { has_character_modifier = undead_province }
			OR = {
				culture = scourge
				culture = kvaldir
				culture = forsaken
				religion = shadowlander
			}
		}
	}
	
	immediate = {
		any_demesne_province = {
			limit = {
				OR = {
					culture = scourge
					culture = kvaldir
					culture = forsaken
					religion = shadowlander
				}
			}
			add_province_modifier = { name = undead_province duration = -1 }
		}
	}
}

# on_startup
# Gives infertile trait
character_event = {
	id = WCSUP.40
	
	is_triggered_only = yes
	hide_window = yes
	
	trigger = {
		need_infertile_trait_trigger = yes
	}
	
	immediate = {
		add_trait = infertile
	}
}

# on_startup
# Fixes child portraits of immortal characters
character_event = {
	id = WCSUP.45
	
	is_triggered_only = yes
	hide_window = yes
	
	min_age = 16
	
	trigger = {
		is_save_game = no
		
		immortal = yes
		age = 16
		immortal_age < 16
	}
	
	immediate = {
		log = "(DEBUG) [Root.GetID] [Root.GetBestName] is adult with child portrait"
		
		character_event = { id = WCRAC.200 }
	}
}

# on_startup
# Debuger: shows children with adult portraits
character_event = {
	id = WCSUP.50
	
	hide_window = yes
	is_triggered_only = yes
	
	max_age = 16
	
	trigger = {
		is_save_game = no
		
		immortal = yes
		NOT = { age = 16 }
		immortal_age > 16
	}
	
	immediate = {
		log = "(DEBUG) [Root.GetID] [Root.GetBestName] is child with adult portrait"
	}
}