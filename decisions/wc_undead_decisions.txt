decisions = {
	sew_new_part_of_body = {
		is_high_prio = yes
		
		ai_check_interval = 12
		
		ai = no
		only_playable = yes

		potential = {
			is_incapable = no

			NOT = { has_character_flag = ongoing_operation_flag }

			is_maimed_trigger = yes

			trait = being_undead
			NOR = {
				trait = creature_wraith
				trait = creature_banshee
			}
			job_spiritual = { always = yes }
		}
		allow = {
			prisoner = no
			is_inaccessible_trigger = no

			custom_tooltip = {
				text = has_not_used_decision_5_years_tooltip
				hidden_tooltip = {
					OR = {
						NOT = { has_character_flag = sew_new_part_of_body_cooldown_flag }
						had_character_flag = { flag = sew_new_part_of_body_cooldown_flag days = 3650 }
					}
				}
			}
			
			scaled_wealth = { value = 0.5 min = 25 }
			
			job_spiritual = {
				OR = {
					is_necromancer_class_trigger = yes
					is_learned_trigger = yes
				}
			}
		}
		effect = {
			scaled_wealth = { value = -0.5 min = -25 }
			
			job_spiritual = {
				show_scope_change = no
				custom_tooltip = {
					text = sew_new_part_of_body_tooltip
					hidden_tooltip = {
						character_event = { id = WCUND.179 }
					}
				}
			}
			hidden_effect = {
				set_character_flag = ongoing_operation_flag
				clr_character_flag = sew_new_part_of_body_cooldown_flag
				set_character_flag = sew_new_part_of_body_cooldown_flag
			}
		}
		ai_will_do = {
			factor = 0.1
		}
	}
	turn_yourself_into_undead = {
		is_high_prio = yes

		ai_check_interval = 12

		only_playable = yes

		potential = {
			is_adult = yes
			is_incapable = no

			NOT = { has_character_flag = being_raised_flag }

			can_be_undead_trigger = yes
			NOT = { trait = being_undead }

			is_necromancer_class_trigger = yes
		}

		allow = {
			prisoner = no
			is_inaccessible_trigger = no

			not_raising_undead_flag_trigger = yes

			has_2_mana_trigger = yes
			OR = {
				dark_public_religion_trigger = yes
				trait = cynical
			}
			OR = {
				trait = ambitious		# ...has more plans
				trait = diligent		# ...wants to do more
				trait = craven		# ...is afraid of death
				age = 60
			}
			NOT = { trait = depressed }
		}

		effect = {
			set_character_flag = being_raised_flag
			set_character_flag = raising_undead_flag

			save_event_target_as = target_necromancer
			save_event_target_as = target_undead
			hidden_effect = { character_event = { id = WCUND.300 } }
			
			remove_2_mana_effect = yes
		}

		ai_will_do = {
			factor = 0.5
			modifier = {
				factor = 0
				has_secret_religion = yes
			}
		}
	}
	turn_yourself_into_monstrous_undead = {
		is_high_prio = yes

		ai_check_interval = 12

		only_playable = yes

		potential = {
			is_adult = yes
			is_incapable = no

			NOT = { has_character_flag = being_raised_flag }

			is_humanoid_trigger = yes
			trait = being_undead
			NOR = {
				trait = creature_wraith
				trait = creature_banshee
				trait = creature_plague_eruptor
				trait = creature_abomination
				trait = creature_lich
				trait = creature_wicker_golem
			}
			# is_death_knight_class_trigger = yes		# Death knights can't prisoner_disembowel
			is_necromancer_class_trigger = yes
		}

		allow = {
			prisoner = no
			is_inaccessible_trigger = no

			not_raising_undead_flag_trigger = yes
			
			has_5_6_magic_class_or_higher_trigger = yes
			check_variable = { which = useful_flesh value = 20 }

			OR = {
				trait = lunatic
				AND = {
					OR = {
						true_religion = death_god
						true_religion = throsic
					}
					trait = zealous
				}
			}
		}

		effect = {
			set_character_flag = being_raised_flag
			set_character_flag = raising_undead_flag
			
			change_variable = { which = useful_flesh value = -20 }
			hidden_effect = { character_event = { id = WCUND.370 } }
		}

		ai_will_do = {
			factor = 0.1
		}
	}
	create_plague = {
		is_high_prio = yes
		
		ai_check_interval = 12

		only_playable = yes

		potential = {
			has_dlc = "Reapers"
			
			NOT = { has_global_flag = plague_of_northrend_triggered_flag }
			NOT = { has_global_flag = plague_of_northrend_happened_flag }

			has_landed_title = e_scourge
		}
		allow = {
			war = no
			
			realm_size = 25
			ruled_years = 5
		}
		effect = {
			if = {
				limit = { ai = no }
				change_infamy = {
					value = 25
					localisation = "Started Plague"
				}
			}
			else_if = {
				limit = { NOT = { infamy = 25 } }
				change_infamy = {
					value = 25
					localisation = "Started Plague"
				}
			}
			else_if = {
				limit = { NOT = { infamy = 35 } }
				change_infamy = {
					value = 15
					localisation = "Started Plague"
				}
			}
			if = {
				limit = { NOT = { has_global_flag = humans_susceptible_to_plague } }
				custom_tooltip = {
					text = humans_susceptible_to_plague_tooltip
					hidden_effect = { set_global_flag = humans_susceptible_to_plague }
				}
			}
			set_global_flag = plague_of_northrend_triggered_flag
		}
		ai_will_do = {
			factor = 1
			modifier = {
				factor = 0
				has_evil_trait_trigger = no
			}
		}
	}
	start_plague_of_lordaeron = {
		is_high_prio = yes
		
		ai_check_interval = 12

		only_playable = yes

		potential = {
			has_dlc = "Reapers"
			
			NOT = { has_global_flag = plague_of_lordaeron_triggered_flag }
			NOT = { has_global_flag = plague_of_lordaeron_happened_flag }

			has_global_flag = plague_of_northrend_happened_flag
			has_landed_title = e_scourge
		}
		allow = {
			war = no
			
			OR = {
				ruled_years = 12
				has_character_flag = debug_mode_flag
			}
		}
		effect = {
			if = {
				limit = { ai = no }
				change_infamy = {
					value = 25
					localisation = "Started Plague"
				}
			}
			else_if = {
				limit = { NOT = { infamy = 25 } }
				change_infamy = {
					value = 25
					localisation = "Started Plague"
				}
			}
			else_if = {
				limit = { NOT = { infamy = 35 } }
				change_infamy = {
					value = 15
					localisation = "Started Plague"
				}
			}
			set_global_flag = plague_of_lordaeron_triggered_flag
		}
		ai_will_do = {
			factor = 1
			modifier = {
				factor = 0
				has_evil_trait_trigger = no
			}
		}
	}
	
	# If Lich King is in_ice_prison, she/he can merge with holder of Frostmourne
	merge_with_champion = {
		is_high_prio = yes
		
		ai_check_interval = 12

		only_playable = yes
		only_independent = yes

		potential = {
			NOT = { has_character_flag = merge_with_champion_ongoing_flag }
			
			trait = in_ice_prison
			
			has_landed_title = e_scourge
		}
		allow = {
			merging_lich_king_trigger = yes
			
			trigger_if = {
				limit = { NOT = { event_target:target_frostmourne_holder = { always = yes } } }
				custom_tooltip = {
					text = someone_found_frostmourne_tooltip
					always = no
				}
			}
			trigger_else = {
				event_target:target_frostmourne_holder = {
					is_untouchable_trigger = no
					
					merging_champion_trigger = yes
				}
			}
		}
		effect = {
			event_target:target_frostmourne_holder = {
				narrative_event = { id = WCUND.400 }
			}
		}
		ai_will_do = {
			factor = 1
		}
	}
}
targetted_decisions = {
	prisoner_drink_blood = {
		filter = court
		ai_target_filter = none
		ai_check_interval = 6
		
		ai = no
		only_playable = yes
		
		from_potential = {
			is_adult = yes
			prisoner = no
			is_incapable = no

			trait = vampire
		}

		potential = {
			is_adult = yes
			prisoner = yes
		}
		
		allow = {
			is_dark_being_trigger = no
			is_humanoid_trigger = yes
			
			NOT = { diplomatic_immunity = yes }
		}
		
		ai_will_do = {
			factor = 0
		}
		
		effect = {
			hidden_tooltip = {
				FROM = {
					if = {
						limit = {
							has_nickname = no
						}
						random_list = {
							10 = { # Get nickname The Dragon
								give_nickname = nick_the_dragon
							}
							10 = { # Get nickname The Monster
								give_nickname = nick_the_monster
							}
							80 = { } # No nickname
						}
					}
				}
			}
			death = {
				death_reason = death_execution_eaten
				killer = FROM
			}
			FROM = { decrease_vampiric_hunger_effect = yes }
			save_event_target_as = kinslayer_target
			FROM = {
				add_kinslayer_trait_effect = yes
			}
		}
	}
}
settlement_decisions = {
	# bring_plague_of_undead = {
		# filter = owned
		# ai_target_filter = owned
		# is_high_prio = yes

		# from_potential = {
			# has_global_flag = plague_of_northrend_triggered_flag
			# has_landed_title = e_scourge
		# }
		# potential = {
			# is_capital = yes
		# }

		# allow = {
			# always = yes
		# }

		# effect = {
			# location = { spawn_disease = plague_of_undeath }
		# }

		# revoke_allowed = {
			# always = no
		# }

		# ai_will_do = {
			# factor = 1
		# }
	# }
}