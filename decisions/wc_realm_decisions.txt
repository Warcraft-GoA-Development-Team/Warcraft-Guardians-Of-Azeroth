decisions = {
	erect_the_wall = {
		is_high_prio = yes

		ai_check_interval = 12

		only_playable = yes
		only_independent = yes

		potential = {
			independent = yes

			275 = {
				NOR = {
					has_province_modifier = the_greymane_wall
					has_province_modifier = the_gilnean_wall
				}
			}

			has_landed_title = k_gilneas
		}

		allow = {
			war = no

			wealth = 500
			TECH_CASTLE_CONSTRUCTION = 4

			is_in_political_faction_trigger = no
		}

		effect = {
			wealth = -500
			prestige = 500
			if = {
				limit = { dynasty = 24000 }
				275 = { add_province_modifier = { name = the_greymane_wall duration = -1 } }
			}
			if = {
				limit = { NOT = { dynasty = 24000 } }
				275 = { add_province_modifier = { name = the_gilnean_wall duration = -1 } }
			}
			custom_tooltip = {
				text = all_rulers_behind_wall_worsens_attitude_tooltip
				hidden_effect = {
					any_vassal = {
						limit = { any_demesne_province = { region = world_eastern_kingdoms_lordaeron_gilnean_peninsula } }
						opinion = { modifier = opinion_extremely_disappointed who = ROOT years = 25 }
					}
					any_independent_ruler = {
						limit = {
							NOT = { any_demesne_province = { region = world_eastern_kingdoms_lordaeron_gilnean_peninsula } }
							any_demesne_province = { region = world_eastern_kingdoms }
						}
						opinion = { modifier = opinion_extremely_disappointed who = ROOT years = 10 }
					}
				}
			}
			hidden_tooltip = { narrative_event = { id = WCRLM.100 } }
		}

		ai_will_do = {
			factor = 1
		}
	}
	corrupt_the_sunwell = {
		is_high_prio = yes

		ai_check_interval = 12

		only_playable = yes
		only_independent = yes

		potential = {
			independent = yes

			NOT = { has_global_flag = sunwell_is_being_restored_flag }

			evil_public_religion_trigger = yes

			394 = {
				wonder = {
					has_wonder = wonder_sunwell

					NOR = {
						has_wonder_flag = wonder_lightwell_flag
						has_wonder_flag = wonder_deathwell_flag
						has_wonder_flag = wonder_felwell_flag
						has_wonder_flag = wonder_voidwell_flag
					}

					wonder_owner = { character = ROOT }
				}
			}
		}

		allow = {
		}

		effect = {
			narrative_event = { id = WCTHW.1000 }
		}

		ai_will_do = {
			factor = 1
		}
	}
	restore_the_sunwell = {
		is_high_prio = yes

		ai_check_interval = 12

		only_playable = yes
		only_independent = yes

		potential = {
			independent = yes

			NOT = { has_global_flag = sunwell_is_being_restored_flag }
			
			394 = {
				wonder = {
					wonder_owner = { character = ROOT }
				}
			}

			trigger_if = {
				limit = {
					394 = {
						wonder = {
							has_wonder = wonder_sunwell
							has_wonder_flag = wonder_deathwell_flag
						}
					}
				}
				NOT = { religion_group = necromancy_group }
			}
			trigger_else_if = {
				limit = {
					394 = {
						wonder = {
							has_wonder = wonder_sunwell
							has_wonder_flag = wonder_felwell_flag
						}
					}
				}
				NOT = { religion_group = fel_group }
			}
			trigger_else_if = {
				limit = {
					394 = {
						wonder = {
							has_wonder = wonder_sunwell
							has_wonder_flag = wonder_voidwell_flag
						}
					}
				}
				NOT = { religion_group = void_group }
			}
			trigger_else = {
				always = no
			}
		}

		allow = {
			war = no

			# evil_public_religion_trigger = no
			OR = {
				religion_group = arcane_group
				religion_group = fel_group
				religion_group = light_group
				religion_group = void_group
			}

			scaled_wealth = { value = 1 min = 500 }

			# custom_tooltip = {
				# text = sunwell_isnt_damaged_tooltip
				# 394 = {
					# wonder = {
						# has_wonder = wonder_sunwell
						# is_damaged = no
					# }
				# }
			# }
		}

		effect = {
			set_global_flag = sunwell_is_being_restored_flag

			clr_global_flag = sunwell_naaru_spark_flag
			clr_global_flag = voidwell_restoring_flag
			clr_global_flag = felwell_restoring_flag

			394 = {
				wonder = {
					save_event_target_as = target_sunwell
				}
			}

			scaled_wealth = { value = -1 min = -500 }
			scaled_prestige = { value = -1 min = -500 }

			narrative_event = { id = WCTHW.1100 }
		}

		ai_will_do = {
			factor = 1
		}
	}
	# Ability to get rid of all evil characters without penalties
	burn_evil_beings = {
		ai_check_interval = 36

		only_playable = yes

		potential = {
			ROOT = {
				any_courtier_or_vassal = {
					is_burnable_potential_trigger = yes
					is_burnable_allow_trigger = yes
				}
			}
		}

		allow = {
		}

		effect = {
			ROOT = {
				show_scope_change = no

				any_courtier_or_vassal = {
					limit = {
						is_burnable_potential_trigger = yes
						is_burnable_allow_trigger = yes
					}
					show_scope_change = no
					
					prev_burn_evil_being_this_effect = yes
				}
			}
		}

		ai_will_do = {
			factor = 1
		}
	}

	convert_to_tribal_monarchy = {
		is_high_prio = yes

		ai_check_interval = 12

		only_playable = yes

		potential = {
			is_playable = yes

			government = tribal_government

			can_be_feudal_trigger = no
		}

		allow = {
			war = no

			trigger_if = {
				limit = { independent = yes }
				primary_title = {
					OR = {
						has_law = tribal_organization_4
						has_law = tribal_organization_3
						has_law = tribal_organization_2
					}
				}
			}
			trigger_else = {
				liege = {
					OR = {
						is_tribal = no
						government = tribal_monarchy_government
					}
					is_nomadic = no
				}
			}
			
			reformed_castle_capital_trigger = yes
		}

		effect = {
			set_government_type = tribal_monarchy_government

			hidden_tooltip = {
				any_demesne_title = {
					limit = {
						tier = baron
						holding_type = tribal
					}

					# Warcraft
					convert_tribal_to_castle_effect = yes
				}
			}
		}

		ai_will_do = {
			factor = 1
		}
	}

	claim_capital_city = {
		is_high_prio = yes

		ai_check_interval = 12

		only_playable = yes
		only_independent = yes

		potential = {
			is_playable = yes
			independent = yes

			NOT = { has_character_flag = claim_capital_city_attempt_flag }

			OR = {
				stromgarde_is_capital_trigger = yes
				stratholme_is_capital_trigger = yes
				stormwind_is_capital_trigger = yes
				silvermoon_is_capital_trigger = yes
				lordaeron_is_capital_trigger = yes
				# AND = {
					# has_landed_title = k_kul_tiras
					# NOT = { has_landed_title = k_kul_tiras }
					# any_realm_lord = {
						# ai = yes
						# has_landed_title = k_kul_tiras
					# }
				# }
				ironforge_is_capital_trigger = yes
				gnomeregan_is_capital_trigger = yes
				gilneas_is_capital_trigger = yes
				dalaran_is_capital_trigger = yes
				alterac_is_capital_trigger = yes
			}
		}

		allow = {
		}

		effect = {
			set_character_flag = claim_capital_city_attempt_flag

			if = {
				limit = { stromgarde_is_capital_trigger = yes }
				c_stromgarde = {
					show_scope_change = no
					usurp_title_plus_barony_if_unlanded_and_vassals = ROOT
				}
			}
			else_if = {
				limit = { stratholme_is_capital_trigger = yes }
				c_stratholme = {
					show_scope_change = no
					usurp_title_plus_barony_if_unlanded_and_vassals = ROOT
				}
			}
			else_if = {
				limit = { stormwind_is_capital_trigger = yes }
				c_stormwind = {
					show_scope_change = no
					usurp_title_plus_barony_if_unlanded_and_vassals = ROOT
				}
			}
			else_if = {
				limit = { silvermoon_is_capital_trigger = yes }
				c_silvermoon = {
					show_scope_change = no
					usurp_title_plus_barony_if_unlanded_and_vassals = ROOT
				}
			}
			else_if = {
				limit = { lordaeron_is_capital_trigger = yes }
				c_lordaeron = {
					show_scope_change = no
					usurp_title_plus_barony_if_unlanded_and_vassals = ROOT
				}
			}
			else_if = {
				limit = { ironforge_is_capital_trigger = yes }
				c_ironforge = {
					show_scope_change = no
					usurp_title_plus_barony_if_unlanded_and_vassals = ROOT
				}
			}
			else_if = {
				limit = { gnomeregan_is_capital_trigger = yes }
				c_gnomeregan = {
					show_scope_change = no
					usurp_title_plus_barony_if_unlanded_and_vassals = ROOT
				}
			}
			else_if = {
				limit = { gilneas_is_capital_trigger = yes }
				c_gilneas = {
					show_scope_change = no
					usurp_title_plus_barony_if_unlanded_and_vassals = ROOT
				}
			}
			else_if = {
				limit = { dalaran_is_capital_trigger = yes }
				c_dalaran = {
					show_scope_change = no
					usurp_title_plus_barony_if_unlanded_and_vassals = ROOT
				}
			}
			else_if = {
				limit = { alterac_is_capital_trigger = yes }
				c_alterac = {
					show_scope_change = no
					usurp_title_plus_barony_if_unlanded_and_vassals = ROOT
				}
			}
		}

		ai_will_do = {
			factor = 1
		}
	}
	wake_cthun = {
		is_high_prio = yes

		ai_check_interval = 12

		ai = no
		only_playable = yes
		only_independent = yes

		potential = {
			NOT = { has_global_flag = reawakening_of_cthun_flag }

			religion = old_gods_worship
			culture = qiraji

			has_landed_title = e_ahnqiraj
		}

		allow = {
			scaled_wealth = { value = 25 min = 1000 }
			piety = 250
		}

		effect = {
			scaled_wealth = { value = -25 min = -1000 }
			piety = -250

			narrative_event = { id = WCVOD.1000 }
		}

		ai_will_do = {
			factor = 1
		}
	}

	horde_invite_bloodthirsty_clans = {
		is_high_prio = yes

		ai_check_interval = 12

		only_playable = yes
		only_independent = yes

		potential = {
			has_global_flag = orcish_invasion_flag
			NOT = { has_global_flag = horde_invited_bloodthirsty_clans_flag }

			has_landed_title = e_horde
			73 = {
				OR = {
					has_province_modifier = dark_portal_is_open_1
					has_province_modifier = dark_portal_is_open_2
				}
			}
		}

		allow = {
			num_of_count_titles = 3
			73 = {
				holder_scope = {
					OR = {
						character = PREVPREV
						is_liege_or_above = PREVPREV
					}
				}
			}
			prestige = 1000
		}

		effect = {
			prestige = -1000

			narrative_event = { id = WCFTW.4 }
		}

		ai_will_do = {
			factor = 1
		}
	}

}
targeted_decisions = {
	# Ability to get rid of evil character without penalties
	burn_evil_being = {
		filter = sub_realm
		ai_target_filter = court
		ai_check_interval = 24

		ai = no
		only_playable = yes

		from_potential = {
		}

		potential = {
			FROM = {
				ROOT = {
					is_burnable_potential_trigger = yes
				}
			}
		}

		allow = {
			show_only_failed_conditions = yes

			FROM = {
				show_scope_change = no

				ROOT = {
					show_scope_change = no
					
					is_burnable_allow_trigger = yes
				}
			}
		}

		effect = {
			FROM = {
				show_scope_change = no
				
				ROOT = {
					show_scope_change = no
					
					prev_burn_evil_being_this_effect = yes
				}
			}
		}

		ai_will_do = {
			factor = 1
		}
	}
}
title_decisions = {
	convert_to_your_culture_and_religion = {
		is_high_prio = yes

		filter = owned
		ai_target_filter = owned
		ai_check_interval = 24

		only_playable = yes

		from_potential = {
			is_adult = yes
			OR = {
				is_incapable = no
				trait = lich_king
			}
			prisoner = no
		}

		potential = {
			tier = COUNT
			owner = { character = FROM }
			location = {
				NOT = { true_religion = FROM }
				NOT = { culture_group = FROM }
			}

			OR = {
				AND = {
					location = { NOT = { has_province_modifier = undead_province } }
					FROM = {
						NOR = {
							trait = being_undead
							religion_group = necromancy_group
							government = scourge_government
						}
					}
				}
				AND = {
					location = { has_province_modifier = undead_province }
					FROM = {
						OR = {
							trait = being_undead
							religion_group = necromancy_group
							government = scourge_government
						}
					}
				}
			}
		}

		allow = {
			custom_tooltip = {
				text = has_not_used_decision_3_years_tooltip
				hidden_tooltip = {
					location = {
						OR = {
							NOT = { has_province_flag = recent_genocide_attempt_flag }
							had_province_flag = { flag = recent_genocide_attempt_flag days = 730 }
						}
					}
				}
			}
			# NOT = { has_holding_modifier = recently_conquered }

			FROM = {
				show_scope_change = no
				top_liege = {
					show_scope_change = no
					ROOT = {
						show_scope_change = no
						location = {
							trigger_if = {
								limit = { independent = no }
								NOT = { religion = PREVPREV }
								NOT = { culture_group = PREVPREV }
							}
							NOT = { has_province_modifier = nomad_agitation }
							is_occupied = no
						}
					}
				}
			}
			OR = {
				location = { is_aggressive_trigger = yes }
				FROM = { is_aggressive_trigger = yes }
			}
		}

		effect = {
			# Handled by pillage_settlement decision
			hidden_tooltip = {
				location = { save_event_target_as = nickname_target }
				FROM = { save_event_target_as = nickname_receiver }
				if = {
					limit = {
						owner = {
							has_nickname = no
							is_adult = yes
							is_incapable = no
						}
						location = { is_aggressive_trigger = no }
					}
					random_list = {
						5 = {
							owner = { give_nickname = nick_the_destroyer }
						}
						5 = {
							owner = { give_nickname = nick_the_slayer_of_culture }
							modifier = {
								factor = 0
								event_target:nickname_target = { culture = FROM }
							}
						}
						5 = {
							owner = { give_nickname = nick_the_terror_of_provincename }
						}
						5 = {
							owner = { give_nickname = nick_the_culture_marauder }
							modifier = {
								factor = 0
								event_target:nickname_target = { culture = FROM }
							}
						}
						75 = {}
					}
				}
			}

			location = {
				set_province_flag = recent_genocide_attempt_flag
				add_province_modifier = { name = ongoing_genocide years = 2 }
				custom_tooltip = {
					text = "PILLAGE_DESTROY_BUILDINGS"
					hidden_tooltip = {
						any_province_holding = {
							limit = {
								settlement_can_be_destroyed_trigger = yes
							}
							destroy_random_building = THIS
							destroy_random_building = THIS
						}
					}
				}
			}
			location = { province_event = { id = WCRLM.200 years = 1 } }
		}

		ai_will_do = {
			factor = 0.1
		}
	}
	culling_of_province = {
		is_high_prio = yes

		filter = owned
		ai_target_filter = owned
		ai_check_interval = 24

		only_playable = yes

		from_potential = {
			is_adult = yes
			OR = {
				is_incapable = no
				trait = lich_king
			}
			prisoner = no

			NOR = {
				trait = being_undead
				religion_group = necromancy_group
				government = scourge_government
			}
		}

		potential = {
			tier = COUNT
			owner = { character = FROM }
			location = {
				has_province_modifier = undead_province
			}
		}

		allow = {
			custom_tooltip = {
				text = has_not_used_decision_3_years_tooltip
				hidden_tooltip = {
					location = {
						OR = {
							NOT = { has_province_flag = recent_genocide_attempt_flag }
							had_province_flag = { flag = recent_genocide_attempt_flag days = 730 }
						}
					}
				}
			}
			# NOT = { has_holding_modifier = recently_conquered }

			FROM = {
				show_scope_change = no
				trigger_if = {
					limit = { independent = no }
					top_liege = {
						NOR = {
							trait = being_undead
							religion_group = necromancy_group
							government = scourge_government
						}
					}
				}
			}
			location = {
				has_disease = no
				NOT = { has_province_modifier = nomad_agitation }
				is_occupied = no
			}
		}

		effect = {
			# Handled by pillage_settlement decision
			hidden_tooltip = {
				location = { save_event_target_as = nickname_target }
				FROM = { save_event_target_as = nickname_receiver }
				if = {
					limit = {
						owner = {
							has_nickname = no
							is_adult = yes
							is_incapable = no
						}
						location = { is_aggressive_trigger = no }
					}
					random_list = {
						5 = {
							owner = { give_nickname = nick_the_destroyer }
						}
						5 = {
							owner = { give_nickname = nick_the_slayer_of_culture }
							modifier = {
								factor = 0
								event_target:nickname_target = { culture = FROM }
							}
						}
						5 = {
							owner = { give_nickname = nick_the_terror_of_provincename }
						}
						5 = {
							owner = { give_nickname = nick_the_culture_marauder }
							modifier = {
								factor = 0
								event_target:nickname_target = { culture = FROM }
							}
						}
						75 = {}
					}
				}
			}

			location = {
				set_province_flag = recent_genocide_attempt_flag
				add_province_modifier = { name = ongoing_culling years = 2 }
				custom_tooltip = {
					text = "PILLAGE_DESTROY_BUILDINGS"
					hidden_tooltip = {
						any_province_holding = {
							limit = {
								settlement_can_be_destroyed_trigger = yes
							}
							destroy_random_building = THIS
							destroy_random_building = THIS
						}
					}
				}
			}
			location = { province_event = { id = WCRLM.200 years = 1 } }
		}

		ai_will_do = {
			factor = 1
		}
	}
	bring_death_to_province = {
		is_high_prio = yes

		filter = owned
		ai_target_filter = owned
		ai_check_interval = 24

		only_playable = yes

		from_potential = {
			is_adult = yes
			OR = {
				is_incapable = no
				trait = lich_king
			}
			prisoner = no

			OR = {
				trait = being_undead
				religion_group = necromancy_group
				government = scourge_government
			}
		}

		potential = {
			tier = COUNT
			owner = { character = FROM }
			location = { NOT = { has_province_modifier = undead_province } }
		}

		allow = {
			custom_tooltip = {
				text = has_not_used_decision_3_years_tooltip
				hidden_tooltip = {
					location = {
						OR = {
							NOT = { has_province_flag = recent_genocide_attempt_flag }
							had_province_flag = { flag = recent_genocide_attempt_flag days = 730 }
						}
					}
				}
			}
			# NOT = { has_holding_modifier = recently_conquered }

			FROM = {
				show_scope_change = no
				trigger_if = {
					limit = { independent = no }
					top_liege = {
						OR = {
							trait = being_undead
							religion_group = necromancy_group
							government = scourge_government
						}
					}
				}
			}
			location = {
				has_disease = no
				NOT = { has_province_modifier = nomad_agitation }
				is_occupied = no
			}
		}

		effect = {
			# Handled by pillage_settlement decision
			hidden_tooltip = {
				location = { save_event_target_as = nickname_target }
				FROM = { save_event_target_as = nickname_receiver }
				if = {
					limit = {
						owner = {
							has_nickname = no
							is_adult = yes
							is_incapable = no
						}
						location = { is_aggressive_trigger = no }
					}
					random_list = {
						5 = {
							owner = { give_nickname = nick_the_destroyer }
						}
						5 = {
							owner = { give_nickname = nick_the_slayer_of_culture }
							modifier = {
								factor = 0
								event_target:nickname_target = { culture = FROM }
							}
						}
						5 = {
							owner = { give_nickname = nick_the_terror_of_provincename }
						}
						5 = {
							owner = { give_nickname = nick_the_culture_marauder }
							modifier = {
								factor = 0
								event_target:nickname_target = { culture = FROM }
							}
						}
						75 = {}
					}
				}
			}

			location = {
				set_province_flag = recent_genocide_attempt_flag
				add_province_modifier = { name = spreading_of_death years = 2 }
				custom_tooltip = {
					text = "PILLAGE_DESTROY_BUILDINGS"
					hidden_tooltip = {
						any_province_holding = {
							limit = {
								settlement_can_be_destroyed_trigger = yes
							}
							destroy_random_building = THIS
							destroy_random_building = THIS
						}
					}
				}
			}
			location = { province_event = { id = WCRLM.200 years = 1 } }
		}

		ai_will_do = {
			factor = 0.1
		}
	}

	# Copy of monastic_order_convert_county
	# Converts elf province if you holds the right sunwell
	sunwell_ruler_convert_county = {
		is_high_prio = yes

		filter = owned
		ai_target_filter = owned
		ai_check_interval = 12

		only_playable = yes
		only_independent = yes

		from_potential = {
			is_untouchable_trigger = no

			independent = yes

			any_realm_wonder = {
				has_wonder = wonder_sunwell
				is_active = yes
			}
		}

		potential = {
			tier = COUNT

			location = {
				from_can_switch_religion_province_trigger = yes
				
				NOT = { religion = FROM }
				culture_group = high_elf_group
			}
			holder_scope = {
				OR = {
					is_liege_or_above = FROM
					character = FROM
				}
			}
		}

		allow = {
			FROM = { piety = 250 }
			location = {
				owner = { NOT = { religion = PREV } } # Cannot convert counties of owners who has that religion
			}
		}

		effect = {
			location = {
				religion = FROM
				add_province_modifier = {
					name = religious_tension
					years = 2
				}
			}
			FROM = {
				piety = -250
				hidden_tooltip = { character_event = { id = MNM.4990 } }
			}
			hidden_tooltip = {
				if = { # Notify county owner
					limit = {
						holder_scope = { NOT = { character = FROM } }
					}
					holder_scope = { character_event = { id = MNM.4991 } }
				}
			}
		}

		ai_will_do = {
			factor = 1
		}
	}
}
settlement_decisions = {
	corrupt_world_tree = {
		is_high_prio = yes

		ai_check_interval = 60

		filter = sub_realm_owned
		ai_target_filter = sub_realm_owned

		only_playable = yes

		from_potential = {
			is_untouchable_trigger = no

			is_playable = yes
			is_adult = yes
			is_incapable = no
			prisoner = no

			religion = old_gods_worship
		}

		potential = {
			location = { NOT = { has_province_flag = corrupt_world_tree_ongoing_flag } }

			has_title_flag = world_tree_title_flag
			holding_type = temple
			has_siege = no
			is_occupied = no
		}

		allow = {
			holder_scope = {
				religion = FROM
				liege = {
					religion = old_gods_worship
				}
			}
			location = { religion = FROM }

			FROM = {
				true_religion = old_gods_worship

				wealth = 250
				piety = 5000
			}
		}

		effect = {
			save_event_target_as = target_title

			FROM = {
				save_event_target_as = target_corruptor

				wealth = -250
				piety = -5000
			}

			custom_tooltip = {
				text = corrupt_world_tree_tooltip
				hidden_tooltip = {
					location = {
						save_event_target_as = target_province

						set_province_flag = corrupt_world_tree_ongoing_flag		# Stops from firing decision twice
					}
					FROM = { narrative_event = { id = WCVOD.410 } }
				}
			}
		}
		revoke_allowed = {
			always = no
		}
		ai_will_do = {
			factor = 1
		}
	}
	# WCRLM.595 is another way to fire WCRLM.600 event, check its condtions as well
	burn_world_tree = {
		is_high_prio = yes

		ai_check_interval = 60

		filter = sub_realm_owned
		ai_target_filter = sub_realm_owned

		only_playable = yes

		from_potential = {
			is_untouchable_trigger = no

			is_playable = yes
			is_adult = yes
			is_incapable = no
			prisoner = no

			NOT = { religion = old_gods_worship }
		}

		potential = {
			location = { NOT = { has_province_flag = burn_world_tree_ongoing_flag } }
			
			trigger_if = {
				limit = { NOT = { has_title_flag = nightmare_tree_title_flag } }
				FROM = { NOT = { religion_group = druidism_group } }
			}

			OR = {
				has_title_flag = world_tree_title_flag
				has_title_flag = nightmare_tree_title_flag
			}
			holding_type = temple
			has_siege = no
			is_occupied = no
			
			# AI Preferences
			FROM = {
				OR = {
					ai = no
					evil_true_religion_trigger = yes
					trait = cruel
					trait = lunatic
					ROOT = { has_title_flag = nightmare_tree_title_flag }
				}
			}
		}

		allow = {
			holder_scope = {
				trigger_if = {
					limit = { ROOT = { NOT = { has_title_flag = nightmare_tree_title_flag } } }
					NOT = { religion_group = druidism_group }
				}
				NOT = { religion = old_gods_worship }
			}

			FROM = {
				trigger_if = {
					limit = { ROOT = { NOT = { has_title_flag = nightmare_tree_title_flag } } }
					NOT = { true_religion_group = druidism_group }
				}
				NOT = { true_religion = old_gods_worship }
			}
		}

		effect = {
			# immediate of WCRLM.600
			save_event_target_as = target_title
			location = {
				save_event_target_as = target_province

				set_province_flag = burn_world_tree_ongoing_flag		# Stops from firing decision twice
			}
			FROM = { save_event_target_as = target_arsonist }

			FROM = {
				show_scope_change = no

				# option of WCRLM.600
				prestige = 2500

				custom_tooltip = {
					text = burn_world_tree_tooltip	# Needs FROM as a scope
					hidden_tooltip = { narrative_event = { id = WCRLM.600 } }
				}
			}
		}
		revoke_allowed = {
			always = no
		}
		ai_will_do = {
			factor = 1
		}
	}
}