targeted_decisions = {
	cult_of_the_damned_recruit = {
		is_in_society = yes

		ai_target_filter = realm
		ai_check_interval = 12

		from_potential = {
			is_adult = yes
			prisoner = no
			is_incapable = no

			NOT = { has_character_modifier = recruitment_timer }
			society_member_of = cult_of_the_damned
			OR = {
				ai = no
				society_rank = {
					society = cult_of_the_damned
					rank == 2
				}
				society_rank = {
					society = cult_of_the_damned
					rank == 3
				}
			}
		}
		potential = {
			OR = {
				FROM = { ai = no }
				ai = no
			}
			OR = {
				FROM = { ai = yes } # Only checks realm, so by definition in range
				is_within_diplo_range = FROM
			}
			is_adult = yes
			prisoner = no
			is_incapable = no

			is_in_society = no

			#AI cannot invite other AIs when society is full
			NAND = {
				ai = yes
				FROM = { ai = yes }
				NOT = { can_join_society = cult_of_the_damned }
			}

			#Blocks so AI recruits sensible people (who might say no)
			OR = {
				FROM = { ai = no }
				is_friend = FROM
				is_lover = FROM
				is_close_relative = FROM
				trait = trusting
				has_impious_trait_trigger = yes
				trait = drunkard
				trait = possessed
				trait = lunatic
				interested_in_society = cult_of_the_damned
			}
		}
		allow = {
			is_inaccessible_trigger = no

			custom_tooltip = {
				text = recruit_block_tooltip
				OR = {
					NOT = { has_character_flag = cult_of_the_damned_attempted_recruitment }
					interested_in_society = cult_of_the_damned
				}
				NOT = { has_character_flag = being_recruited_by_cult_of_the_damned }
			}
			FROM = {
				is_inaccessible_trigger = no
				custom_tooltip = {
					text = recruit_delay_timer_tooltip
					NOT = { has_character_modifier = recruitment_delay_timer }
				}
			}

			has_cult_of_the_damned_prerequisites = yes
			opinion = { who = FROM value = 0 }
		}
		effect = {
			set_character_flag = cult_of_the_damned_attempted_recruitment
			set_character_flag = being_recruited_by_cult_of_the_damned
			FROM = { save_event_target_as = secret_society_recruiter }
			hidden_effect = {
				character_event = { id = WCCSO.7001 days = 3 } # recruitment chain
				character_event = { id = MNM.7030 days = 365 } # sends delayed back up, in case recruitment fails somehow
				FROM = {
					if = {
						limit = { ai = yes }
						add_character_modifier = {
							name = recruitment_timer
							days = 730
							hidden = yes
						}
					}
					add_character_modifier = {
						name = recruitment_delay_timer
						days = 90
						hidden = yes
					}
				}
			}
		}
		revoke_allowed = {
			always = no
		}
		ai_will_do = {
			factor = 0.1
			modifier = {
				factor = 10 # recruit interested parties
				interested_in_society = cult_of_the_damned
			}
			modifier = {
				factor = 0 # don't recruit characters interested in something else
				NOT = { interested_in_society = cult_of_the_damned }
				is_interested_in_any_society = yes
			}
		}
	}
	shadow_council_recruit = {
		is_in_society = yes

		ai_target_filter = realm
		ai_check_interval = 12

		from_potential = {
			is_adult = yes
			prisoner = no
			is_incapable = no

			NOT = { has_character_modifier = recruitment_timer }
			society_member_of = shadow_council
			OR = {
				ai = no
				society_rank = {
					society = shadow_council
					rank == 2
				}
				society_rank = {
					society = shadow_council
					rank == 3
				}
			}
		}
		potential = {
			OR = {
				FROM = { ai = no }
				ai = no
			}
			OR = {
				FROM = { ai = yes } # Only checks realm, so by definition in range
				is_within_diplo_range = FROM
			}
			is_adult = yes
			prisoner = no
			is_incapable = no

			is_in_society = no


			#AI cannot invite other AIs when society is full
			NAND = {
				ai = yes
				FROM = { ai = yes }
				NOT = { can_join_society = shadow_council }
			}

			#Blocks so AI recruits sensible people (who might say no)
			OR = {
				FROM = { ai = no }
				is_friend = FROM
				is_lover = FROM
				is_close_relative = FROM
				trait = trusting
				has_impious_trait_trigger = yes
				trait = drunkard
				trait = possessed
				trait = lunatic
				interested_in_society = shadow_council
			}
		}
		allow = {
			is_inaccessible_trigger = no

			custom_tooltip = {
				text = recruit_block_tooltip
				OR = {
					NOT = { has_character_flag = shadow_council_attempted_recruitment }
					interested_in_society = shadow_council
				}
				NOT = { has_character_flag = being_recruited_by_shadow_council }
			}
			FROM = {
				is_inaccessible_trigger = no
				custom_tooltip = {
					text = recruit_delay_timer_tooltip
					NOT = { has_character_modifier = recruitment_delay_timer }
				}
			}

			has_shadow_council_prerequisites = yes
			opinion = { who = FROM value = 0 }
		}
		effect = {
			set_character_flag = shadow_council_attempted_recruitment
			set_character_flag = being_recruited_by_shadow_council
			FROM = { save_event_target_as = secret_society_recruiter }
			hidden_effect = {
				character_event = { id = WCCSO.7001 days = 3 } # recruitment chain
				character_event = { id = MNM.7030 days = 365 } # sends delayed back up, in case recruitment fails somehow
				FROM = {
					if = {
						limit = { ai = yes }
						add_character_modifier = {
							name = recruitment_timer
							days = 730
							hidden = yes
						}
					}
					add_character_modifier = {
						name = recruitment_delay_timer
						days = 90
						hidden = yes
					}
				}
			}
		}
		revoke_allowed = {
			always = no
		}
		ai_will_do = {
			factor = 0.1
			modifier = {
				factor = 10 # recruit interested parties
				interested_in_society = shadow_council
			}
			modifier = {
				factor = 0 # don't recruit characters interested in something else
				NOT = { interested_in_society = shadow_council }
				is_interested_in_any_society = yes
			}
		}
	}
	twilights_hammer_cult_recruit = {
		is_in_society = yes

		ai_target_filter = realm
		ai_check_interval = 12

		from_potential = {
			is_adult = yes
			prisoner = no
			is_incapable = no

			NOT = { has_character_modifier = recruitment_timer }
			society_member_of = twilights_hammer_cult
			OR = {
				ai = no
				society_rank = {
					society = twilights_hammer_cult
					rank == 2
				}
				society_rank = {
					society = twilights_hammer_cult
					rank == 3
				}
			}
		}
		potential = {
			OR = {
				FROM = { ai = no }
				ai = no
			}
			OR = {
				FROM = { ai = yes } # Only checks realm, so by definition in range
				is_within_diplo_range = FROM
			}
			is_adult = yes
			prisoner = no
			is_incapable = no

			is_in_society = no


			#AI cannot invite other AIs when society is full
			NAND = {
				ai = yes
				FROM = { ai = yes }
				NOT = { can_join_society = twilights_hammer_cult }
			}

			#Blocks so AI recruits sensible people (who might say no)
			OR = {
				FROM = { ai = no }
				is_friend = FROM
				is_lover = FROM
				is_close_relative = FROM
				trait = trusting
				has_impious_trait_trigger = yes
				trait = drunkard
				trait = possessed
				trait = lunatic
				interested_in_society = twilights_hammer_cult
			}
		}
		allow = {
			is_inaccessible_trigger = no

			custom_tooltip = {
				text = recruit_block_tooltip
				OR = {
					NOT = { has_character_flag = twilights_hammer_cult_attempted_recruitment }
					interested_in_society = twilights_hammer_cult
				}
				NOT = { has_character_flag = being_recruited_by_twilights_hammer_cult }
			}
			FROM = {
				is_inaccessible_trigger = no
				custom_tooltip = {
					text = recruit_delay_timer_tooltip
					NOT = { has_character_modifier = recruitment_delay_timer }
				}
			}

			has_twilights_hammer_cult_prerequisites = yes
			opinion = { who = FROM value = 0 }
		}
		effect = {
			set_character_flag = twilights_hammer_cult_attempted_recruitment
			set_character_flag = being_recruited_by_twilights_hammer_cult
			FROM = { save_event_target_as = secret_society_recruiter }
			hidden_effect = {
				character_event = { id = WCCSO.7001 days = 3 } # recruitment chain
				character_event = { id = MNM.7030 days = 365 } # sends delayed back up, in case recruitment fails somehow
				FROM = {
					if = {
						limit = { ai = yes }
						add_character_modifier = {
							name = recruitment_timer
							days = 730
							hidden = yes
						}
					}
					add_character_modifier = {
						name = recruitment_delay_timer
						days = 90
						hidden = yes
					}
				}
			}
		}
		revoke_allowed = {
			always = no
		}
		ai_will_do = {
			factor = 0.1
			modifier = {
				factor = 10 # recruit interested parties
				interested_in_society = twilights_hammer_cult
			}
			modifier = {
				factor = 0 # don't recruit characters interested in something else
				NOT = { interested_in_society = twilights_hammer_cult }
				is_interested_in_any_society = yes
			}
		}
	}
}

title_decisions = { #Template
	build_temple_of_elune = {
		filter = owned
		ai_target_filter = owned
		ai_check_interval = 60
		
		only_playable = yes
		is_in_society = yes
		
		from_potential = {
			is_adult = yes
			is_incapable = no
			prisoner = no
			society_member_of = sisterhood_of_elune
			society_rank > 3
		}
		potential = {
			tier = COUNT
			location = {
				num_of_empty_holdings = 1
			}
		}
		allow = {
			is_occupied = no
			FROM = {
				war = no
				society_currency >= 2000
			}
		}
		effect = {
			FROM = {
				change_society_currency = -2000
			}
			location = {
				build_holding = { type = temple }
			}
		}
		ai_will_do = {
			factor = 0.8
		}
	}
#	secretly_convert_to_religionname_holy_site = {
#		filter = demesne
#		ai_target_filter = self
#
#		only_playable = yes
#
#		from_potential = {
#			ai = no
#			NOT = { is_incapable = yes }
#			NOT = { secret_religion = religionname }
#			NOT = { religion = religionname }
#			NOT = { controls_religion = yes }
#		}
#
#		potential = {
#			tier = COUNT
#			NOT = {
#				location = { religion = religionname }
#			}
#			OR = {
#				is_holy_site = religionname
#				any_de_jure_vassal_title = {
#					is_holy_site = religionname
#				}
#			}
#			OR = {
#				holder_scope = {
#					character = FROM
#				}
#				AND = {
#					tier = BARON
#					holder_scope = {
#						liege = {
#							character = FROM
#						}
#					}
#				}
#			}
#		}
#
#		allow = {
#			FROM = {
#				piety = 250
#				prisoner = no
#				NOT = { is_incapable = yes }
#				NOT = { is_inaccessible_trigger = yes }
#				NOT = { society_member_of = secret_religious_cult }
#			}
#		}
#
#		effect = {
#			FROM = {
#				piety = -250
#				set_secret_religion = religionname
#			}
#		}
#
#		revoke_allowed = {
#			always = no
#		}
#
#		ai_will_do = {
#			factor = 0
#		}
#	}
}
society_decisions = {
	ask_for_ancient_mark = {

		ai_check_interval = 36

		only_playable = yes

		potential = {
			is_adult = yes
			is_incapable = no
			prisoner = no
			society_member_of = cenarion_circle
		}

		allow = {
			is_inaccessible_trigger = no
			society_currency >= 500
			custom_tooltip = {
				text = is_not_busy_trigger_tooltip
				hidden_tooltip = { NOT = { has_character_flag = do_not_disturb } }
			}
			custom_tooltip = {
				text = has_not_used_decision_3_years_tooltip
				hidden_tooltip = {
					OR = {
						NOT = { has_character_flag = ask_for_ancient_mark_cooldown_flag }
						had_character_flag = { flag = ask_for_ancient_mark_cooldown_flag years = 3 }
					}
				}
			}
		}

		effect = {
			set_character_flag = do_not_disturb			# Always must be before event chain
			
			character_event = { id = WCCSO.10100 }
			change_society_currency = -500
		}

		revoke_allowed = {
			always = no
		}

		ai_will_do = {
			factor = 1
		}
	}
	train_class_society = {

		ai_check_interval = 120

		only_playable = yes

		potential = {
			is_adult = yes
			is_incapable = no
			prisoner = no
			OR = {
				AND = {
					society_member_of = cenarion_circle
					society_rank > 1
				}
				society_member_of = sisterhood_of_elune
			}
			OR = {
				is_weak_druid_class_trigger = yes
				is_weak_priest_class_trigger = yes
			}
			can_level_up_trigger = yes
		}

		allow = {
			is_inaccessible_trigger = no
			society_currency >= 2000
			custom_tooltip = {
				text = has_not_used_decision_10_years_tooltip
				hidden_tooltip = {
					OR = {
						NOT = { has_character_flag = train_class_society_cooldown_flag }
						had_character_flag = { flag = train_class_society_cooldown_flag years = 10 }
					}
				}
			}
		}

		effect = {
			change_society_currency = -2000
			character_event = { id = WCCLS.7999 }
			set_character_flag = train_class_society_cooldown_flag
			
		}

		revoke_allowed = {
			always = no
		}

		ai_will_do = {
			factor = 0.8
		}
	}
	invite_student_society = {
		is_high_prio = yes

		ai_check_interval = 24

		ai = no
		only_playable = yes

		potential = {
			is_adult = yes
			is_incapable = no
			prisoner = no
			OR = {
				society_member_of = sisterhood_of_elune
				society_member_of = cenarion_circle
			}
			society_rank > 2
		}

		allow = {
			is_inaccessible_trigger = no
			
			NOT = { has_character_modifier = invited_student_society_cooldown }
			
			society_currency >= 500
		}

		effect = {
			add_character_modifier = { name = invited_student_society_cooldown years = 1 }
			
			change_society_currency = -500
			
			if = {
				limit = { society_member_of = sisterhood_of_elune }
				create_random_priest = {
					dynasty = none
					religion = ROOT
					culture = ROOT
					female = yes
					age = 18
					random_traits = yes
					trait = class_priest_2
					trait = subclass_moon_priest
				}
			}
			else = {
				create_random_priest = {
					dynasty = none
					religion = ROOT
					culture = ROOT
					age = 18
					random_traits = yes
					trait = class_druid_2
				}
			}
			new_character = {
				if = {
					limit = { ROOT = { society_member_of = sisterhood_of_elune } }
					join_society = sisterhood_of_elune
				}
				else = {
					join_society = cenarion_circle
				}
				character_event = { id = WCCSO.10000 }
			}
		}

		revoke_allowed = {
			always = no
		}

		ai_will_do = {
			factor = 0			# AI spawns a lot of characters
		}
	}
	build_cenarion_enclave = {
		is_high_prio = yes

		ai_check_interval = 24

		only_playable = yes

		potential = {
			is_adult = yes
			is_incapable = no
			prisoner = no
			society_member_of = cenarion_circle
			society_rank > 3
			capital_scope = {
				NOT = { hospital_has_building = wc_cenarion_enclave }
			}
		}

		allow = {
			is_inaccessible_trigger = no
			society_currency >= 1500
		}

		effect = {
			change_society_currency = -1500
			capital_scope = {
				if = {
					limit = {
					has_hospital = no
					}
				  	build_holding = {
						type = hospital
						holder = ROOT
					}
				}
				add_to_extra_holding = { type = hospital building = wc_cenarion_enclave }
				}
		}

		revoke_allowed = {
			always = no
		}

		ai_will_do = {
			factor = 1
		}
	}

	raise_host_of_the_wilds = {
		is_high_prio = yes
		
		ai_check_interval = 12

		only_playable = yes

		potential = {
			is_adult = yes
			is_incapable = no
			prisoner = no
			society_member_of = cenarion_circle
			is_society_grandmaster = yes
			NOT = {
				has_earmarked_regiments = host_of_the_wilds
			}
		}

		allow = {
			is_inaccessible_trigger = no
			war = yes
		}

		effect = {			
			capital_scope = {
					PREV = {
						spawn_unit = {
							owner = ROOT
							province = PREV
							home = PREV
							troops = {
								light_cavalry = { 1000 1000 }
								knights = { 500 500 }
								golems = { 100 100 }
							}
							attrition = 0.25
							disband_on_peace = yes
							maintenance_multiplier = 0
							earmark = host_of_the_wilds
						}
					}
				}
		}

		revoke_allowed = {
			always = no
		}

		ai_will_do = {
			factor = 1
		}
	}
	# study_at_temple = {

		# ai_check_interval = 120

		# only_playable = yes

		# potential = {
			# is_adult = yes
			# is_incapable = no
			# prisoner = no
			# society_member_of = sisterhood_of_elune
			# is_weak_priest_class_trigger = yes
			# can_level_up_trigger = yes
		# }

		# allow = {
			# is_inaccessible_trigger = no
			# society_currency >= 2000
			# custom_tooltip = {
				# text = has_not_used_decision_10_years_tooltip
				# hidden_tooltip = {
					# OR = {
						# NOT = { has_character_flag = study_at_temple_cooldown_flag }
						# had_character_flag = { flag = study_at_temple_cooldown_flag years = 10 }
					# }
				# }
			# }
		# }

		# effect = {
			# change_society_currency = -2000
			# character_event = { id = WCCLS.7999 }
			# set_character_flag = study_at_temple_cooldown_flag
			
		# }

		# revoke_allowed = {
			# always = no
		# }

		# ai_will_do = {
			# factor = 0.8
		# }
	# }
	# vows_of_purity = {
		# is_high_prio = yes

		# ai_check_interval = 60

		# only_playable = yes

		# potential = {
			# is_adult = yes
			# is_incapable = no
			# prisoner = no
			# society_rank > 1
			# society_member_of = sisterhood_of_elune
		# }

		# allow = {
			# is_inaccessible_trigger = no
			# NOT = { trait = celibate }
		# }

		# effect = {
			# change_society_currency = 150
			# add_trait = celibate
			# add_character_modifier = { name = keeping_vows_purity years = 10 }
		# }

		# revoke_allowed = {
			# always = no
		# }

		# ai_will_do = {
			# factor = 0.25
			# modifier = {
				# factor = 0
				# is_married = yes
			# }
			# modifier = {
				# factor = 2
				# trait = chaste
			# }
			# modifier = {
				# factor = 0.3
				# trait = lustful
			# }
		# }
	# }
	# end_purity = {
		# is_high_prio = yes

		# ai_check_interval = 24

		# only_playable = yes

		# potential = {
			# is_adult = yes
			# is_incapable = no
			# prisoner = no
			# society_rank > 1
			# society_member_of = sisterhood_of_elune
			# trait = celibate
		# }

		# allow = {
			# is_inaccessible_trigger = no
			# NOT = { has_character_modifier = keeping_vows_purity}
		# }

		# effect = {
			# remove_trait = celibate
		# }

		# revoke_allowed = {
			# always = no
		# }

		# ai_will_do = {
			# factor = 0.1
			# modifier = {
				# factor = 1
				# is_married = yes
			# }
		# }
	# }
	# break_purity = {
		# is_high_prio = yes

		# ai_check_interval = 24

		# only_playable = yes

		# potential = {
			# is_adult = yes
			# is_incapable = no
			# prisoner = no
			# society_rank > 1
			# society_member_of = sisterhood_of_elune
			# trait = celibate
		# }

		# allow = {
			# is_inaccessible_trigger = no
			# has_character_modifier = keeping_vows_purity
		# }

		# effect = {
			# remove_trait = celibate
			# remove_character_modifier = keeping_vows_purity
			# change_society_currency = -500
			# piety = -200
		# }

		# revoke_allowed = {
			# always = no
		# }

		# ai_will_do = {
			# factor = 0
		# }
	# }
}