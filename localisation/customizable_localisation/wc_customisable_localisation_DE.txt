#AVAILABLE CUSTOM LOCALISATION KEYS
#When adding new custom loc keys, add them to the appropriate category (or add a new one) and describe them. Name the strings "String_X" where x is its content.
# To not display anything, you can use 'localisation_key = ""'
# To have the first valid text be used, rather than a random valid text, use "use_first_valid = yes"

#GetHalbgottHalbgöttin

defined_text = {
	name = GetHalbgottHalbgöttin

	text = {
		trigger = { is_female = yes }
		localisation_key = String_Halbgöttin
	}
	text = {
		trigger = { is_female = no }
		localisation_key = String_Halbgott
	}	
}

defined_text = {
	name = GetGenericArtifactEndingGerman

	text = {
		trigger = {
			event_target:target_renamed_artifact = {
				OR = {
					has_artifact_flag = amulet
					has_artifact_flag = ring
					has_artifact_flag = mace
					has_artifact_flag = bracer
					artifact_type = sword_twohanded_5
					artifact_type = sword_twohanded_4
					artifact_type = sword_twohanded_3
					artifact_type = sword_twohanded_2
					artifact_type = sword_twohanded_1
					artifact_type = spear_5
					artifact_type = spear_4
					artifact_type = spear_3
					artifact_type = spear_2
					artifact_type = spear_1
				}
			}
		}
		localisation_key = generic_artifact_ending_de_r
	}

	text = {
		trigger = {
			event_target:target_renamed_artifact = {
				OR = {
					artifact_type = sword_onehanded_5
					artifact_type = sword_onehanded_4
					artifact_type = sword_onehanded_3
					artifact_type = sword_onehanded_2
					artifact_type = sword_onehanded_1
				}
			}
		}
		localisation_key = generic_artifact_ending_de_s
	}
}

# Gets von/des depending on religion
defined_text = {
	name = GetVonEluneDesLichts

	text = {
		trigger = { religion = kaldorei_religion }
		localisation_key = GetVonEluneDesLichts_von
	}
	fallback_text = {
		localisation_key = GetVonEluneDesLichts_des
	}
}