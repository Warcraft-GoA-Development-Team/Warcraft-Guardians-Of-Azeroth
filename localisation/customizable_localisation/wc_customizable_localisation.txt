defined_text = {
	name = GetAltSocietyRankUpTooltip

	text = {
		trigger = {
			society_member_of = cenarion_circle
			society_rank == 1
		}
		localisation_key = GetCCSocietyRankUpTooltip_Rank1
	}
	text = {
		trigger = {
			society_member_of = cenarion_circle
			society_rank == 2
		}
		localisation_key = GetCCSocietyRankUpTooltip_Rank2
	}
	text = {
		trigger = {
			society_member_of = cenarion_circle
			society_rank == 3
		}
		localisation_key = GetCCSocietyRankUpTooltip_Rank3
	}
	text = {
		trigger = {
			society_member_of = sisterhood_of_elune
			society_rank == 1
		}
		localisation_key = GetSOESocietyRankUpTooltip_Rank1
	}
	text = {
		trigger = {
			society_member_of = sisterhood_of_elune
			society_rank == 2
		}
		localisation_key = GetSOESocietyRankUpTooltip_Rank2
	}
	text = {
		trigger = {
			society_member_of = sisterhood_of_elune
			society_rank == 3
		}
		localisation_key = GetSOESocietyRankUpTooltip_Rank3
	}
}
defined_text = {	# Gets adjective depends on religion
	name = GetRelAdjective
	
	text = {
		trigger = { dark_public_religion_trigger = yes }
		localisation_key = GetRelAdjective_Unholy
	}
	text = {
		trigger = {
			dark_public_religion_trigger = no
			secular_public_religion_trigger = yes
		}
		localisation_key = GetRelAdjective_Wise
	}
	fallback_text = {
		localisation_key = GetRelAdjective_Holy
	}
}
defined_text = {	# Gets title of religious head (when religious head isn't created yet)
	name = GetRelHeadTitle
	
	text = {
		trigger = { religion = old_ways }
		localisation_key = GetRelHeadTitle_old_ways
	}
	text = {
		trigger = { religion = ursine }
		localisation_key = GetRelHeadTitle_ursine
	}
	text = {
		trigger = { religion = cult_of_loa }
		localisation_key = GetRelHeadTitle_cult_of_loa
	}
	text = {
		trigger = { religion = cult_of_hakkar }
		localisation_key = GetRelHeadTitle_cult_of_hakkar
	}
	text = {
		trigger = { religion = orcish_shamanism }
		localisation_key = GetRelHeadTitle_orcish_shamanism
	}
	text = {
		trigger = { religion = shamanism }
		localisation_key = GetRelHeadTitle_shamanism
	}
	text = {
		trigger = { religion = earth_mother_worship }
		localisation_key = GetRelHeadTitle_earth_mother_worship
	}
	text = {
		trigger = { religion = voidfarer }
		localisation_key = GetRelHeadTitle_voidfarer
	}
	text = {
		trigger = { religion = forsaken_cult }
		localisation_key = GetRelHeadTitle_forsaken_cult
	}
	text = {
		trigger = { religion = lightbound }
		localisation_key = GetRelHeadTitle_lightbound
	}
}
# Only warcraft-related diseases
defined_text = {
	name = GetDiagnosis
	
	# Warcraft diseases
	text = {
		trigger = {
			OR = {
				has_character_flag = EVTDESC_RIP_11045_plague_of_undeath_flag
				has_character_flag = EVTDESC_RIP_11045_plague_of_undeath_horse
				has_character_flag = EVTDESC_RIP_11045_plague_of_undeath_certain
				has_character_flag = EVTDESC_RIP_11045_plague_of_undeath_sure
				has_character_flag = EVTDESC_RIP_11045_plague_of_undeath_uncertain
			}
		}
		localisation_key = String_the_Plague
	}
	text = {
		trigger = {
			OR = {
				has_character_flag = announce_corrupted_blood
				
				has_character_flag = EVTDESC_RIP_11045_corrupted_blood_flag
				has_character_flag = EVTDESC_RIP_11045_corrupted_blood_flag_horse
				has_character_flag = EVTDESC_RIP_11045_corrupted_blood_flag_certain
				has_character_flag = EVTDESC_RIP_11045_corrupted_blood_flag_sure
				has_character_flag = EVTDESC_RIP_11045_corrupted_blood_flag_uncertain
			}
		}
		localisation_key = String_corrupted_blood
	}
	
	# Vanilla diseases
	text = {
		trigger = {
			OR = {
				has_character_flag = announce_pneumonic
				
				has_character_flag = EVTDESC_RIP_11045_has_pneumonia_flag
				has_character_flag = EVTDESC_RIP_11045_has_pneumonia_flag_horse
				has_character_flag = EVTDESC_RIP_11045_has_pneumonia_flag_certain
				has_character_flag = EVTDESC_RIP_11045_has_pneumonia_flag_sure
				has_character_flag = EVTDESC_RIP_11045_has_pneumonia_flag_uncertain
			}
		}
		localisation_key = string_pneumonia
	}
	text = {	# Devouring Plague
		trigger = {
			OR = {
				has_character_flag = announce_syphilis
				
				has_character_flag = EVTDESC_RIP_11045_has_syphilis_flag
				has_character_flag = EVTDESC_RIP_11045_has_syphilis_flag_horse
				has_character_flag = EVTDESC_RIP_11045_has_syphilis_flag_certain
				has_character_flag = EVTDESC_RIP_11045_has_syphilis_flag_sure
				has_character_flag = EVTDESC_RIP_11045_has_syphilis_flag_uncertain
			}
		}
		localisation_key = String_syphilis
	}
	text = {	# Blood Plague
		trigger = {
			OR = {
				has_character_flag = announce_tuberculosis
				
				has_character_flag = EVTDESC_RIP_11045_has_tuberculosis_flag
				has_character_flag = EVTDESC_RIP_11045_has_tuberculosis_flag_horse
				has_character_flag = EVTDESC_RIP_11045_has_tuberculosis_flag_certain
				has_character_flag = EVTDESC_RIP_11045_has_tuberculosis_flag_sure
				has_character_flag = EVTDESC_RIP_11045_has_tuberculosis_flag_uncertain
			}
		}
		localisation_key = String_consumption
	}
	text = {	# Frost Fever
		trigger = {
			OR = {
				has_character_flag = announce_typhoi
				
				has_character_flag = EVTDESC_RIP_11045_has_typhoid_fever_flag
				has_character_flag = EVTDESC_RIP_11045_has_typhoid_fever_flag_horse
				has_character_flag = EVTDESC_RIP_11045_has_typhoid_fever_flag_certain
				has_character_flag = EVTDESC_RIP_11045_has_typhoid_fever_flag_sure
				has_character_flag = EVTDESC_RIP_11045_has_typhoid_fever_flag_uncertain
			}
		}
		localisation_key = String_slow_fever
	}
	text = {	# Ebon Plague
		trigger = {
			OR = {
				has_character_flag = announce_typhus
				
				has_character_flag = EVTDESC_RIP_11045_has_typhus_flag
				has_character_flag = EVTDESC_RIP_11045_has_typhus_flag_horse
				has_character_flag = EVTDESC_RIP_11045_has_typhus_flag_certain
				has_character_flag = EVTDESC_RIP_11045_has_typhus_flag_sure
				has_character_flag = EVTDESC_RIP_11045_has_typhus_flag_uncertain
			}
		}
		localisation_key = String_camp_fever
	}
	text = {
		trigger = {
			OR = {
				has_character_flag = announce_plague
				
				has_character_flag = EVTDESC_RIP_11045_has_bubonic_plague_flag
				has_character_flag = EVTDESC_RIP_11045_has_bubonic_plague_flag_horse
				has_character_flag = EVTDESC_RIP_11045_has_bubonic_plague_flag_certain
				has_character_flag = EVTDESC_RIP_11045_has_bubonic_plague_flag_sure
				has_character_flag = EVTDESC_RIP_11045_has_bubonic_plague_flag_uncertain
			}
		}
		localisation_key = String_the_Plague
	}
	text = {
		trigger = {
			OR = {
				has_character_flag = announce_measles
				
				has_character_flag = EVTDESC_RIP_11045_has_measles_flag
				has_character_flag = EVTDESC_RIP_11045_has_measles_flag_horse
				has_character_flag = EVTDESC_RIP_11045_has_measles_flag_certain
				has_character_flag = EVTDESC_RIP_11045_has_measles_flag_sure
				has_character_flag = EVTDESC_RIP_11045_has_measles_flag_uncertain
			}
		}
		localisation_key = String_measles
	}
	text = {
		trigger = {
			OR = {
				has_character_flag = announce_smallpox
				
				has_character_flag = EVTDESC_RIP_11045_has_small_pox_flag
				has_character_flag = EVTDESC_RIP_11045_has_small_pox_flag_horse
				has_character_flag = EVTDESC_RIP_11045_has_small_pox_flag_certain
				has_character_flag = EVTDESC_RIP_11045_has_small_pox_flag_sure
				has_character_flag = EVTDESC_RIP_11045_has_small_pox_flag_uncertain
			}
		}
		localisation_key = String_smallpox
	}
	text = {
		trigger = {
			OR = {
				has_character_flag = announce_syphilis
				
				has_character_flag = EVTDESC_RIP_11045_has_aztec_disease_flag
				has_character_flag = EVTDESC_RIP_11045_has_aztec_disease_flag_horse
				has_character_flag = EVTDESC_RIP_11045_has_aztec_disease_flag_certain
				has_character_flag = EVTDESC_RIP_11045_has_aztec_disease_flag_sure
				has_character_flag = EVTDESC_RIP_11045_has_aztec_disease_flag_uncertain
			}
		}
		localisation_key = String_syphilis
	}
	text = {
		trigger = {
			OR = {
				has_character_flag = announce_flu
				
				has_character_flag = EVTDESC_RIP_11045_has_flu_flag
				has_character_flag = EVTDESC_RIP_11045_has_flu_flag_horse
				has_character_flag = EVTDESC_RIP_11045_has_flu_flag_certain
				has_character_flag = EVTDESC_RIP_11045_has_flu_flag_sure
				has_character_flag = EVTDESC_RIP_11045_has_flu_flag_uncertain
			}
		}
		localisation_key = String_flu
	}
	text = {
		trigger = {
			OR = {
				has_character_flag = announce_dysentery
				
				has_character_flag = EVTDESC_RIP_11045_has_dysentery_flag
				has_character_flag = EVTDESC_RIP_11045_has_dysentery_flag_horse
				has_character_flag = EVTDESC_RIP_11045_has_dysentery_flag_certain
				has_character_flag = EVTDESC_RIP_11045_has_dysentery_flag_sure
				has_character_flag = EVTDESC_RIP_11045_has_dysentery_flag_uncertain
			}
		}
		localisation_key = String_dysentery
	}
	text = {
		trigger = {
			OR = {
				has_character_flag = announce_gout
				
				has_character_flag = EVTDESC_RIP_11045_has_gout_flag
				has_character_flag = EVTDESC_RIP_11045_has_gout_flag_horse
				has_character_flag = EVTDESC_RIP_11045_has_gout_flag_certain
				has_character_flag = EVTDESC_RIP_11045_has_gout_flag_sure
				has_character_flag = EVTDESC_RIP_11045_has_gout_flag_uncertain
			}
		}
		localisation_key = String_gout
	}
	text = {
		trigger = {
			OR = {
				has_character_flag = announce_food_poisoning
				
				has_character_flag = EVTDESC_RIP_11045_has_food_poisoning_flag
				has_character_flag = EVTDESC_RIP_11045_has_food_poisoning_flag_horse
				has_character_flag = EVTDESC_RIP_11045_has_food_poisoning_flag_certain
				has_character_flag = EVTDESC_RIP_11045_has_food_poisoning_flag_sure
				has_character_flag = EVTDESC_RIP_11045_has_food_poisoning_flag_uncertain
			}
		}
		localisation_key = String_food_poisoning
	}
	text = {
		trigger = {
			OR = {
				has_character_flag = announce_rabies
				
				has_character_flag = EVTDESC_RIP_11045_has_rabies_flag
				has_character_flag = EVTDESC_RIP_11045_has_rabies_flag_horse
				has_character_flag = EVTDESC_RIP_11045_has_rabies_flag_certain
				has_character_flag = EVTDESC_RIP_11045_has_rabies_flag_sure
				has_character_flag = EVTDESC_RIP_11045_has_rabies_flag_uncertain
			}
		}
		localisation_key = String_rabies
	}
	text = {
		trigger = {
			OR = {
				has_character_flag = announce_cancer
				
				has_character_flag = EVTDESC_RIP_11045_has_cancer_flag
				has_character_flag = EVTDESC_RIP_11045_has_cancer_flag_horse
				has_character_flag = EVTDESC_RIP_11045_has_cancer_flag_certain
				has_character_flag = EVTDESC_RIP_11045_has_cancer_flag_sure
				has_character_flag = EVTDESC_RIP_11045_has_cancer_flag_uncertain
			}
		}
		localisation_key = String_Cancer
	}
}

# Gets name of faction
defined_text = {
	name = GetFactionName
	
	text = {
		trigger = {
			OR = {
				is_member_of_horde_faction_trigger = yes
				top_liege = { is_member_of_horde_faction_trigger = yes }
			}
		}
		localisation_key = GetFactionName_Horde
	}
	text = {
		trigger = {
			OR = {
				is_member_of_alliance_faction_trigger = yes
				top_liege = { is_member_of_alliance_faction_trigger = yes }
			}
		}
		localisation_key = GetFactionName_Alliance
	}
	fallback_text = {
		localisation_key = GetFactionName_Azeroth
	}
}

# Gets Hide/Show depending on flag
defined_text = {
	name = GetHideShow
	
	text = {
		trigger = { has_character_flag = hide_class_training_decisions_flag }
		localisation_key = GetHideShow_Show
	}
	fallback_text = {
		localisation_key = GetHideShow_Hide
	}
}

# Gets society greeting # Also, don't forget to check GetMOGreeting
defined_text = {
	name = GetSocietyGreeting
	
	text = {
		trigger = { society_member_of = cenarion_circle }
		localisation_key = GetSocietyGreeting_cenarion_circle
	}
	text = {
		trigger = { society_member_of = sisterhood_of_elune }
		localisation_key = GetSocietyGreeting_sisterhood_of_elune
	}
}
# Gets society goal
defined_text = {
	name = GetSocietyGoal
	
	text = {
		trigger = { society_member_of = cenarion_circle }
		localisation_key = GetSocietyGoal_cenarion_circle
	}
	text = {
		trigger = { society_member_of = sisterhood_of_elune }
		localisation_key = GetSocietyGoal_sisterhood_of_elune
	}
}
# Gets society farewell # Also, don't forget to check GetMOFarewell
defined_text = {
	name = GetSocietyFarewell
	
	text = {
		trigger = { society_member_of = cenarion_circle }
		localisation_key = GetSocietyFarewell_cenarion_circle
	}
	text = {
		trigger = { society_member_of = sisterhood_of_elune }
		localisation_key = GetSocietyFarewell_sisterhood_of_elune
	}
}

# Gets Elune/Light depending on class trait
defined_text = {
	name = GetEluneLight
	
	text = {
		trigger = { religion = kaldorei_religion }
		localisation_key = GOD_ELUNE
	}
	fallback_text = {
		localisation_key = LIGHT
	}
}
# Gets Elune/the Light depending on religion
defined_text = {
	name = GetEluneTheLight
	
	text = {
		trigger = { religion = kaldorei_religion }
		localisation_key = GOD_ELUNE
	}
	fallback_text = {
		localisation_key = THE_LIGHT
	}
}
# Gets Elune/The Light depending on religion
defined_text = {
	name = GetEluneTheLightCap
	
	text = {
		trigger = { religion = kaldorei_religion }
		localisation_key = GOD_ELUNE
	}
	fallback_text = {
		localisation_key = GetEluneTheLightCap_The_Light
	}
}
# Gets the Holy Light/the Moonlight depending on religion
defined_text = {
	name = GetLightType
	
	text = {
		trigger = { religion = kaldorei_religion }
		localisation_key = GetLightType_the_Moonlight
	}
	fallback_text = {
		localisation_key = THE_LIGHT
	}
}
# Gets Her/Its depending on religion
defined_text = {
	name = GetHerItsCap
	
	text = {
		trigger = { religion = kaldorei_religion }
		localisation_key = GetPronoun_Her
	}
	fallback_text = {
		localisation_key = GetPronoun_Its
	}
}

defined_text = {
	name = GetInviteStudentSocietyName

	text = {
		trigger = {
			society_member_of = cenarion_circle
		}
		localisation_key = GetCCInviteStudentSocietyName
	}
	text = {
		trigger = {
			society_member_of = sisterhood_of_elune
		}
		localisation_key = GetSOEInviteStudentSocietyName
	}
}
defined_text = {
	name = GetInviteStudentSocietyNameDesc

	text = {
		trigger = {
			society_member_of = cenarion_circle
		}
		localisation_key = GetCCInviteStudentSocietyNameDesc
	}
	text = {
		trigger = {
			society_member_of = sisterhood_of_elune
		}
		localisation_key = GetSOEInviteStudentSocietyNameDesc
	}
}
defined_text = {
	name = GetTrainClassSocietyName

	text = {
		trigger = {
			society_member_of = cenarion_circle
		}
		localisation_key = GetCCTrainClassSocietyName
	}
	text = {
		trigger = {
			society_member_of = sisterhood_of_elune
		}
		localisation_key = GetSOETrainClassSocietyName
	}
}
defined_text = {
	name = GetTrainClassSocietyNameDesc

	text = {
		trigger = {
			society_member_of = cenarion_circle
		}
		localisation_key = GetCCTrainClassSocietyNameDesc
	}
	text = {
		trigger = {
			society_member_of = sisterhood_of_elune
		}
		localisation_key = GetSOETrainClassSocietyNameDesc
	}
}

# Get horses/racial mounts depending on culture
defined_text = {
	name = GetHorses

	text = {
		trigger = {
			culture_group = night_elf_group
		}
		localisation_key = GetHorses_saber_cats
	}
	text = {
		trigger = {
			culture_group = orc_group
		}
		localisation_key = GetHorses_wolves
	}
	text = {
		trigger = {
			culture_group = tauren_group
		}
		localisation_key = GetHorses_kodo
	}
	text = {
		trigger = {
			culture_group = troll_group
		}
		localisation_key = GetHorses_raptors
	}
	fallback_text = {
		localisation_key = GetHorses_horses
	}
}

# Gets "dinner and plenty of drinks"/"a meeting" depending on can_be_drunkard_trigger
defined_text = {
	name = GetDinnerAndDrinks

	text = {
		trigger = {
			can_be_drunkard_trigger = yes
		}
		localisation_key = GetDinnerAndDrinks_dinner_and_drinks
	}
	fallback_text = {
		localisation_key = GetDinnerAndDrinks_meeting
	}
}

defined_text = {
	name = GetInfantryCommanderType

	text = {
		trigger = { evil_public_religion_trigger = yes }
		localisation_key = GetInfantryCommanderType_Evil
	}
	fallback_text = {
		localisation_key = GetInfantryCommanderType_Normal
	}
}
defined_text = {
	name = GetTaskmasterType

	text = {
		trigger = { evil_public_religion_trigger = yes }
		localisation_key = GetTaskmasterType_Evil
	}
	fallback_text = {
		localisation_key = GetTaskmasterType_Normal
	}
}

# Buldings
defined_text = {
	name = GetMineralCap
	
	use_first_valid = yes

	text = {
		trigger = { religion_group = necromancy_group }
		localisation_key = GetMineralCap_Saronite
	}
	text = {
		trigger = { religion_group = fel_group }
		localisation_key = GetMineralCap_Black
	}
	text = {
		trigger = { religion = old_gods_worship }
		localisation_key = GetMineralCap_Elementium
	}
	fallback_text = {
		localisation_key = GetMineralCap_Stone
	}
}
defined_text = {
	name = GetMineral
	
	use_first_valid = yes

	text = {
		trigger = { religion_group = necromancy_group }
		localisation_key = GetMineral_saronite
	}
	text = {
		trigger = { religion_group = fel_group }
		localisation_key = GetMineral_black
	}
	text = {
		trigger = { religion = old_gods_worship }
		localisation_key = GetMineral_elementium
	}
	fallback_text = {
		localisation_key = GetMineral_stone
	}
}
defined_text = {
	name = GetCastleAdjectiveCap
	
	use_first_valid = yes

	text = {
		trigger = { religion_group = necromancy_group }
		localisation_key = GetAdjectiveCap_Undead
	}
	text = {
		trigger = { religion_group = fel_group }
		localisation_key = GetAdjectiveCap_Demonic
	}
	text = {
		trigger = { religion = old_gods_worship }
		localisation_key = GetAdjectiveCap_Zealot
	}
	fallback_text = {
		localisation_key = GetAdjectiveCap_Castle
	}
}
defined_text = {
	name = GetCastleAdjective
	
	use_first_valid = yes

	text = {
		trigger = { religion_group = necromancy_group }
		localisation_key = GetAdjective_undead
	}
	text = {
		trigger = { religion_group = fel_group }
		localisation_key = GetAdjective_demonic
	}
	text = {
		trigger = { religion = old_gods_worship }
		localisation_key = GetAdjective_zealot
	}
	fallback_text = {
		localisation_key = GetAdjective_castle
	}
}
defined_text = {
	name = GetCityAdjectiveCap
	
	use_first_valid = yes

	text = {
		trigger = { religion_group = necromancy_group }
		localisation_key = GetAdjectiveCap_Undead
	}
	text = {
		trigger = { religion_group = fel_group }
		localisation_key = GetAdjectiveCap_Demonic
	}
	text = {
		trigger = { religion = old_gods_worship }
		localisation_key = GetAdjectiveCap_Zealot
	}
	fallback_text = {
		localisation_key = GetAdjectiveCap_City
	}
}
defined_text = {
	name = GetCityAdjective
	
	use_first_valid = yes

	text = {
		trigger = { religion_group = necromancy_group }
		localisation_key = GetAdjective_undead
	}
	text = {
		trigger = { religion_group = fel_group }
		localisation_key = GetAdjective_demonic
	}
	text = {
		trigger = { religion = old_gods_worship }
		localisation_key = GetAdjective_zealot
	}
	fallback_text = {
		localisation_key = GetAdjective_city
	}
}
defined_text = {
	name = GetStableTypeCap
	
	use_first_valid = yes

	text = {
		trigger = { culture_group = orc_group }
		localisation_key = GetAdjectiveCap_Wolf
	}
	text = {
		trigger = { culture_group = troll_group }
		localisation_key = GetAdjectiveCap_Raptor
	}
	text = {
		trigger = { culture_group = night_elf_group }
		localisation_key = GetAdjectiveCap_Panther
	}
	text = {
		trigger = { religion_group = necromancy_group }
		localisation_key = GetAdjectiveCap_Undead
	}
	text = {
		trigger = { religion_group = fel_group }
		localisation_key = GetAdjectiveCap_Demonic
	}
	text = {
		trigger = { religion = old_gods_worship }
		localisation_key = GetAdjectiveCap_Dark
	}
	fallback_text = {
		localisation_key = GetAdjectiveCap_Horse
	}
}
defined_text = {
	name = GetStableType
	
	use_first_valid = yes

	text = {
		trigger = { culture_group = orc_group }
		localisation_key = GetAdjective_wolf
	}
	text = {
		trigger = { culture_group = troll_group }
		localisation_key = GetAdjective_raptor
	}
	text = {
		trigger = { culture_group = night_elf_group }
		localisation_key = GetAdjective_panther
	}
	text = {
		trigger = { religion_group = necromancy_group }
		localisation_key = GetAdjective_undead
	}
	text = {
		trigger = { religion_group = fel_group }
		localisation_key = GetAdjective_demonic
	}
	text = {
		trigger = { religion = old_gods_worship }
		localisation_key = GetAdjective_dark
	}
	fallback_text = {
		localisation_key = GetAdjective_horse
	}
}
defined_text = {
	name = GetPeasantsType
	
	use_first_valid = yes

	text = {
		trigger = { culture_group = orc_group }
		localisation_key = GetPeasantsType_peons
	}
	text = {
		trigger = { dark_public_religion_trigger = yes }
		localisation_key = GetPeasantsType_acolytes
	}
	fallback_text = {
		localisation_key = GetPeasantsType_peasants
	}
}
defined_text = {
	name = GetMilitiaTypeCap
	
	use_first_valid = yes

	text = {
		trigger = { culture_group = orc_group }
		localisation_key = GetAdjective_Peon
	}
	text = {
		trigger = { dark_public_religion_trigger = yes }
		localisation_key = GetAdjective_Acolyte
	}
	fallback_text = {
		localisation_key = GetAdjective_Militia
	}
}
defined_text = {
	name = GetGuardPurpose
	
	use_first_valid = yes

	text = {
		trigger = { dark_public_religion_trigger = yes }
		localisation_key = GetGuardPurpose_Deviant
	}
	fallback_text = {
		localisation_key = GetGuardPurpose_Law
	}
}
defined_text = {
	name = GetMarketplaceCap
	
	use_first_valid = yes

	text = {
		trigger = { dark_public_religion_trigger = yes }
		localisation_key = GetMarketplaceCap_Dark_Quarter
	}
	fallback_text = {
		localisation_key = GetMarketplaceCap_Trade_District
	}
}
defined_text = {
	name = GetMarketplacePurpose
	
	use_first_valid = yes

	text = {
		trigger = { evil_public_religion_trigger = yes }
		localisation_key = GetMarketplacePurpose_Rituals
	}
	fallback_text = {
		localisation_key = GetMarketplacePurpose_Trade
	}
}
defined_text = {
	name = GetUniversityCap
	
	use_first_valid = yes

	text = {
		trigger = { dark_public_religion_trigger = yes }
		localisation_key = GetUniversityCap_Laboratory
	}
	fallback_text = {
		localisation_key = GetUniversityCap_University
	}
}
defined_text = {
	name = GetUniversityPurpose
	
	use_first_valid = yes

	text = {
		trigger = { dark_public_religion_trigger = yes }
		localisation_key = GetUniversityPurpose_Experiments
	}
	fallback_text = {
		localisation_key = GetUniversityPurpose_Admission
	}
}
defined_text = {
	name = GetSpiritual
	
	use_first_valid = yes

	text = {
		trigger = { secular_public_religion_trigger = no }
		localisation_key = GetSpiritual_spiritual
	}
	text = {
		trigger = { evil_public_religion_trigger = no }
		localisation_key = GetSpiritual_cultural
	}
	fallback_text = {
		localisation_key = GetSpiritual_important
	}
}
defined_text = {
	name = GetCommunity
	
	use_first_valid = yes

	text = {
		trigger = { dark_public_religion_trigger = yes }
		localisation_key = GetCommunity_cult
	}
	fallback_text = {
		localisation_key = GetCommunity_community
	}
}

# Gets commander/schemer/scholar depending on target of quest_control_mind
defined_text = {
	name = GetTargetGenetic

	text = {
		trigger = {
			OR = {
				has_character_flag = turn_into_undead_smart_flag
				has_character_flag = control_mind_smart_flag
			}
		}
		localisation_key = GetTargetGenetic_smart
	}
	text = {
		trigger = {
			OR = {
				has_character_flag = turn_into_undead_strong_flag
				has_character_flag = control_mind_strong_flag
			}
		}
		localisation_key = GetTargetGenetic_strong
	}
	fallback_text = {
		localisation_key = GetTargetGenetic_fair
	}
}