# calc_cooldown_combat_effect = {
	# set_variable = { which = duel_damage value = 0 }
	# set_variable = { which = duel_adl_damage value = 0 }

	# # Temporary variables
	# set_variable = { which = duel_phy_att_tem which = duel_phy_att }
	# set_variable = { which = duel_phy_def_tem which = duel_phy_def }
	# set_variable = { which = duel_mag_att_tem which = duel_mag_att }
	# set_variable = { which = duel_mag_def_tem which = duel_mag_def }

	# ### Artifact abilities ###
	# ### Ashbringer
	# if = {
		# limit = {
			# any_artifact = {
				# artifact_type = ashbringer
				# is_artifact_equipped = yes
			# }
			# OR = {
				# AND = {
					# character = event_target:target_duel_attacker_01
					# event_target:target_duel_defender_01 = { trait = being_undead }
				# }
				# AND = {
					# character = event_target:target_duel_defender_01
					# event_target:target_duel_attacker_01 = { trait = being_undead }
				# }
			# }
		# }

		# set_variable = { which = duel_phy_att_mdf which = duel_phy_att }
		# multiply_variable = { which = duel_phy_att_mdf value = 0.25 }
		# change_variable = { which = duel_phy_att_tem which = duel_phy_att_mdf }

		# set_variable = { which = duel_mag_att_mdf which = duel_mag_att }
		# multiply_variable = { which = duel_mag_att_mdf value = 0.25 }
		# change_variable = { which = duel_mag_att_tem which = duel_mag_att_mdf }
	# }

	# ### Mana Shield
	# if = {
		# limit = {
			# has_character_flag = combat_ability_mana_shield_flag
		# }
		# set_character_flag = 50_chance_of_damage_absorption_flag
		# set_variable = { which = combat_ability_mana_shield_cooldown_timer value = 3 }
	# }
	# # Cooldown countdown
	# if = {
		# limit = { check_variable = { which = combat_ability_mana_shield_cooldown_timer value = 1 } }
		# change_variable = { which = combat_ability_mana_shield_cooldown_timer value = -1 }
	# }

	# ### Beast Agility
	# # Timers
	# if = {
		# limit = {
			# has_character_flag = combat_ability_beast_agility_flag
		# }
		# set_variable = { which = combat_ability_beast_agility_effect_timer value = 2 }
		# set_variable = { which = combat_ability_beast_agility_cooldown_timer value = 4 }
	# }
	# # Effect countdown
	# if = {
		# limit = { check_variable = { which = combat_ability_beast_agility_effect_timer value = 1 } }

		# set_variable = { which = duel_phy_def_mdf which = duel_phy_def }
		# multiply_variable = { which = duel_phy_def_mdf value = 0.5 }
		# change_variable = { which = duel_phy_def_tem which = duel_phy_def_mdf }

		# set_variable = { which = duel_mag_def_mdf which = duel_mag_def }
		# multiply_variable = { which = duel_mag_def_mdf value = 0.5 }
		# change_variable = { which = duel_mag_def_tem which = duel_mag_def_mdf }

		# change_variable = { which = combat_ability_beast_agility_effect_timer value = -1 }
	# }
	# # Cooldown countdown
	# if = {
		# limit = { check_variable = { which = combat_ability_beast_agility_cooldown_timer value = 1 } }
		# change_variable = { which = combat_ability_beast_agility_cooldown_timer value = -1 }
	# }

	# ### Defensive Stance
	# # Timers
	# if = {
		# limit = {
			# has_character_flag = combat_ability_defensive_stance_flag
		# }
		# set_variable = { which = combat_ability_defensive_stance_effect_timer value = 2 }
		# set_variable = { which = combat_ability_defensive_stance_cooldown_timer value = 4 }
	# }
	# # Effect countdown
	# if = {
		# limit = { check_variable = { which = combat_ability_defensive_stance_effect_timer value = 1 } }

		# set_variable = { which = duel_phy_def_mdf which = duel_phy_def }
		# multiply_variable = { which = duel_phy_def_mdf value = 0.5 }
		# change_variable = { which = duel_phy_def_tem which = duel_phy_def_mdf }

		# set_variable = { which = duel_mag_def_mdf which = duel_mag_def }
		# multiply_variable = { which = duel_mag_def_mdf value = 0.5 }
		# change_variable = { which = duel_mag_def_tem which = duel_mag_def_mdf }

		# change_variable = { which = combat_ability_defensive_stance_effect_timer value = -1 }
	# }
	# # Cooldown countdown
	# if = {
		# limit = { check_variable = { which = combat_ability_defensive_stance_cooldown_timer value = 1 } }
		# change_variable = { which = combat_ability_defensive_stance_cooldown_timer value = -1 }
	# }

	# ### Divine Shield
	# if = {
		# limit = {
			# has_character_flag = combat_ability_divine_shield_flag
		# }
		# set_character_flag = 50_chance_of_damage_absorption_flag
		# set_variable = { which = combat_ability_divine_shield_cooldown_timer value = 3 }
	# }
	# # Cooldown countdown
	# if = {
		# limit = { check_variable = { which = combat_ability_divine_shield_cooldown_timer value = 1 } }
		# change_variable = { which = combat_ability_divine_shield_cooldown_timer value = -1 }
	# }

	# ### Power Word: Shield
	# if = {
		# limit = {
			# has_character_flag = combat_ability_power_word_shield_flag
		# }
		# set_character_flag = 50_chance_of_damage_absorption_flag
		# set_variable = { which = combat_ability_power_word_shield_cooldown_timer value = 3 }
	# }
	# # Cooldown countdown
	# if = {
		# limit = { check_variable = { which = combat_ability_power_word_shield_cooldown_timer value = 1 } }
		# change_variable = { which = combat_ability_power_word_shield_cooldown_timer value = -1 }
	# }

	# ### Evasion
	# # Timers
	# if = {
		# limit = {
			# has_character_flag = combat_ability_evasion_flag
		# }
		# set_variable = { which = combat_ability_evasion_effect_timer value = 2 }
		# set_variable = { which = combat_ability_evasion_cooldown_timer value = 4 }
	# }
	# # Effect countdown
	# if = {
		# limit = { check_variable = { which = combat_ability_evasion_effect_timer value = 1 } }

		# set_variable = { which = duel_phy_def_mdf which = duel_phy_def }
		# multiply_variable = { which = duel_phy_def_mdf value = 0.5 }
		# change_variable = { which = duel_phy_def_tem which = duel_phy_def_mdf }

		# set_variable = { which = duel_mag_def_mdf which = duel_mag_def }
		# multiply_variable = { which = duel_mag_def_mdf value = 0.5 }
		# change_variable = { which = duel_mag_def_tem which = duel_mag_def_mdf }

		# change_variable = { which = combat_ability_evasion_effect_timer value = -1 }
	# }
	# # Cooldown countdown
	# if = {
		# limit = { check_variable = { which = combat_ability_evasion_cooldown_timer value = 1 } }
		# change_variable = { which = combat_ability_evasion_cooldown_timer value = -1 }
	# }

	# ### Immolate
	# # Timers
	# if = {
		# limit = {
			# has_character_flag = combat_ability_immolate_flag
		# }
		# set_variable = { which = combat_ability_immolate_effect_timer value = 2 }
		# set_variable = { which = combat_ability_immolate_cooldown_timer value = 5 }
	# }
	# # Effect countdown
	# if = {
		# limit = { check_variable = { which = combat_ability_immolate_effect_timer value = 1 } }

		# set_variable = { which = duel_phy_def_mdf which = duel_phy_def }
		# multiply_variable = { which = duel_phy_def_mdf value = 0.25 }
		# change_variable = { which = duel_phy_def_tem which = duel_phy_def_mdf }

		# set_variable = { which = duel_mag_def_mdf which = duel_mag_def }
		# multiply_variable = { which = duel_mag_def_mdf value = 0.25 }
		# change_variable = { which = duel_mag_def_tem which = duel_mag_def_mdf }

		# if = {
			# limit = { character = event_target:target_duel_attacker_01 }
			# event_target:target_duel_defender_01 = { prev_use_immolate_combat_effect = yes }
		# }
		# if = {
			# limit = { character = event_target:target_duel_defender_01 }
			# event_target:target_duel_attacker_01 = { prev_use_immolate_combat_effect = yes }
		# }

		# change_variable = { which = combat_ability_immolate_effect_timer value = -1 }
	# }
	# # Cooldown countdown
	# if = {
		# limit = { check_variable = { which = combat_ability_immolate_cooldown_timer value = 1 } }
		# change_variable = { which = combat_ability_immolate_cooldown_timer value = -1 }
	# }

	# ### Wind Blessing
	# # Timers
	# if = {
		# limit = {
			# has_character_flag = combat_ability_wind_blessing_flag
		# }
		# set_variable = { which = combat_ability_wind_blessing_effect_timer value = 2 }
		# set_variable = { which = combat_ability_wind_blessing_cooldown_timer value = 4 }
	# }
	# # Effect countdown
	# if = {
		# limit = { check_variable = { which = combat_ability_wind_blessing_effect_timer value = 1 } }

		# set_variable = { which = duel_phy_def_mdf which = duel_phy_def }
		# multiply_variable = { which = duel_phy_def_mdf value = 0.5 }
		# change_variable = { which = duel_phy_def_tem which = duel_phy_def_mdf }

		# set_variable = { which = duel_mag_def_mdf which = duel_mag_def }
		# multiply_variable = { which = duel_mag_def_mdf value = 0.5 }
		# change_variable = { which = duel_mag_def_tem which = duel_mag_def_mdf }

		# change_variable = { which = combat_ability_wind_blessing_effect_timer value = -1 }
	# }
	# # Cooldown countdown
	# if = {
		# limit = { check_variable = { which = combat_ability_wind_blessing_cooldown_timer value = 1 } }
		# change_variable = { which = combat_ability_wind_blessing_cooldown_timer value = -1 }
	# }

	# ### Barkskin
	# # Timers
	# if = {
		# limit = {
			# has_character_flag = combat_ability_barkskin_flag
		# }
		# set_variable = { which = combat_ability_barkskin_effect_timer value = 2 }
		# set_variable = { which = combat_ability_barkskin_cooldown_timer value = 4 }
	# }
	# # Effect countdown
	# if = {
		# limit = { check_variable = { which = combat_ability_barkskin_effect_timer value = 1 } }

		# set_variable = { which = duel_phy_def_mdf which = duel_phy_def }
		# multiply_variable = { which = duel_phy_def_mdf value = 0.5 }
		# change_variable = { which = duel_phy_def_tem which = duel_phy_def_mdf }

		# set_variable = { which = duel_mag_def_mdf which = duel_mag_def }
		# multiply_variable = { which = duel_mag_def_mdf value = 0.5 }
		# change_variable = { which = duel_mag_def_tem which = duel_mag_def_mdf }

		# change_variable = { which = combat_ability_barkskin_effect_timer value = -1 }
	# }
	# # Cooldown countdown
	# if = {
		# limit = { check_variable = { which = combat_ability_barkskin_cooldown_timer value = 1 } }
		# change_variable = { which = combat_ability_barkskin_cooldown_timer value = -1 }
	# }

	# ### Absorption
	# if = {
		# limit = {
			# has_character_flag = combat_ability_absorption_flag
		# }
		# set_character_flag = 50_chance_of_damage_absorption_flag
		# set_variable = { which = combat_ability_absorption_cooldown_timer value = 3 }
	# }
	# # Cooldown countdown
	# if = {
		# limit = { check_variable = { which = combat_ability_absorption_cooldown_timer value = 1 } }
		# change_variable = { which = combat_ability_absorption_cooldown_timer value = -1 }
	# }

	# ### Bone Shield
	# if = {
		# limit = {
			# has_character_flag = combat_ability_bone_shield_flag
		# }
		# set_character_flag = 50_chance_of_damage_absorption_flag
		# set_variable = { which = combat_ability_bone_shield_cooldown_timer value = 3 }
	# }
	# # Cooldown countdown
	# if = {
		# limit = { check_variable = { which = combat_ability_bone_shield_cooldown_timer value = 1 } }
		# change_variable = { which = combat_ability_bone_shield_cooldown_timer value = -1 }
	# }

	# ### Frost Armor
	# if = {
		# limit = {
			# has_character_flag = combat_ability_frost_armor_flag
		# }
		# set_character_flag = 50_chance_of_damage_absorption_flag
		# set_variable = { which = combat_ability_frost_armor_cooldown_timer value = 3 }
	# }
	# # Cooldown countdown
	# if = {
		# limit = { check_variable = { which = combat_ability_frost_armor_cooldown_timer value = 1 } }
		# change_variable = { which = combat_ability_frost_armor_cooldown_timer value = -1 }
	# }

	# ### Shroud of Shadows
	# # Timers
	# if = {
		# limit = {
			# has_character_flag = combat_ability_shroud_of_shadows_flag
		# }
		# set_variable = { which = combat_ability_shroud_of_shadows_effect_timer value = 2 }
		# set_variable = { which = combat_ability_shroud_of_shadows_cooldown_timer value = 4 }
	# }
	# # Effect countdown
	# if = {
		# limit = { check_variable = { which = combat_ability_shroud_of_shadows_effect_timer value = 1 } }

		# set_variable = { which = duel_phy_def_mdf which = duel_phy_def }
		# multiply_variable = { which = duel_phy_def_mdf value = 0.5 }
		# change_variable = { which = duel_phy_def_tem which = duel_phy_def_mdf }

		# set_variable = { which = duel_mag_def_mdf which = duel_mag_def }
		# multiply_variable = { which = duel_mag_def_mdf value = 0.5 }
		# change_variable = { which = duel_mag_def_tem which = duel_mag_def_mdf }

		# change_variable = { which = combat_ability_shroud_of_shadows_effect_timer value = -1 }
	# }
	# # Cooldown countdown
	# if = {
		# limit = { check_variable = { which = combat_ability_shroud_of_shadows_cooldown_timer value = 1 } }
		# change_variable = { which = combat_ability_shroud_of_shadows_cooldown_timer value = -1 }
	# }
# }
# prev_deal_damage_combat_effect = {
	# if = {
		# limit = {
			# PREV = {
				# OR = {
					# dealt_physical_damage_trigger = yes
					# dealt_magic_damage_trigger = yes
				# }
			# }
		# }
		# if = {
			# limit = { PREV = { dealt_physical_damage_trigger = yes } }
			# change_variable = { which = duel_damage which = duel_phy_att_tem which = PREV }
			# subtract_variable = { which = duel_damage which = duel_phy_def_tem }
		# }
		# else = {
			# change_variable = { which = duel_damage which = duel_mag_att_tem which = PREV }
			# subtract_variable = { which = duel_damage which = duel_mag_def_tem }
		# }
		# random_list = {
			# 100 = {
				# modifier = {
					# factor = 0.75
					# has_character_flag = 25_chance_of_damage_absorption_flag
				# }
				# modifier = {
					# factor = 0.5
					# has_character_flag = 50_chance_of_damage_absorption_flag
				# }
				# modifier = {
					# factor = 0.25
					# has_character_flag = 75_chance_of_damage_absorption_flag
				# }

				# # Random damage
				# random_list = {
					# 80 = {}
					# 10 = {
						# change_variable = { which = duel_damage value = 2 }
					# }
					# 10 = {
						# change_variable = { which = duel_damage value = 4 }
						# modifier = {
							# factor = 0
							# NOT = { check_variable = { which = number_of_rounds value = 3 } }
						# }
					# }
					# 10 = {
						# change_variable = { which = duel_damage value = 6 }
						# modifier = {
							# factor = 0
							# NOT = { check_variable = { which = number_of_rounds value = 6 } }
						# }
					# }
					# 10 = {
						# change_variable = { which = duel_damage value = 8 }
						# modifier = {
							# factor = 0
							# NOT = { check_variable = { which = number_of_rounds value = 9 } }
						# }
					# }
				# }

				# if = { limit = { check_variable = { which = duel_damage value = 0.5		} } change_variable = { which = duel_hp value = -1 } }
				# if = { limit = { check_variable = { which = duel_damage value = 1.5		} } change_variable = { which = duel_hp value = -1 } }
				# if = { limit = { check_variable = { which = duel_damage value = 2.5		} } change_variable = { which = duel_hp value = -1 } }
				# if = { limit = { check_variable = { which = duel_damage value = 3.5		} } change_variable = { which = duel_hp value = -1 } }
				# if = { limit = { check_variable = { which = duel_damage value = 4.5 	} } change_variable = { which = duel_hp value = -1 } }
				# if = { limit = { check_variable = { which = duel_damage value = 5.5 	} } change_variable = { which = duel_hp value = -1 } }
				# if = { limit = { check_variable = { which = duel_damage value = 6.5 	} } change_variable = { which = duel_hp value = -1 } }
				# if = { limit = { check_variable = { which = duel_damage value = 7.5 	} } change_variable = { which = duel_hp value = -1 } }
				# if = { limit = { check_variable = { which = duel_damage value = 8.5 	} } change_variable = { which = duel_hp value = -1 } }
				# if = { limit = { check_variable = { which = duel_damage value = 9.5 	} } change_variable = { which = duel_hp value = -1 } }
				# if = { limit = { check_variable = { which = duel_damage value = 10.5	} } change_variable = { which = duel_hp value = -1 } }
				# if = { limit = { check_variable = { which = duel_damage value = 11.5	} } change_variable = { which = duel_hp value = -1 } }
				# if = { limit = { check_variable = { which = duel_damage value = 12.5	} } change_variable = { which = duel_hp value = -1 } }
				# if = { limit = { check_variable = { which = duel_damage value = 13.5	} } change_variable = { which = duel_hp value = -1 } }
				# if = { limit = { check_variable = { which = duel_damage value = 14.5	} } change_variable = { which = duel_hp value = -1 } }
				# if = { limit = { check_variable = { which = duel_damage value = 15.5	} } change_variable = { which = duel_hp value = -1 } }
				# if = { limit = { check_variable = { which = duel_damage value = 16.5	} } change_variable = { which = duel_hp value = -1 } }
				# if = { limit = { check_variable = { which = duel_damage value = 17.5	} } change_variable = { which = duel_hp value = -1 } }
				# if = { limit = { check_variable = { which = duel_damage value = 18.5	} } change_variable = { which = duel_hp value = -1 } }
				# if = { limit = { check_variable = { which = duel_damage value = 19.5	} } change_variable = { which = duel_hp value = -1 } }
				# if = { limit = { check_variable = { which = duel_damage value = 20.5	} } change_variable = { which = duel_hp value = -1 } }
				# if = { limit = { check_variable = { which = duel_damage value = 21.5	} } change_variable = { which = duel_hp value = -1 } }
				# if = { limit = { check_variable = { which = duel_damage value = 22.5	} } change_variable = { which = duel_hp value = -1 } }
				# if = { limit = { check_variable = { which = duel_damage value = 23.5	} } change_variable = { which = duel_hp value = -1 } }
				# if = { limit = { check_variable = { which = duel_damage value = 24.5	} } change_variable = { which = duel_hp value = -1 } }
				# if = { limit = { check_variable = { which = duel_damage value = 25.5	} } change_variable = { which = duel_hp value = -1 } }
				# if = { limit = { check_variable = { which = duel_damage value = 26.5	} } change_variable = { which = duel_hp value = -1 } }
				# if = { limit = { check_variable = { which = duel_damage value = 27.5	} } change_variable = { which = duel_hp value = -1 } }
				# if = { limit = { check_variable = { which = duel_damage value = 28.5	} } change_variable = { which = duel_hp value = -1 } }
				# if = { limit = { check_variable = { which = duel_damage value = 29.5	} } change_variable = { which = duel_hp value = -1 } }
				# if = { limit = { check_variable = { which = duel_damage value = 30.5	} } change_variable = { which = duel_hp value = -1 } }
				# if = { limit = { check_variable = { which = duel_damage value = 31.5	} } change_variable = { which = duel_hp value = -1 } }
				# if = { limit = { check_variable = { which = duel_damage value = 32.5	} } change_variable = { which = duel_hp value = -1 } }
				# if = { limit = { check_variable = { which = duel_damage value = 33.5	} } change_variable = { which = duel_hp value = -1 } }
				# if = { limit = { check_variable = { which = duel_damage value = 34.5	} } change_variable = { which = duel_hp value = -1 } }
				# if = { limit = { check_variable = { which = duel_damage value = 35.5	} } change_variable = { which = duel_hp value = -1 } }
				# if = { limit = { check_variable = { which = duel_damage value = 36.5	} } change_variable = { which = duel_hp value = -1 } }
				# if = { limit = { check_variable = { which = duel_damage value = 37.5	} } change_variable = { which = duel_hp value = -1 } }
				# if = { limit = { check_variable = { which = duel_damage value = 38.5	} } change_variable = { which = duel_hp value = -1 } }
				# if = { limit = { check_variable = { which = duel_damage value = 39.5 	} } change_variable = { which = duel_hp value = -1 } }
			# }
			# 100 = {
				# modifier = {
					# factor = 0
					# NOR = {
						# has_character_flag = 25_chance_of_damage_absorption_flag
						# has_character_flag = 50_chance_of_damage_absorption_flag
						# has_character_flag = 75_chance_of_damage_absorption_flag
					# }
				# }
				# set_variable = { which = duel_damage value = 0 }
			# }
		# }
		# if = {
			# limit = { has_character_flag = 25_chance_of_damage_absorption_flag }
			# clr_character_flag = 25_chance_of_damage_absorption_flag
		# }
		# if = {
			# limit = { has_character_flag = 50_chance_of_damage_absorption_flag }
			# clr_character_flag = 50_chance_of_damage_absorption_flag
		# }
		# if = {
			# limit = { has_character_flag = 75_chance_of_damage_absorption_flag }
			# clr_character_flag = 75_chance_of_damage_absorption_flag
		# }
	# }
# }
# prev_win_combat_effect = {
	# if = {
		# limit = { NOT = { check_variable = { which = duel_hp value = 0.01 } } }
		# random_list = {
			# 60 = {
				# set_character_flag = died_in_combat_flag
				# # Necromancers and death knights prefers imprison the characters and turn them into the undead
				# modifier = {
					# factor = 0.01
					# PREV = {
						# OR = {
							# is_death_knight_class_trigger = yes
							# is_necromancer_class_trigger = yes
						# }
					# }
				# }
				# modifier = {
					# factor = 0.05
					# PREV = { has_character_flag = quest_character_flag }
				# }
				# modifier = {
					# factor = 0
					# NOR = {
						# has_character_modifier = battlefield_fight
						# has_character_flag = quest_character_flag		# Quest: Combat is always lethal
					# }
				# }
				# modifier = {
					# factor = 0.01
					# has_landed_title = e_scourge
				# }
			# }
			# 40 = {
				# modifier = {
					# factor = 0
					# has_character_flag = quest_character_flag			# Quest: Combat is always lethal
				# }
			# }
		# }
		# PREV = { character_event = { id = wcduel.800 } }
		# break = yes
	# }
# }
# prev_use_immolate_combat_effect = {
	# if = {
		# limit = {
			# OR = {
				# dealt_physical_damage_trigger = yes
				# dealt_magic_damage_trigger = yes
			# }
		# }
		# set_variable = { which = duel_adl_damage which = duel_mag_def_tem which = PREV }
		# multiply_variable = { which = duel_adl_damage value = 0.75 }
		# change_variable = { which = duel_damage which = duel_adl_damage }
	# }
# }
# duel_distributor_effect = {
	# if = {
		# limit = {
			# event_target:target_duel_attacker_01 = {
				# NOT = { character = ROOT }
				# NOT = { has_character_flag = finished_dueling_turn_flag }
			# }
		# }
		# if = {
			# limit = { has_global_flag = duel_logs_on_flag }
			# log = "(COMBAT) [Root.GetBestName] has finished the turn. It's turn of [target_duel_attacker_01.GetBestName]."
		# }
		# event_target:target_duel_attacker_01 = { character_event = { id = wcduel.130 } }
		# break = yes
	# }
	# if = {
		# limit = {
			# event_target:target_duel_defender_01 = {
				# NOT = { character = ROOT }
				# NOT = { has_character_flag = finished_dueling_turn_flag }
			# }
		# }
		# if = {
			# limit = { has_global_flag = duel_logs_on_flag }
			# log = "(COMBAT) [Root.GetBestName] has finished the turn. It's turn of [target_duel_defender_01.GetBestName]."
		# }
		# event_target:target_duel_defender_01 = { character_event = { id = wcduel.130 } }
		# break = yes
	# }
	# if = {
		# limit = { has_global_flag = duel_logs_on_flag }
		# log = "(COMBAT) [Root.GetBestName] has finished the turn. Calculation of the outcome of the combat."
		# log = "(COMBAT) [target_duel_attacker_01.GetBestName] has [target_duel_attacker_01.duel_hp.GetValue]/[target_duel_attacker_01.duel_max_hp.GetValue] HP. [target_duel_defender_01.GetBestName] has [target_duel_defender_01.duel_hp.GetValue]/[target_duel_defender_01.duel_max_hp.GetValue] HP."
	# }
	# character_event = { id = wcduel.1500 }
# }
# clr_combat_desc_flags_effect = {
	# clr_character_flag = combat_action_magic_attack_desc_flag
	# clr_character_flag = combat_action_physical_attack_desc_flag

	# # Defending
	# clr_character_flag = combat_action_magic_shield_desc_flag
	# clr_character_flag = combat_action_increased_defence_desc_flag

	# # Other
	# clr_character_flag = combat_action_escape_desc_flag
# }
# clr_combat_actions_flags_effect = {
	# trigger_switch = {
		# on_trigger = has_character_flag
		# combat_ability_arcane_blast_flag = {
			# clr_character_flag = combat_ability_arcane_blast_flag
			# # set_character_flag = combat_ability_arcane_blast_desc_flag
			# set_character_flag = combat_action_magic_attack_desc_flag
		# }
		# combat_ability_cobra_shot_flag = {
			# clr_character_flag = combat_ability_cobra_shot_flag
			# # set_character_flag = combat_ability_cobra_shot_desc_flag
			# set_character_flag = combat_action_physical_attack_desc_flag
		# }
		# combat_ability_furious_slash_flag = {
			# clr_character_flag = combat_ability_furious_slash_flag
			# # set_character_flag = combat_ability_furious_slash_desc_flag
			# set_character_flag = combat_action_physical_attack_desc_flag
		# }
		# combat_ability_crusader_strike_flag = {
			# clr_character_flag = combat_ability_crusader_strike_flag
			# # set_character_flag = combat_ability_crusader_strike_desc_flag
			# set_character_flag = combat_action_physical_attack_desc_flag
		# }
		# combat_ability_smite_flag = {
			# clr_character_flag = combat_ability_smite_flag
			# # set_character_flag = combat_ability_smite_desc_flag
			# set_character_flag = combat_action_magic_attack_desc_flag
		# }
		# combat_ability_mind_blast_flag = {
			# clr_character_flag = combat_ability_mind_blast_flag
			# # set_character_flag = combat_ability_mind_blast_desc_flag
			# set_character_flag = combat_action_magic_attack_desc_flag
		# }
		# combat_ability_sinister_strike_flag = {
			# clr_character_flag = combat_ability_sinister_strike_flag
			# # set_character_flag = combat_ability_sinister_strike_desc_flag
			# set_character_flag = combat_action_physical_attack_desc_flag
		# }
		# combat_ability_shadow_bolt_flag = {
			# clr_character_flag = combat_ability_shadow_bolt_flag
			# # set_character_flag = combat_ability_shadow_bolt_desc_flag
			# set_character_flag = combat_action_magic_attack_desc_flag
		# }
		# combat_ability_lightning_bolt_flag = {
			# clr_character_flag = combat_ability_lightning_bolt_flag
			# # set_character_flag = combat_ability_lightning_bolt_desc_flag
			# set_character_flag = combat_action_magic_attack_desc_flag
		# }
		# combat_ability_solar_wrath_flag = {
			# clr_character_flag = combat_ability_solar_wrath_flag
			# # set_character_flag = combat_ability_solar_wrath_desc_flag
			# set_character_flag = combat_action_magic_attack_desc_flag
		# }
		# combat_ability_shred_flag = {
			# clr_character_flag = combat_ability_shred_flag
			# # set_character_flag = combat_ability_shred_desc_flag
			# set_character_flag = combat_action_physical_attack_desc_flag
		# }
		# combat_ability_mangle_flag = {
			# clr_character_flag = combat_ability_mangle_flag
			# # set_character_flag = combat_ability_mangle_desc_flag
			# set_character_flag = combat_action_physical_attack_desc_flag
		# }
		# combat_ability_wrath_of_the_loa_flag = {
			# clr_character_flag = combat_ability_wrath_of_the_loa_flag
			# # set_character_flag = combat_ability_wrath_of_the_loa_desc_flag
			# set_character_flag = combat_action_magic_attack_desc_flag
		# }
		# combat_ability_death_strike_flag = {
			# clr_character_flag = combat_ability_death_strike_flag
			# # set_character_flag = combat_ability_death_strike_desc_flag
			# set_character_flag = combat_action_magic_attack_desc_flag
		# }
		# combat_ability_death_coil_flag = {
			# clr_character_flag = combat_ability_death_coil_flag
			# # set_character_flag = combat_ability_death_coil_desc_flag
			# set_character_flag = combat_action_magic_attack_desc_flag
		# }
		# combat_ability_flamestrike_flag = {
			# clr_character_flag = combat_ability_flamestrike_flag
			# # set_character_flag = combat_ability_flamestrike_desc_flag
			# set_character_flag = combat_action_magic_attack_desc_flag
		# }

		# # Defending
		# combat_ability_mana_shield_flag = {
			# clr_character_flag = combat_ability_mana_shield_flag
			# set_character_flag = combat_action_magic_shield_desc_flag
		# }
		# combat_ability_beast_agility_flag = {
			# clr_character_flag = combat_ability_beast_agility_flag
			# set_character_flag = combat_action_increased_defence_desc_flag
		# }
		# combat_ability_defensive_stance_flag = {
			# clr_character_flag = combat_ability_defensive_stance_flag
			# set_character_flag = combat_action_increased_defence_desc_flag
		# }
		# combat_ability_divine_shield_flag = {
			# clr_character_flag = combat_ability_divine_shield_flag
			# set_character_flag = combat_action_magic_shield_desc_flag
		# }
		# combat_ability_power_word_shield_flag = {
			# clr_character_flag = combat_ability_power_word_shield_flag
			# set_character_flag = combat_action_magic_shield_desc_flag
		# }
		# combat_ability_evasion_flag = {
			# clr_character_flag = combat_ability_evasion_flag
			# set_character_flag = combat_action_increased_defence_desc_flag
		# }
		# combat_ability_immolate_flag = {
			# clr_character_flag = combat_ability_immolate_flag
			# set_character_flag = combat_action_increased_defence_desc_flag
		# }
		# combat_ability_wind_blessing_flag = {
			# clr_character_flag = combat_ability_wind_blessing_flag
			# set_character_flag = combat_action_increased_defence_desc_flag
		# }
		# combat_ability_barkskin_flag = {
			# clr_character_flag = combat_ability_barkskin_flag
			# set_character_flag = combat_action_increased_defence_desc_flag
		# }
		# combat_ability_absorption_flag = {
			# clr_character_flag = combat_ability_absorption_flag
			# set_character_flag = combat_action_magic_shield_desc_flag
		# }
		# combat_ability_bone_shield_flag = {
			# clr_character_flag = combat_ability_bone_shield_flag
			# set_character_flag = combat_action_magic_shield_desc_flag
		# }
		# combat_ability_frost_armor_flag = {
			# clr_character_flag = combat_ability_frost_armor_flag
			# set_character_flag = combat_action_magic_shield_desc_flag
		# }
		# combat_ability_shroud_of_shadows_flag = {
			# clr_character_flag = combat_ability_shroud_of_shadows_flag
			# set_character_flag = combat_action_increased_defence_desc_flag
		# }
	# }
	# clr_character_flag = combat_action_usual_hit_flag
	# clr_character_flag = combat_action_usual_magic_flag
	# clr_character_flag = combat_action_usual_shot_flag
	# clr_character_flag = combat_action_strong_hit_flag
	# clr_character_flag = combat_action_strong_magic_flag
	# clr_character_flag = combat_action_powerful_shot_flag

	# clr_character_flag = combat_action_block_flag
	# clr_character_flag = combat_action_dodge_flag
	# if = {
		# limit = { has_character_flag = combat_action_escape_flag }
		# clr_character_flag = combat_action_escape_flag
		# set_character_flag = combat_action_escape_desc_flag
	# }
	# clr_character_flag = combat_action_surrender_flag
	# clr_character_flag = combat_action_agree_flag
# }
# clr_all_combat_flags_and_modifiers_effect = {
	# hidden_tooltip = {
		# set_variable = { which = duel_adl_damage value = 0 }
		# set_variable = { which = duel_damage value = 0 }
		# set_variable = { which = duel_hp value = 0 }
		# set_variable = { which = duel_mag_att value = 0 }
		# set_variable = { which = duel_mag_att_mdf value = 0 }
		# set_variable = { which = duel_mag_att_tem value = 0 }
		# set_variable = { which = duel_mag_def value = 0 }
		# set_variable = { which = duel_mag_def_mdf value = 0 }
		# set_variable = { which = duel_mag_def_tem value = 0 }
		# set_variable = { which = duel_max_hp value = 0 }
		# set_variable = { which = duel_phy_att value = 0 }
		# set_variable = { which = duel_phy_att_mdf value = 0 }
		# set_variable = { which = duel_phy_att_tem value = 0 }
		# set_variable = { which = duel_phy_def value = 0 }
		# set_variable = { which = duel_phy_def_mdf value = 0 }
		# set_variable = { which = duel_phy_def_tem value = 0 }
		# set_variable = { which = number_of_rounds value = 0 }
		
		# clr_character_flag = died_in_combat_flag
		# clr_combat_actions_flags_effect = yes
		# clr_combat_desc_flags_effect = yes

		# clr_character_flag = already_used_combat_action_escape_flag
		# clr_character_flag = already_used_combat_action_surrender_flag
		# clr_character_flag = already_used_combat_action_agree_flag

		# set_variable = { which = combat_ability_mana_shield_cooldown_timer value = 0 }		#A

		# set_variable = { which = combat_ability_beast_agility_effect_timer value = 0 }			#I
		# set_variable = { which = combat_ability_beast_agility_cooldown_timer value = 0 }		#I

		# set_variable = { which = combat_ability_defensive_stance_effect_timer value = 0 }		#I
		# set_variable = { which = combat_ability_defensive_stance_cooldown_timer value = 0 }		#I

		# set_variable = { which = combat_ability_divine_shield_cooldown_timer value = 0 }		#A

		# set_variable = { which = combat_ability_power_word_shield_cooldown_timer value = 0 }	#A

		# set_variable = { which = combat_ability_evasion_effect_timer value = 0 }				#I
		# set_variable = { which = combat_ability_evasion_cooldown_timer value = 0 }				#I

		# set_variable = { which = combat_ability_immolate_effect_timer value = 0 }				#I
		# set_variable = { which = combat_ability_immolate_cooldown_timer value = 0 }				#I

		# set_variable = { which = combat_ability_wind_blessing_effect_timer value = 0 }			#I
		# set_variable = { which = combat_ability_wind_blessing_cooldown_timer value = 0 }		#I

		# set_variable = { which = combat_ability_barkskin_effect_timer value = 0 }				#I
		# set_variable = { which = combat_ability_barkskin_cooldown_timer value = 0 }				#I

		# set_variable = { which = combat_ability_absorption_cooldown_timer value = 0 }			#A

		# set_variable = { which = combat_ability_bone_shield_cooldown_timer value = 0 }			#A

		# set_variable = { which = combat_ability_frost_armor_cooldown_timer value = 0 }			#A

		# set_variable = { which = combat_ability_shroud_of_shadows_effect_timer value = 0 }		#I
		# set_variable = { which = combat_ability_shroud_of_shadows_cooldown_timer value = 0 }	#I

		# clr_character_flag = 25_chance_of_damage_absorption_flag
		# clr_character_flag = 50_chance_of_damage_absorption_flag
		# clr_character_flag = 75_chance_of_damage_absorption_flag

		# clr_character_flag = finished_dueling_turn_flag

		# if = { limit = { has_character_modifier = battlefield_fight } remove_character_modifier = battlefield_fight }
		# if = { limit = { has_character_modifier = makgora_fight } remove_character_modifier = makgora_fight }
		# if = { limit = { has_character_modifier = challenge_for_supremacy_fight } remove_character_modifier = challenge_for_supremacy_fight }
		# if = { limit = { has_character_modifier = duel_fight } remove_character_modifier = duel_fight }
		# if = { limit = { has_character_modifier = just_fight } remove_character_modifier = just_fight }

		# clr_character_flag = modern_makgora
		# clr_character_flag = traditional_makgora
		# clr_character_flag = makgora_for_supremacy
	# }
# }
# start_combat_effect = {
	# add_character_modifier = {
		# name = battlefield_fight
		# days = -1
	# }
	# save_event_target_as = target_duel_defender_01
	# character_event = { id = wcduel.101 }
# }