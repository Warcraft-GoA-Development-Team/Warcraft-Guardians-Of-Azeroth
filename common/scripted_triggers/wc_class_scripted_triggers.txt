# Classes
is_training_self_trigger = {
	OR = {
		has_character_modifier = training_self_mage
		has_character_modifier = training_self_hunter
		has_character_modifier = training_self_warrior
		has_character_modifier = training_self_paladin
		has_character_modifier = training_self_priest
		has_character_modifier = training_self_rogue
		has_character_modifier = training_self_warlock
		has_character_modifier = training_self_shaman
		has_character_modifier = training_self_druid
		has_character_modifier = training_self_loa_priest
		has_character_modifier = training_self_death_knight
		has_character_modifier = training_self_necromancer
		has_character_modifier = training_self_shadow_priest
		has_character_modifier = training_self_monk
		
		has_character_flag = magical_secrets_necromancy_flag
		has_character_flag = magical_secrets_fel_flag
		has_character_flag = magical_secrets_void_flag
	}
}
is_training_mentor_trigger = {
	OR = {
		has_character_modifier = training_mentor_mage
		has_character_modifier = training_mentor_hunter
		has_character_modifier = training_mentor_warrior
		has_character_modifier = training_mentor_paladin
		has_character_modifier = training_mentor_priest
		has_character_modifier = training_mentor_rogue
		has_character_modifier = training_mentor_warlock
		has_character_modifier = training_mentor_shaman
		has_character_modifier = training_mentor_druid
		has_character_modifier = training_mentor_loa_priest
		has_character_modifier = training_mentor_death_knight
		has_character_modifier = training_mentor_necromancer
		has_character_modifier = training_mentor_shadow_priest
		has_character_modifier = training_mentor_monk
		
		has_character_flag = ask_to_be_mentor_ongoing_flag
	}
}
dealt_physical_damage_trigger = {
	OR = {
		has_character_flag = combat_ability_cobra_shot_flag
		has_character_flag = combat_ability_furious_slash_flag
		has_character_flag = combat_ability_crusader_strike_flag
		has_character_flag = combat_ability_sinister_strike_flag
		has_character_flag = combat_ability_shred_flag
		has_character_flag = combat_ability_mangle_flag
		has_character_flag = combat_ability_death_strike_flag
	}
}
dealt_magic_damage_trigger = {
	OR = {
		has_character_flag = combat_ability_arcane_blast_flag
		has_character_flag = combat_ability_smite_flag
		has_character_flag = combat_ability_mind_blast_flag
		has_character_flag = combat_ability_shadow_bolt_flag
		has_character_flag = combat_ability_lightning_bolt_flag
		has_character_flag = combat_ability_solar_wrath_flag
		has_character_flag = combat_ability_wrath_of_the_loa_flag
		has_character_flag = combat_ability_death_coil_flag
		has_character_flag = combat_ability_flamestrike_flag
	}
}

# Categories of class
# First of all it's needed for duel system
is_magic_class_trigger = {
	custom_tooltip = {
		text = is_magic_class_trigger_tooltip
		hidden_tooltip = {
			OR = {
				is_mage_class_trigger = yes
				is_priest_class_trigger = yes
				is_warlock_class_trigger = yes
				is_shaman_class_trigger = yes
				is_druid_class_trigger = yes
				is_loa_priest_class_trigger = yes
				is_necromancer_class_trigger = yes
				is_shadow_priest_class_trigger = yes
			}
		}
	}
}
is_physical_class_trigger = {
	OR = {
		is_hunter_class_trigger = yes
		is_warrior_class_trigger = yes
		is_rogue_class_trigger = yes
	}
}
is_combined_class_trigger = {
	OR = {
		is_alternative_class_trigger = yes
		is_paladin_class_trigger = yes
		is_death_knight_class_trigger = yes
		is_monk_class_trigger = yes
		custom_tooltip = {
			text = is_combined_class_trigger_tooltip
			hidden_tooltip = {
				is_magic_class_trigger = yes
				is_physical_class_trigger = yes
			}
		}
	}
}

# Used in conditions of physical abilities
has_1_2_physical_class_or_higher_trigger = {
	custom_tooltip = {
		text = has_1_2_physical_class_or_higher_trigger_tooltip
		hidden_tooltip = {
			OR = {
				is_1_2_physical_class_trigger = yes
				has_3_4_physical_class_or_higher_trigger = yes
			}
		}
	}
}
has_3_4_physical_class_or_higher_trigger = {
	custom_tooltip = {
		text = has_3_4_physical_class_or_higher_trigger_tooltip
		hidden_tooltip = {
			OR = {
				is_3_4_physical_class_trigger = yes
				has_5_6_physical_class_or_higher_trigger = yes
			}
		}
	}
}
has_5_6_physical_class_or_higher_trigger = {
	custom_tooltip = {
		text = has_5_6_physical_class_or_higher_trigger_tooltip
		hidden_tooltip = {
			OR = {
				is_5_6_physical_class_trigger = yes
				has_7_8_physical_class_or_higher_trigger = yes
			}
		}
	}
}
has_7_8_physical_class_or_higher_trigger = {
	custom_tooltip = {
		text = has_7_8_physical_class_or_higher_trigger_tooltip
		hidden_tooltip = {
			OR = {
				is_7_8_physical_class_trigger = yes
				has_9_10_physical_class_trigger = yes
			}
		}
	}
}
has_9_10_physical_class_trigger = {
	is_9_10_physical_class_trigger = yes
}
# Check your physical class level
is_1_2_physical_class_trigger = {
	custom_tooltip = {
		text = has_1_2_physical_class_trigger_tooltip
		OR = {
			trait = class_hunter_1
			trait = class_hunter_2
			trait = class_warrior_1
			trait = class_warrior_2
			trait = class_rogue_1
			trait = class_rogue_2
		}
	}
}
is_3_4_physical_class_trigger = {
	custom_tooltip = {
		text = has_3_4_physical_class_trigger_tooltip
		OR = {
			trait = class_hunter_3
			trait = class_hunter_4
			trait = class_warrior_3
			trait = class_warrior_4
			trait = class_rogue_3
			trait = class_rogue_4
		}
	}
}
is_5_6_physical_class_trigger = {
	custom_tooltip = {
		text = has_5_6_physical_class_trigger_tooltip
		OR = {
			trait = class_hunter_5
			trait = class_hunter_6
			trait = class_warrior_5
			trait = class_warrior_6
			trait = class_rogue_5
			trait = class_rogue_6
		}
	}
}
is_7_8_physical_class_trigger = {
	custom_tooltip = {
		text = has_7_8_physical_class_trigger_tooltip
		OR = {
			trait = class_hunter_7
			trait = class_hunter_8
			trait = class_warrior_7
			trait = class_warrior_8
			trait = class_rogue_7
			trait = class_rogue_8
		}
	}
}
is_9_10_physical_class_trigger = {
	custom_tooltip = {
		text = has_9_10_physical_class_trigger_tooltip
		OR = {
			trait = class_hunter_9
			trait = class_hunter_10
			trait = class_warrior_9
			trait = class_warrior_10
			trait = class_rogue_9
			trait = class_rogue_10
		}
	}
}

# This class can use mana and do magic
# Used in conditions of magical abilities
has_1_2_magic_class_or_higher_trigger = {
	custom_tooltip = {
		text = has_1_2_magic_class_or_higher_trigger_tooltip
		hidden_tooltip = {
			OR = {
				is_1_2_magic_class_trigger = yes
				has_3_4_magic_class_or_higher_trigger = yes
			}
		}
	}
}
has_3_4_magic_class_or_higher_trigger = {
	custom_tooltip = {
		text = has_3_4_magic_class_or_higher_trigger_tooltip
		hidden_tooltip = {
			OR = {
				is_3_4_magic_class_trigger = yes
				has_5_6_magic_class_or_higher_trigger = yes
			}
		}
	}
}
has_5_6_magic_class_or_higher_trigger = {
	custom_tooltip = {
		text = has_5_6_magic_class_or_higher_trigger_tooltip
		hidden_tooltip = {
			OR = {
				is_5_6_magic_class_trigger = yes
				has_7_8_magic_class_or_higher_trigger = yes
			}
		}
	}
}
has_7_8_magic_class_or_higher_trigger = {
	custom_tooltip = {
		text = has_7_8_magic_class_or_higher_trigger_tooltip
		hidden_tooltip = {
			OR = {
				is_7_8_magic_class_trigger = yes
				has_9_10_magic_class_trigger = yes
			}
		}
	}
}
has_9_10_magic_class_trigger = {
	is_9_10_magic_class_trigger = yes
}
# Check your magic class level
is_1_2_magic_class_trigger = {
	custom_tooltip = {
		text = has_1_2_magic_class_trigger_tooltip
		OR = {
			trait = class_mage_1
			trait = class_mage_2
			trait = class_paladin_1
			trait = class_paladin_2
			trait = class_priest_1
			trait = class_priest_2
			trait = class_warlock_1
			trait = class_warlock_2
			trait = class_shaman_1
			trait = class_shaman_2
			trait = class_druid_1
			trait = class_druid_2
			trait = class_loa_priest_1
			trait = class_loa_priest_2
			trait = class_death_knight_1
			trait = class_death_knight_2
			trait = class_necromancer_1
			trait = class_necromancer_2
			trait = class_shadow_priest_1
			trait = class_shadow_priest_2
			trait = class_monk_1
			trait = class_monk_2
		}
	}
}
is_3_4_magic_class_trigger = {
	custom_tooltip = {
		text = has_3_4_magic_class_trigger_tooltip
		OR = {
			trait = class_mage_3
			trait = class_mage_4
			trait = class_paladin_3
			trait = class_paladin_4
			trait = class_priest_3
			trait = class_priest_4
			trait = class_warlock_3
			trait = class_warlock_4
			trait = class_shaman_3
			trait = class_shaman_4
			trait = class_druid_3
			trait = class_druid_4
			trait = class_loa_priest_3
			trait = class_loa_priest_4
			trait = class_death_knight_3
			trait = class_death_knight_4
			trait = class_necromancer_3
			trait = class_necromancer_4
			trait = class_shadow_priest_3
			trait = class_shadow_priest_4
			trait = class_monk_3
			trait = class_monk_4
		}
	}
}
is_5_6_magic_class_trigger = {
	custom_tooltip = {
		text = has_5_6_magic_class_trigger_tooltip
		OR = {
			trait = class_mage_5
			trait = class_mage_6
			trait = class_paladin_5
			trait = class_paladin_6
			trait = class_priest_5
			trait = class_priest_6
			trait = class_warlock_5
			trait = class_warlock_6
			trait = class_shaman_5
			trait = class_shaman_6
			trait = class_druid_5
			trait = class_druid_6
			trait = class_loa_priest_5
			trait = class_loa_priest_6
			trait = class_death_knight_5
			trait = class_death_knight_6
			trait = class_necromancer_5
			trait = class_necromancer_6
			trait = class_shadow_priest_5
			trait = class_shadow_priest_6
			trait = class_monk_5
			trait = class_monk_6
		}
	}
}
is_7_8_magic_class_trigger = {
	custom_tooltip = {
		text = has_7_8_magic_class_trigger_tooltip
		OR = {
			trait = class_mage_7
			trait = class_mage_8
			trait = class_paladin_7
			trait = class_paladin_8
			trait = class_priest_7
			trait = class_priest_8
			trait = class_warlock_7
			trait = class_warlock_8
			trait = class_shaman_7
			trait = class_shaman_8
			trait = class_druid_7
			trait = class_druid_8
			trait = class_loa_priest_7
			trait = class_loa_priest_8
			trait = class_death_knight_7
			trait = class_death_knight_8
			trait = class_necromancer_7
			trait = class_necromancer_8
			trait = class_shadow_priest_7
			trait = class_shadow_priest_8
			trait = class_monk_7
			trait = class_monk_8
		}
	}
}
is_9_10_magic_class_trigger = {
	custom_tooltip = {
		text = has_9_10_magic_class_trigger_tooltip
		OR = {
			trait = class_mage_9
			trait = class_mage_10
			trait = class_paladin_9
			trait = class_paladin_10
			trait = class_priest_9
			trait = class_priest_10
			trait = class_warlock_9
			trait = class_warlock_10
			trait = class_shaman_9
			trait = class_shaman_10
			trait = class_druid_9
			trait = class_druid_10
			trait = class_loa_priest_9
			trait = class_loa_priest_10
			trait = class_death_knight_9
			trait = class_death_knight_10
			trait = class_necromancer_9
			trait = class_necromancer_10
			trait = class_shadow_priest_9
			trait = class_shadow_priest_10
			trait = class_monk_9
			trait = class_monk_10
		}
	}
}

# Mana triggers
has_5_mana_trigger = {
	custom_tooltip = {
		text = has_5_mana_trigger_tooltip
		hidden_tooltip = { has_character_modifier = mana_5 }
	}
}
has_4_mana_trigger = {
	custom_tooltip = {
		text = has_4_mana_trigger_tooltip
		hidden_tooltip = {
			OR = {
				has_character_modifier = mana_4
				has_character_modifier = mana_5
			}
		}
	}
}
has_3_mana_trigger = {
	custom_tooltip = {
		text = has_3_mana_trigger_tooltip
		hidden_tooltip = {
			OR = {
				has_character_modifier = mana_3
				has_character_modifier = mana_4
				has_character_modifier = mana_5
			}
		}
	}
}
has_2_mana_trigger = {
	custom_tooltip = {
		text = has_2_mana_trigger_tooltip
		hidden_tooltip = {
			OR = {
				has_character_modifier = mana_2
				has_character_modifier = mana_3
				has_character_modifier = mana_4
				has_character_modifier = mana_5
			}
		}
	}
}
has_1_mana_trigger = {
	custom_tooltip = {
		text = has_1_mana_trigger_tooltip
		hidden_tooltip = {
			OR = {
				has_character_modifier = mana_1
				has_character_modifier = mana_2
				has_character_modifier = mana_3
				has_character_modifier = mana_4
				has_character_modifier = mana_5
			}
		}
	}
}

has_max_level_trigger = {
	OR = {
		trait = class_mage_10
		trait = class_hunter_10
		trait = class_warrior_10
		trait = class_paladin_10
		trait = class_priest_10
		trait = class_rogue_10
		trait = class_warlock_10
		trait = class_shaman_10
		trait = class_druid_10
		trait = class_loa_priest_10
		trait = class_death_knight_10
		trait = class_necromancer_10
		trait = class_shadow_priest_10
		trait = class_monk_10
		
		check_variable = { which = wc_experience value = 10 }
	}
}

# Class triggers
is_mage_class_trigger = {
	custom_tooltip = {
		text = is_mage_class_trigger_tooltip
		hidden_tooltip = {
			OR = {
				trait = class_mage_1
				trait = class_mage_2
				trait = class_mage_3
				trait = class_mage_4
				trait = class_mage_5
				trait = class_mage_6
				trait = class_mage_7
				trait = class_mage_8
				trait = class_mage_9
				trait = class_mage_10
			}
		}
	}
}
is_hunter_class_trigger = {
	custom_tooltip = {
		text = is_hunter_class_trigger_tooltip
		hidden_tooltip = {
			OR = {
				trait = class_hunter_1
				trait = class_hunter_2
				trait = class_hunter_3
				trait = class_hunter_4
				trait = class_hunter_5
				trait = class_hunter_6
				trait = class_hunter_7
				trait = class_hunter_8
				trait = class_hunter_9
				trait = class_hunter_10
			}
		}
	}
}
is_warrior_class_trigger = {
	custom_tooltip = {
		text = is_warrior_class_trigger_tooltip
		hidden_tooltip = {
			OR = {
				trait = class_warrior_1
				trait = class_warrior_2
				trait = class_warrior_3
				trait = class_warrior_4
				trait = class_warrior_5
				trait = class_warrior_6
				trait = class_warrior_7
				trait = class_warrior_8
				trait = class_warrior_9
				trait = class_warrior_10
			}
		}
	}
}
is_paladin_class_trigger = {
	custom_tooltip = {
		text = is_paladin_class_trigger_tooltip
		hidden_tooltip = {
			OR = {
				trait = class_paladin_1
				trait = class_paladin_2
				trait = class_paladin_3
				trait = class_paladin_4
				trait = class_paladin_5
				trait = class_paladin_6
				trait = class_paladin_7
				trait = class_paladin_8
				trait = class_paladin_9
				trait = class_paladin_10
			}
		}
	}
}
is_priest_class_trigger = {
	custom_tooltip = {
		text = is_priest_class_trigger_tooltip
		hidden_tooltip = {
			OR = {
				trait = class_priest_1
				trait = class_priest_2
				trait = class_priest_3
				trait = class_priest_4
				trait = class_priest_5
				trait = class_priest_6
				trait = class_priest_7
				trait = class_priest_8
				trait = class_priest_9
				trait = class_priest_10
			}
		}
	}
}
is_rogue_class_trigger = {
	custom_tooltip = {
		text = is_rogue_class_trigger_tooltip
		hidden_tooltip = {
			OR = {
				trait = class_rogue_1
				trait = class_rogue_2
				trait = class_rogue_3
				trait = class_rogue_4
				trait = class_rogue_5
				trait = class_rogue_6
				trait = class_rogue_7
				trait = class_rogue_8
				trait = class_rogue_9
				trait = class_rogue_10
			}
		}
	}
}
is_warlock_class_trigger = {
	custom_tooltip = {
		text = is_warlock_class_trigger_tooltip
		hidden_tooltip = {
			OR = {
				trait = class_warlock_1
				trait = class_warlock_2
				trait = class_warlock_3
				trait = class_warlock_4
				trait = class_warlock_5
				trait = class_warlock_6
				trait = class_warlock_7
				trait = class_warlock_8
				trait = class_warlock_9
				trait = class_warlock_10
			}
		}
	}
}
is_shaman_class_trigger = {
	custom_tooltip = {
		text = is_shaman_class_trigger_tooltip
		hidden_tooltip = {
			OR = {
				trait = class_shaman_1
				trait = class_shaman_2
				trait = class_shaman_3
				trait = class_shaman_4
				trait = class_shaman_5
				trait = class_shaman_6
				trait = class_shaman_7
				trait = class_shaman_8
				trait = class_shaman_9
				trait = class_shaman_10
			}
		}
	}
}
is_druid_class_trigger = {
	custom_tooltip = {
		text = is_druid_class_trigger_tooltip
		hidden_tooltip = {
			OR = {
				trait = class_druid_1
				trait = class_druid_2
				trait = class_druid_3
				trait = class_druid_4
				trait = class_druid_5
				trait = class_druid_6
				trait = class_druid_7
				trait = class_druid_8
				trait = class_druid_9
				trait = class_druid_10
			}
		}
	}
}
is_loa_priest_class_trigger = {
	custom_tooltip = {
		text = is_loa_priest_class_trigger_tooltip
		hidden_tooltip = {
			OR = {
				trait = class_loa_priest_1
				trait = class_loa_priest_2
				trait = class_loa_priest_3
				trait = class_loa_priest_4
				trait = class_loa_priest_5
				trait = class_loa_priest_6
				trait = class_loa_priest_7
				trait = class_loa_priest_8
				trait = class_loa_priest_9
				trait = class_loa_priest_10
			}
		}
	}
}
is_death_knight_class_trigger = {
	custom_tooltip = {
		text = is_death_knight_class_trigger_tooltip
		hidden_tooltip = {
			OR = {
				trait = class_death_knight_1
				trait = class_death_knight_2
				trait = class_death_knight_3
				trait = class_death_knight_4
				trait = class_death_knight_5
				trait = class_death_knight_6
				trait = class_death_knight_7
				trait = class_death_knight_8
				trait = class_death_knight_9
				trait = class_death_knight_10
			}
		}
	}
}
is_necromancer_class_trigger = {
	custom_tooltip = {
		text = is_necromancer_class_trigger_tooltip
		hidden_tooltip = {
			OR = {
				trait = class_necromancer_1
				trait = class_necromancer_2
				trait = class_necromancer_3
				trait = class_necromancer_4
				trait = class_necromancer_5
				trait = class_necromancer_6
				trait = class_necromancer_7
				trait = class_necromancer_8
				trait = class_necromancer_9
				trait = class_necromancer_10
			}
		}
	}
}
is_shadow_priest_class_trigger = {
	custom_tooltip = {
		text = is_shadow_priest_class_trigger_tooltip
		hidden_tooltip = {
			OR = {
				trait = class_shadow_priest_1
				trait = class_shadow_priest_2
				trait = class_shadow_priest_3
				trait = class_shadow_priest_4
				trait = class_shadow_priest_5
				trait = class_shadow_priest_6
				trait = class_shadow_priest_7
				trait = class_shadow_priest_8
				trait = class_shadow_priest_9
				trait = class_shadow_priest_10
			}
		}
	}
}
is_monk_class_trigger = {
	custom_tooltip = {
		text = is_monk_class_trigger_tooltip
		hidden_tooltip = {
			OR = {
				trait = class_monk_1
				trait = class_monk_2
				trait = class_monk_3
				trait = class_monk_4
				trait = class_monk_5
				trait = class_monk_6
				trait = class_monk_7
				trait = class_monk_8
				trait = class_monk_9
				trait = class_monk_10
			}
		}
	}
}
is_alternative_class_trigger = {
	custom_tooltip = {
		text = is_alternative_class_trigger_tooltip
		hidden_tooltip = {
			OR = {
				# Red dragons
				# Blue dragons
				# Green dragons
				# Black dragons
				# Bronze dragons
				# Infinite dragons
				is_wyrm_trigger = yes
				is_dragon_trigger = yes
				is_drake_trigger = yes
				is_whelp_trigger = yes

				# trait = creature_abomination
				trait = creature_observer
				trait = creature_avatar_of_sargeras
				is_elemental_trigger = yes
				is_plant_race_trigger = yes
			}
		}
	}
}

# You're <class>, but too weak to do something
# Pretty old triggers, used in some conditions
is_weak_mage_class_trigger = {
	OR = {
		trait = class_mage_1
		trait = class_mage_2
		trait = class_mage_3
		trait = class_mage_4
	}
}
is_weak_hunter_class_trigger = {
	OR = {
		trait = class_hunter_1
		trait = class_hunter_2
		trait = class_hunter_3
		trait = class_hunter_4
	}
}
is_weak_warrior_class_trigger = {
	OR = {
		trait = class_warrior_1
		trait = class_warrior_2
		trait = class_warrior_3
		trait = class_warrior_4
	}
}
is_weak_paladin_class_trigger = {
	OR = {
		trait = class_paladin_1
		trait = class_paladin_2
		trait = class_paladin_3
		trait = class_paladin_4
	}
}
is_weak_priest_class_trigger = {
	OR = {
		trait = class_priest_1
		trait = class_priest_2
		trait = class_priest_3
		trait = class_priest_4
	}
}
is_weak_rogue_class_trigger = {
	OR = {
		trait = class_rogue_1
		trait = class_rogue_2
		trait = class_rogue_3
		trait = class_rogue_4
	}
}
is_weak_warlock_class_trigger = {
	OR = {
		trait = class_warlock_1
		trait = class_warlock_2
		trait = class_warlock_3
		trait = class_warlock_4
	}
}
is_weak_shaman_class_trigger = {
	OR = {
		trait = class_shaman_1
		trait = class_shaman_2
		trait = class_shaman_3
		trait = class_shaman_4
	}
}
is_weak_druid_class_trigger = {
	OR = {
		trait = class_druid_1
		trait = class_druid_2
		trait = class_druid_3
		trait = class_druid_4
	}
}
is_weak_loa_priest_class_trigger = {
	OR = {
		trait = class_loa_priest_1
		trait = class_loa_priest_2
		trait = class_loa_priest_3
		trait = class_loa_priest_4
	}
}
is_weak_death_knight_class_trigger = {
	OR = {
		trait = class_death_knight_1
		trait = class_death_knight_2
		trait = class_death_knight_3
		trait = class_death_knight_4
	}
}
is_weak_necromancer_class_trigger = {
	OR = {
		trait = class_necromancer_1
		trait = class_necromancer_2
		trait = class_necromancer_3
		trait = class_necromancer_4
	}
}
is_weak_shadow_priest_class_trigger = {
	OR = {
		trait = class_shadow_priest_1
		trait = class_shadow_priest_2
		trait = class_shadow_priest_3
		trait = class_shadow_priest_4
	}
}
is_weak_monk_class_trigger = {
	OR = {
		trait = class_monk_1
		trait = class_monk_2
		trait = class_monk_3
		trait = class_monk_4
	}
}

has_class_trait_wo_training_trigger = {
	custom_tooltip = {
		text = has_class_trait_trigger_tooltip
		hidden_tooltip = {
			OR = {
				is_mage_class_trigger = yes
				is_hunter_class_trigger = yes
				is_warrior_class_trigger = yes
				is_paladin_class_trigger = yes
				is_priest_class_trigger = yes
				is_rogue_class_trigger = yes
				is_warlock_class_trigger = yes
				is_shaman_class_trigger = yes
				is_druid_class_trigger = yes
				is_loa_priest_class_trigger = yes
				is_death_knight_class_trigger = yes
				is_necromancer_class_trigger = yes
				is_shadow_priest_class_trigger = yes
				is_monk_class_trigger = yes

				is_alternative_class_trigger = yes
			}
		}
	}
}
has_class_trait_trigger = {
	custom_tooltip = {
		text = has_class_trait_trigger_tooltip
		hidden_tooltip = {
			OR = {
				has_class_trait_wo_training_trigger = yes

				# Added it here, because logically character already has class - Zuzu
				is_training_self_trigger = yes
				is_training_mentor_trigger = yes
			}
		}
	}
}

### Triggers to check character potential to be <class>
# These triggers are used in different places in different combinations that's why there's so a lot of them
# Mage
potential_mage_wo_training_trigger = {
	age = 11
	
	OR = {
		NOT = { has_class_trait_wo_training_trigger = yes }
		trigger_if = {
			limit = { ai = no }
			has_max_level_trigger = no
			is_magic_class_trigger = no
			is_physical_class_trigger = yes
			is_combined_class_trigger = no
		}
	}
}
potential_mage_trigger = {
	potential_mage_wo_training_trigger = yes

	is_training_self_trigger = no
	is_training_mentor_trigger = no
}
allow_mage_trigger = {
	OR = {
		trigger_if = {
			limit = { is_adult = no }
			is_adult = no
		}
		trigger_if = {
			limit = { any_owned_bloodline = { has_bloodline_flag = bloodline_mage_training } }
			learning = 10
		}
		trigger_else = {
			learning = 15
		}
		has_magical_potential_trigger = yes
	}
}
united_mage_trigger = {
	potential_mage_trigger = yes
	allow_mage_trigger = yes
}
prev_arcane_magic_is_visible_to_this_trigger = {
	OR = {
		character = PREV
		arcane_true_religion_trigger = yes
		is_mage_class_trigger = yes
		PREV = {
			OR = {
				dark_public_religion_trigger = yes
				arcane_public_religion_trigger = yes
				liege = {
					primary_title = {
						NOT = { has_law = status_of_magic_0 }
					}
				}
			}
		}
	}
}

# Hunter
potential_hunter_wo_training_trigger = {
	age = 11
	
	OR = {
		NOT = { has_class_trait_wo_training_trigger = yes }
		trigger_if = {
			limit = { ai = no }
			has_max_level_trigger = no
			is_magic_class_trigger = yes
			is_physical_class_trigger = no
			is_combined_class_trigger = no
		}
	}
}
potential_hunter_trigger = {
	potential_hunter_wo_training_trigger = yes

	is_training_self_trigger = no
	is_training_mentor_trigger = no
}
allow_hunter_trigger = {
	OR = {
		trigger_if = {
			limit = { is_adult = no }
			is_adult = no
		}
		trigger_if = {
			limit = { any_owned_bloodline = { has_bloodline_flag = bloodline_hunter_training } }
			martial = 8
		}
		trigger_else = {
			martial = 12
		}
		trigger_if = {
			limit = { character = event_target:invited_character }
			character = event_target:invited_character # ...is character invited employ_soldier
		}
	}
}
united_hunter_trigger = {
	potential_hunter_trigger = yes
	allow_hunter_trigger = yes
}

# Warrior
potential_warrior_wo_training_trigger = {
	age = 11
	
	OR = {
		NOT = { has_class_trait_wo_training_trigger = yes }
		trigger_if = {
			limit = { ai = no }
			has_max_level_trigger = no
			is_magic_class_trigger = yes
			is_priest_class_trigger = no
			is_physical_class_trigger = no
			is_combined_class_trigger = no
		}
	}
}
potential_warrior_trigger = {
	potential_warrior_wo_training_trigger = yes

	is_training_self_trigger = no
	is_training_mentor_trigger = no
}
allow_warrior_trigger = {
	OR = {
		trigger_if = {
			limit = { is_adult = no }
			is_adult = no
		}
		trigger_if = {
			limit = { any_owned_bloodline = { has_bloodline_flag = bloodline_warrior_training } }
			martial = 8
		}
		trigger_else = {
			martial = 12
		}
		trigger_if = {
			limit = { character = event_target:invited_character }
			character = event_target:invited_character # ...is character invited employ_soldier
		}
	}
}
united_warrior_trigger = {
	potential_warrior_trigger = yes
	allow_warrior_trigger = yes
}

# Paladin
potential_paladin_wo_training_trigger = {
	age = 11
	
	can_be_paladin_trigger = yes
	
	OR = {
		NOT = { has_class_trait_wo_training_trigger = yes }
		AND = {
			is_paladin_class_trigger = no
			OR = {
				is_warrior_class_trigger = yes
				is_priest_class_trigger = yes
			}
			is_combined_class_trigger = no
		}
	}
}
potential_paladin_trigger = {
	potential_paladin_wo_training_trigger = yes

	is_training_self_trigger = no
	is_training_mentor_trigger = no
}
allow_paladin_trigger = {
	OR = {
		trigger_if = {
			limit = { is_adult = no }
			is_adult = no
		}
		AND = {
			trigger_if = {
				limit = { any_owned_bloodline = { has_bloodline_flag = bloodline_paladin_training } }
				martial = 8
			}
			trigger_else = {
				martial = 12
			}
			OR = {
				learning = 6
				has_magical_potential_trigger = yes
			}
		}
	}
}
# If this trigger isn't true, a character can not be a paladin
can_be_paladin_trigger = {
    OR = {
        true_religion_group = light_group
        true_religion = cult_of_sunwell
    }
}
united_paladin_trigger = {
	potential_paladin_trigger = yes
	allow_paladin_trigger = yes
}
# Use prev_light_magic_is_visible_to_this_trigger

# Priest
potential_priest_wo_training_trigger = {
	age = 11
	trigger_if = {
		limit = { religion = kaldorei_religion }
		is_female = yes
	}
	
	can_be_priest_trigger = yes
	
	OR = {
		NOT = { has_class_trait_wo_training_trigger = yes }
		trigger_if = {
			limit = { ai = no }
			has_max_level_trigger = no
			is_magic_class_trigger = no
			is_physical_class_trigger = yes
			is_warrior_class_trigger = no
			is_combined_class_trigger = no
		}
	}
}
potential_priest_trigger = {
	potential_priest_wo_training_trigger = yes

	is_training_self_trigger = no
	is_training_mentor_trigger = no
}
allow_priest_trigger = {
	OR = {
		trigger_if = {
			limit = { is_adult = no }
			is_adult = no
		}
		trigger_if = {
			limit = { any_owned_bloodline = { has_bloodline_flag = bloodline_priest_training } }
			learning = 10
		}
		trigger_else = {
			learning = 15
		}
		is_member_of_priest_society_trigger = yes
		has_magical_potential_trigger = yes
		trigger_if = {
			limit = {
				OR = {
					light_public_religion_trigger = yes
					religion = cult_of_sunwell
				}
			}
			OR = {
				trigger_if = {
					limit = { character = event_target:invited_character }
					character = event_target:invited_character # ...is character invited employ_priest or employ_priestess
				}
				is_priest = yes
				controls_religion = yes
			}
		}
	}
}
# If this trigger isn't true, a character can not be a priest
can_be_priest_trigger = {
	OR = {
		# light_public_religion_trigger = yes
		light_true_religion_trigger = yes
		true_religion = cult_of_sunwell
	}
}
united_priest_trigger = {
	potential_priest_trigger = yes
	allow_priest_trigger = yes
}
is_member_of_priest_society_trigger = {
	society_member_of = sisterhood_of_elune
}
prev_light_magic_is_visible_to_this_trigger = {
	OR = {
		character = PREV
		light_true_religion_trigger = yes
		true_religion = cult_of_sunwell
		is_priest_class_trigger = yes
		is_paladin_class_trigger = yes
		PREV = {
			OR = {
				light_public_religion_trigger = yes
				religion = cult_of_sunwell
			}
		}
	}
}

# Rogue
potential_rogue_wo_training_trigger = {
	age = 11
	
	OR = {
		is_small_humanoid_trigger = yes
		is_medium_humanoid_trigger = yes
	}
	
	OR = {
		NOT = { has_class_trait_wo_training_trigger = yes }
		trigger_if = {
			limit = { ai = no }
			has_max_level_trigger = no
			is_magic_class_trigger = yes
			is_physical_class_trigger = no
			is_combined_class_trigger = no
		}
	}
}
potential_rogue_trigger = {
	potential_rogue_wo_training_trigger = yes

	is_training_self_trigger = no
	is_training_mentor_trigger = no
}
allow_rogue_trigger = {
	OR = {
		trigger_if = {
			limit = { is_adult = no }
			is_adult = no
		}
		AND = {
			intrigue = 12
			martial = 8
		}
	}
}
united_rogue_trigger = {
	potential_rogue_trigger = yes
	allow_rogue_trigger = yes
}

# Warlock
potential_warlock_wo_training_trigger = {
	age = 11
	
	# The AI cannot become a warlock if it hasn't impious trait or fel_group religion
	trigger_if = {
		limit = { ai = yes }
		OR = {
			true_religion_group = fel_group
			has_impious_trait_trigger = yes
		}
	}

	OR = {
		NOT = { has_class_trait_wo_training_trigger = yes }
		trigger_if = {
			limit = {
				OR = {
					is_mage_class_trigger = yes
					is_priest_class_trigger = yes
					is_shaman_class_trigger = yes
					is_druid_class_trigger = yes
					is_loa_priest_class_trigger = yes
					AND = {
						OR = {
							# is_warlock_class_trigger = yes
							is_necromancer_class_trigger = yes
							is_shadow_priest_class_trigger = yes
						}
						true_religion_group = fel_group
					}
				}
				is_warlock_class_trigger = no
			}
			OR = {
				true_religion_group = fel_group
				has_impious_trait_trigger = yes
			}
		}
		trigger_if = {
			limit = { ai = no }
			has_max_level_trigger = no
			is_magic_class_trigger = no
			is_physical_class_trigger = yes
			is_combined_class_trigger = no
		}
	}
}
potential_warlock_trigger = {
	potential_warlock_wo_training_trigger = yes

	is_training_self_trigger = no
	is_training_mentor_trigger = no
}
allow_warlock_trigger = {
	OR = {
		trigger_if = {
			limit = { is_adult = no }
			is_adult = no
		}
		AND = {
			learning = 12
			intrigue = 6
		}
		has_magical_potential_trigger = yes
		trigger_if = {
			limit = { religion_group = fel_group }
			OR = {
				trigger_if = {
					limit = { character = event_target:invited_character }
					character = event_target:invited_character # ...is character invited employ_priest or employ_priestess
				}
				is_priest = yes
				controls_religion = yes
			}
		}
	}
}
united_warlock_trigger = {
	potential_warlock_trigger = yes
	allow_warlock_trigger = yes
}
prev_fel_magic_is_visible_to_this_trigger = {
	OR = {
		character = PREV
		true_religion_group = fel_group
		# society_member_of = class_society_warlock
		society_member_of = shadow_council
		is_warlock_class_trigger = yes
		PREV = {
			OR = {
				dark_public_religion_trigger = yes
				liege = {
					primary_title = {
						NOR = {
							has_law = status_of_magic_0
							has_law = status_of_magic_1
						}
					}
				}
			}
		}
	}
}

# Shaman
potential_shaman_wo_training_trigger = {
	age = 11
	
	OR = {
		shamanic_true_religion_trigger = yes
		true_religion_group = loa_group
	}
	
	OR = {
		NOT = { has_class_trait_wo_training_trigger = yes }
		trigger_if = {
			limit = { ai = no }
			has_max_level_trigger = no
			is_magic_class_trigger = no
			is_physical_class_trigger = yes
			is_combined_class_trigger = no
		}
	}
}
potential_shaman_trigger = {
	potential_shaman_wo_training_trigger = yes

	is_training_self_trigger = no
	is_training_mentor_trigger = no
}
allow_shaman_trigger = {
	OR = {
		trigger_if = {
			limit = { is_adult = no }
			is_adult = no
		}
		trigger_if = {
			limit = { any_owned_bloodline = { has_bloodline_flag = bloodline_shaman_training } }
			learning = 8
		}
		trigger_else = {
			learning = 12
		}
		has_magical_potential_trigger = yes
		trigger_if = {
			limit = { shamanic_true_religion_trigger = yes }
			OR = {
				trigger_if = {
					limit = { character = event_target:invited_character }
					character = event_target:invited_character # ...is character invited employ_priest or employ_priestess
				}
				is_priest = yes
				controls_religion = yes
			}
		}
	}
}
united_shaman_trigger = {
	potential_shaman_trigger = yes
	allow_shaman_trigger = yes
}

# Druid
potential_druid_wo_training_trigger = {
	age = 11
	trigger_if = {
		limit = {
			is_cenarius_offspring_trigger = no	# Allowed to be druids because they're children of Wild God
			religion = kaldorei_religion
		}
		is_female = no
	}
	
	OR = {
		true_religion_group = druidism_group
		true_religion_group = loa_group
		true_religion = earth_mother_worship
	}
	
	OR = {
		NOT = { has_class_trait_wo_training_trigger = yes }
		trigger_if = {
			limit = { ai = no }
			has_max_level_trigger = no
			is_magic_class_trigger = no
			is_physical_class_trigger = yes
			is_combined_class_trigger = no
		}
	}
}
potential_druid_trigger = {
	potential_druid_wo_training_trigger = yes

	is_training_self_trigger = no
	is_training_mentor_trigger = no
}
allow_druid_trigger = {
	OR = {
		trigger_if = {
			limit = { is_adult = no }
			is_adult = no
		}
		trigger_if = {
			limit = { any_owned_bloodline = { has_bloodline_flag = bloodline_druid_training } }
			learning = 8
		}
		trigger_else = {
			learning = 12
		}
		is_member_of_druid_society_trigger = yes
		has_magical_potential_trigger = yes
		trigger_if = {
			limit = { religion_group = druidism_group }
			OR = {
				trigger_if = {
					limit = { character = event_target:invited_character }
					character = event_target:invited_character # ...is character invited employ_priest or employ_priestess
				}
				is_priest = yes
				controls_religion = yes
			}
		}
	}
}
united_druid_trigger = {
	potential_druid_trigger = yes
	allow_druid_trigger = yes
}
is_member_of_druid_society_trigger = {
	society_member_of = cenarion_circle
}

# Loa Priest
potential_loa_priest_wo_training_trigger = {
	age = 11
	
	can_be_loa_priest_trigger = yes

	OR = {
		NOT = { has_class_trait_wo_training_trigger = yes }
		trigger_if = {
			limit = { ai = no }
			has_max_level_trigger = no
			is_magic_class_trigger = no
			is_physical_class_trigger = yes
			is_combined_class_trigger = no
		}
	}
}
potential_loa_priest_trigger = {
	potential_loa_priest_wo_training_trigger = yes

	is_training_self_trigger = no
	is_training_mentor_trigger = no
}
# If this trigger isn't true, a character can not be a loa priest
can_be_loa_priest_trigger = {
	true_religion_group = loa_group
}
allow_loa_priest_trigger = {
	OR = {
		trigger_if = {
			limit = { is_adult = no }
			is_adult = no
		}
		trigger_if = {
			limit = { any_owned_bloodline = { has_bloodline_flag = bloodline_loa_priest_training } }
			learning = 8
		}
		trigger_else = {
			learning = 12
		}
		has_magical_potential_trigger = yes
		trigger_if = {
			limit = { religion_group = loa_group }
			OR = {
				trigger_if = {
					limit = { character = event_target:invited_character }
					character = event_target:invited_character # ...is character invited employ_priest or employ_priestess
				}
				is_priest = yes
				controls_religion = yes
			}
		}
	}
}
united_loa_priest_trigger = {
	potential_loa_priest_trigger = yes
	allow_loa_priest_trigger = yes
}
prev_loa_magic_is_visible_to_this_trigger = {
	OR = {
		character = PREV
		true_religion_group = loa_group
		is_loa_priest_class_trigger = yes
		PREV = {
			religion_group = loa_group
		}
	}
}

# Death Knight
potential_death_knight_wo_training_trigger = {
	age = 11
}
potential_death_knight_trigger = {
	potential_death_knight_wo_training_trigger = yes

	is_training_self_trigger = no
	is_training_mentor_trigger = no
}
allow_death_knight_trigger = {
	OR = {
		trigger_if = {
			limit = { is_adult = no }
			is_adult = no
		}
		AND = {
			martial = 12
			OR = {
				learning = 6
				has_magical_potential_trigger = yes
			}
		}
	}
}
united_death_knight_trigger = {
	potential_death_knight_trigger = yes
	allow_death_knight_trigger = yes
}
# Use prev_necromantic_magic_is_visible_to_this_trigger

# Necromancer
potential_necromancer_wo_training_trigger = {
	age = 11
	
	# The AI cannot become a necromancer if it hasn't impious trait
	trigger_if = {
		limit = { ai = yes }
		OR = {
			true_religion_group = necromancy_group
			has_impious_trait_trigger = yes
		}
	}

	OR = {
		NOT = { has_class_trait_wo_training_trigger = yes }
		trigger_if = {
			limit = {
				OR = {
					is_mage_class_trigger = yes
					is_priest_class_trigger = yes
					is_shaman_class_trigger = yes
					is_druid_class_trigger = yes
					is_loa_priest_class_trigger = yes
					AND = {
						OR = {
							is_warlock_class_trigger = yes
							# is_necromancer_class_trigger = yes
							is_shadow_priest_class_trigger = yes
						}
						true_religion_group = necromancy_group
					}
				}
				is_necromancer_class_trigger = no
			}
			OR = {
				true_religion_group = necromancy_group
				has_impious_trait_trigger = yes
			}
		}
		trigger_if = {
			limit = { ai = no }
			has_max_level_trigger = no
			is_magic_class_trigger = no
			is_physical_class_trigger = yes
			is_combined_class_trigger = no
		}
	}
}
potential_necromancer_trigger = {
	potential_necromancer_wo_training_trigger = yes

	is_training_self_trigger = no
	is_training_mentor_trigger = no
}
allow_necromancer_trigger = {
	OR = {
		trigger_if = {
			limit = { is_adult = no }
			is_adult = no
		}
		trigger_if = {
			limit = { any_owned_bloodline = { has_bloodline_flag = bloodline_necromancer_training } }
			learning = 8
			intrigue = 6
		}
		trigger_else = {
			learning = 12
			intrigue = 6
		}
		has_magical_potential_trigger = yes
		trigger_if = {
			limit = { religion_group = necromancy_group }
			OR = {
				trigger_if = {
					limit = { character = event_target:invited_character }
					character = event_target:invited_character # ...is character invited employ_priest or employ_priestess
				}
				is_priest = yes
				controls_religion = yes
			}
		}
	}
}
united_necromancer_trigger = {
	potential_necromancer_trigger = yes
	allow_necromancer_trigger = yes
}
prev_necromantic_magic_is_visible_to_this_trigger = {
	OR = {
		character = PREV
		true_religion_group = necromancy_group
		# society_member_of = class_society_necromancer
		society_member_of = cult_of_the_damned
		is_necromancer_class_trigger = yes
		PREV = {
			OR = {
				dark_public_religion_trigger = yes
				liege = {
					primary_title = {
						NOR = {
							has_law = status_of_magic_0
							has_law = status_of_magic_1
						}
					}
				}
			}
		}
	}
}

# Shadow Priest
potential_shadow_priest_wo_training_trigger = {
	age = 11
	
	# The AI cannot become a shadow_priest if it hasn't impious trait or void_group religion
	trigger_if = {
		limit = { ai = yes }
		OR = {
			true_religion_group = void_group
			true_religion = forsaken_cult
			has_impious_trait_trigger = yes
		}
	}

	OR = {
		NOT = { has_class_trait_wo_training_trigger = yes }
		trigger_if = {
			limit = {
				OR = {
					is_mage_class_trigger = yes
					is_priest_class_trigger = yes
					is_shaman_class_trigger = yes
					is_druid_class_trigger = yes
					is_loa_priest_class_trigger = yes
					AND = {
						OR = {
							is_warlock_class_trigger = yes
							is_necromancer_class_trigger = yes
							# is_shadow_priest_class_trigger = yes
						}
						true_religion_group = void_group
					}
				}
				is_shadow_priest_class_trigger = no
			}
			OR = {
				true_religion_group = void_group
				has_impious_trait_trigger = yes
			}
		}
		trigger_if = {
			limit = { ai = no }
			has_max_level_trigger = no
			is_magic_class_trigger = no
			is_physical_class_trigger = yes
			is_combined_class_trigger = no
		}
	}
}
potential_shadow_priest_trigger = {
	potential_shadow_priest_wo_training_trigger = yes

	is_training_self_trigger = no
	is_training_mentor_trigger = no
}
allow_shadow_priest_trigger = {
	OR = {
		trigger_if = {
			limit = { is_adult = no }
			is_adult = no
		}
		AND = {
			learning = 12
			intrigue = 6
		}
		has_magical_potential_trigger = yes
		trigger_if = {
			limit = {
				OR = {
					religion_group = void_group
					religion = forsaken_cult
				}
			}
			OR = {
				trigger_if = {
					limit = { character = event_target:invited_character }
					character = event_target:invited_character # ...is character invited employ_priest or employ_priestess
				}
				is_priest = yes
				controls_religion = yes
			}
		}
	}
}
united_shadow_priest_trigger = {
	potential_shadow_priest_trigger = yes
	allow_shadow_priest_trigger = yes
}
prev_void_magic_is_visible_to_this_trigger = {
	OR = {
		character = PREV
		OR = {
			true_religion_group = void_group
			true_religion = forsaken_cult
		}
		# society_member_of = class_society_shadow_priest
		society_member_of = twilights_hammer_cult
		is_shadow_priest_class_trigger = yes
		PREV = {
			OR = {
				dark_public_religion_trigger = yes
				liege = {
					primary_title = {
						NOR = {
							has_law = status_of_magic_0
							has_law = status_of_magic_1
							has_law = status_of_magic_2
						}
					}
				}
			}
		}
	}
}

# Monk
potential_monk_wo_training_trigger = {
	age = 11
	
	can_be_monk_trigger = yes
	
	OR = {
		NOT = { has_class_trait_wo_training_trigger = yes }
		AND = {
			is_monk_class_trigger = no
			OR = {
				is_warrior_class_trigger = yes
				is_shaman_class_trigger = yes
			}
			is_combined_class_trigger = no
		}
	}
}
potential_monk_trigger = {
	potential_monk_wo_training_trigger = yes

	is_training_self_trigger = no
	is_training_mentor_trigger = no
}
allow_monk_trigger = {
	OR = {
		trigger_if = {
			limit = { is_adult = no }
			is_adult = no
		}
		AND = {
			trigger_if = {
				limit = { any_owned_bloodline = { has_bloodline_flag = bloodline_monk_training } }
				OR = {
					learning = 8
					has_magical_potential_trigger = yes
				}
			}
			trigger_else = {
				OR = {
					learning = 12
					has_magical_potential_trigger = yes
				}
			}
			martial = 6
		}
		trigger_if = {
			limit = {
				religion_group = pandaren_religion_group
			}
			OR = {
				trigger_if = {
					limit = { character = event_target:invited_character }
					character = event_target:invited_character # ...is character invited employ_priest or employ_priestess
				}
				is_priest = yes
				controls_religion = yes
				government = order_government
			}
		}
	}
}
# If this trigger isn't true, a character can not be a monk
can_be_monk_trigger = {
	true_religion_group = pandaren_religion_group
}
united_monk_trigger = {
	potential_monk_trigger = yes
	allow_monk_trigger = yes
}
prev_chi_magic_is_visible_to_this_trigger = {
	OR = {
		character = PREV
		is_monk_class_trigger = yes
		true_religion_group = pandaren_religion_group
		PREV = {
			religion_group = pandaren_religion_group
		}
	}
}

potential_class_trigger = {
	OR = {
		potential_mage_trigger = yes
		potential_hunter_trigger = yes
		potential_warrior_trigger = yes
		potential_paladin_trigger = yes
		potential_priest_trigger = yes
		potential_rogue_trigger = yes
		potential_warlock_trigger = yes
		potential_shaman_trigger = yes
		potential_druid_trigger = yes
		potential_loa_priest_trigger = yes
		potential_necromancer_trigger = yes
		potential_shadow_priest_trigger = yes
		potential_monk_trigger = yes
	}
}
united_class_trigger = {
	OR = {
		united_mage_trigger = yes
		united_hunter_trigger = yes
		united_warrior_trigger = yes
		united_paladin_trigger = yes
		united_priest_trigger = yes
		united_rogue_trigger = yes
		united_warlock_trigger = yes
		united_shaman_trigger = yes
		united_druid_trigger = yes
		united_loa_priest_trigger = yes
		united_necromancer_trigger = yes
		united_shadow_priest_trigger = yes
		united_monk_trigger = yes
	}
}

# Triggers to check character potential to be mentor of <class>
potential_mentor_mage_trigger = {
	is_mage_class_trigger = yes
	FROM = { prev_arcane_magic_is_visible_to_this_trigger = yes }
	OR = {
		trait = class_mage_5
		trait = class_mage_6
		trait = class_mage_7
		trait = class_mage_8
		trait = class_mage_9
		trait = class_mage_10
	}

	is_training_self_trigger = no
	is_training_mentor_trigger = no
}
potential_mentor_hunter_trigger = {
	is_hunter_class_trigger = yes
	OR = {
		trait = class_hunter_5
		trait = class_hunter_6
		trait = class_hunter_7
		trait = class_hunter_8
		trait = class_hunter_9
		trait = class_hunter_10
	}

	is_training_self_trigger = no
	is_training_mentor_trigger = no
}
potential_mentor_warrior_trigger = {
	is_warrior_class_trigger = yes
	OR = {
		trait = class_warrior_5
		trait = class_warrior_6
		trait = class_warrior_7
		trait = class_warrior_8
		trait = class_warrior_9
		trait = class_warrior_10
	}

	is_training_self_trigger = no
	is_training_mentor_trigger = no
}
potential_mentor_paladin_trigger = {
	is_paladin_class_trigger = yes
	FROM = { prev_light_magic_is_visible_to_this_trigger = yes }
	OR = {
		trait = class_paladin_5
		trait = class_paladin_6
		trait = class_paladin_7
		trait = class_paladin_8
		trait = class_paladin_9
		trait = class_paladin_10
	}

	is_training_self_trigger = no
	is_training_mentor_trigger = no
}
potential_mentor_priest_trigger = {
	is_priest_class_trigger = yes
	FROM = { prev_light_magic_is_visible_to_this_trigger = yes }
	OR = {
		trait = class_priest_5
		trait = class_priest_6
		trait = class_priest_7
		trait = class_priest_8
		trait = class_priest_9
		trait = class_priest_10
	}

	is_training_self_trigger = no
	is_training_mentor_trigger = no
}
potential_mentor_rogue_trigger = {
	is_rogue_class_trigger = yes
	OR = {
		trait = class_rogue_5
		trait = class_rogue_6
		trait = class_rogue_7
		trait = class_rogue_8
		trait = class_rogue_9
		trait = class_rogue_10
	}

	is_training_self_trigger = no
	is_training_mentor_trigger = no
}
potential_mentor_warlock_trigger = {
	is_warlock_class_trigger = yes
	FROM = { prev_fel_magic_is_visible_to_this_trigger = yes }
	OR = {
		trait = class_warlock_5
		trait = class_warlock_6
		trait = class_warlock_7
		trait = class_warlock_8
		trait = class_warlock_9
		trait = class_warlock_10
	}

	is_training_self_trigger = no
	is_training_mentor_trigger = no
}
potential_mentor_shaman_trigger = {
	is_shaman_class_trigger = yes
	OR = {
		trait = class_shaman_5
		trait = class_shaman_6
		trait = class_shaman_7
		trait = class_shaman_8
		trait = class_shaman_9
		trait = class_shaman_10
	}

	is_training_self_trigger = no
	is_training_mentor_trigger = no
}
potential_mentor_druid_trigger = {
	is_druid_class_trigger = yes
	OR = {
		trait = class_druid_5
		trait = class_druid_6
		trait = class_druid_7
		trait = class_druid_8
		trait = class_druid_9
		trait = class_druid_10
	}

	is_training_self_trigger = no
	is_training_mentor_trigger = no
}
potential_mentor_loa_priest_trigger = {
	is_loa_priest_class_trigger = yes
	FROM = { prev_loa_magic_is_visible_to_this_trigger = yes }
	OR = {
		trait = class_loa_priest_5
		trait = class_loa_priest_6
		trait = class_loa_priest_7
		trait = class_loa_priest_8
		trait = class_loa_priest_9
		trait = class_loa_priest_10
	}

	is_training_self_trigger = no
	is_training_mentor_trigger = no
}
potential_mentor_death_knight_trigger = {
	is_death_knight_class_trigger = yes
	FROM = { prev_necromantic_magic_is_visible_to_this_trigger = yes }
	OR = {
		trait = class_death_knight_5
		trait = class_death_knight_6
		trait = class_death_knight_7
		trait = class_death_knight_8
		trait = class_death_knight_9
		trait = class_death_knight_10
	}

	is_training_self_trigger = no
	is_training_mentor_trigger = no
}
potential_mentor_necromancer_trigger = {
	is_necromancer_class_trigger = yes
	FROM = { prev_necromantic_magic_is_visible_to_this_trigger = yes }
	OR = {
		trait = class_necromancer_5
		trait = class_necromancer_6
		trait = class_necromancer_7
		trait = class_necromancer_8
		trait = class_necromancer_9
		trait = class_necromancer_10
	}

	is_training_self_trigger = no
	is_training_mentor_trigger = no
}
potential_mentor_shadow_priest_trigger = {
	is_shadow_priest_class_trigger = yes
	FROM = { prev_void_magic_is_visible_to_this_trigger = yes }
	OR = {
		trait = class_shadow_priest_5
		trait = class_shadow_priest_6
		trait = class_shadow_priest_7
		trait = class_shadow_priest_8
		trait = class_shadow_priest_9
		trait = class_shadow_priest_10
	}

	is_training_self_trigger = no
	is_training_mentor_trigger = no
}
potential_mentor_monk_trigger = {
	is_monk_class_trigger = yes
	FROM = { prev_chi_magic_is_visible_to_this_trigger = yes }
	OR = {
		trait = class_monk_5
		trait = class_monk_6
		trait = class_monk_7
		trait = class_monk_8
		trait = class_monk_9
		trait = class_monk_10
	}

	is_training_self_trigger = no
	is_training_mentor_trigger = no
}
potential_mentor_class_trigger = {
	OR = {
		potential_mentor_mage_trigger = yes
		potential_mentor_hunter_trigger = yes
		potential_mentor_warrior_trigger = yes
		potential_mentor_paladin_trigger = yes
		potential_mentor_priest_trigger = yes
		potential_mentor_rogue_trigger = yes
		potential_mentor_warlock_trigger = yes
		potential_mentor_shaman_trigger = yes
		potential_mentor_druid_trigger = yes
		potential_mentor_loa_priest_trigger = yes
		potential_mentor_death_knight_trigger = yes
		potential_mentor_necromancer_trigger = yes
		potential_mentor_shadow_priest_trigger = yes
		potential_mentor_monk_trigger = yes
	}
}

# No need in attributes to be a mage
has_magical_potential_trigger = {
	OR = {
		trait = sorcerer					# Has innate potential
		trait = twoheaded				# Two-headed ogres are capable of magic
		trait = creature_lich			# Liches are super magical beings
		trait = creature_dryad		# Magical beings
	}
}
can_level_up_trigger = {
	has_max_level_trigger = no
	is_training_self_trigger = no
	is_training_mentor_trigger = no
}

mana_is_full_trigger = {
	trigger_if = {
		limit = { is_9_10_magic_class_trigger = yes }
		has_character_modifier = mana_5
	}
	trigger_else_if = {
		limit = { is_7_8_magic_class_trigger = yes }
		has_character_modifier = mana_4
	}
	trigger_else_if = {
		limit = { is_5_6_magic_class_trigger = yes }
		has_character_modifier = mana_3
	}
	trigger_else_if = {
		limit = { is_3_4_magic_class_trigger = yes }
		has_character_modifier = mana_2
	}
	trigger_else_if = {
		limit = { is_1_2_magic_class_trigger = yes }
		has_character_modifier = mana_1
	}
	trigger_else = {
		always = no
	}
}
# Only some see Mana modifier if character hide its class
is_visible_mana_trigger = {
	FROM = { ROOT = { this_see_prev_class_trait_trigger = yes } }
}

# If it's true, THIS see PREV's class trait
this_see_prev_class_trait_trigger = {
	trigger_if = {
		limit = { PREV = { is_mage_class_trigger = yes } }
		prev_arcane_magic_is_visible_to_this_trigger = yes
	}
	trigger_else_if = {
		limit = {
			PREV = {
				OR = {
					is_paladin_class_trigger = yes
					is_priest_class_trigger = yes
				}
			}
		}
		prev_light_magic_is_visible_to_this_trigger = yes
	}
	trigger_else_if = {
		limit = { PREV = { is_warlock_class_trigger = yes } }
		prev_fel_magic_is_visible_to_this_trigger = yes
	}
	trigger_else_if = {
		limit = { PREV = { is_loa_priest_class_trigger = yes } }
		prev_loa_magic_is_visible_to_this_trigger = yes
	}
	trigger_else_if = {
		limit = {
			PREV = {
				OR = {
					is_death_knight_class_trigger = yes
					is_necromancer_class_trigger = yes
				}
			}
		}
		prev_necromantic_magic_is_visible_to_this_trigger = yes
	}
	trigger_else_if = {
		limit = { PREV = { is_shadow_priest_class_trigger = yes } }
		prev_void_magic_is_visible_to_this_trigger = yes
	}
	trigger_else_if = {
		limit = { PREV = { is_monk_class_trigger = yes } }
		prev_chi_magic_is_visible_to_this_trigger = yes
	}
	trigger_else = {
		always = yes
	}
}
# If it's true, THIS will be able to see PREV's class if PREV is going to have PREVPREV's class
this_would_see_prev_class_trait_if_prev_was_prevprev_class_trigger = {
	trigger_if = {
		limit = { PREVPREV = { is_mage_class_trigger = yes } }
		prev_arcane_magic_is_visible_to_this_trigger = yes
	}
	trigger_else_if = {
		limit = {
			PREVPREV = {
				OR = {
					is_paladin_class_trigger = yes
					is_priest_class_trigger = yes
				}
			}
		}
		prev_light_magic_is_visible_to_this_trigger = yes
	}
	trigger_else_if = {
		limit = { PREVPREV = { is_warlock_class_trigger = yes } }
		prev_fel_magic_is_visible_to_this_trigger = yes
	}
	trigger_else_if = {
		limit = { PREVPREV = { is_loa_priest_class_trigger = yes } }
		prev_loa_magic_is_visible_to_this_trigger = yes
	}
	trigger_else_if = {
		limit = {
			PREVPREV = {
				OR = {
					is_death_knight_class_trigger = yes
					is_necromancer_class_trigger = yes
				}
			}
		}
		prev_necromantic_magic_is_visible_to_this_trigger = yes
	}
	trigger_else_if = {
		limit = { PREVPREV = { is_shadow_priest_class_trigger = yes } }
		prev_void_magic_is_visible_to_this_trigger = yes
	}
	trigger_else_if = {
		limit = { PREVPREV = { is_monk_class_trigger = yes } }
		prev_chi_magic_is_visible_to_this_trigger = yes
	}
	trigger_else = {
		always = yes
	}
}

is_dark_class_trigger = {
	OR = {
		is_warlock_class_trigger = yes
		is_death_knight_class_trigger = yes
		is_necromancer_class_trigger = yes
		is_shadow_priest_class_trigger = yes
	}
}

# Used in events of correspondence between mentor and student
class_mentor_correspondence_trigger = {
	event_target:mentor = { is_alive = yes }
	event_target:student = {
		is_alive = yes
		
		has_character_flag = ask_to_be_mentor_ongoing_flag
	}
}
