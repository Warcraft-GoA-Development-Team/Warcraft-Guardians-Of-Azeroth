# Long potential's, allow's, trigger's, limit's are stored here
prev_mentor_this_class_student_potential = {
	is_untouchable_trigger = no

	# is_adult = yes
	is_incapable = no
	prisoner = no

	NOT =  { reverse_has_opinion_modifier = { modifier = opinion_teaching_me who = PREV } }	# Isn't your mentor right now
	is_training_self_trigger = no
	is_training_mentor_trigger = no

	# Evil characters can only train characters of their religion
	can_positive_interact_with_prev_hiddenly_trigger = yes

	NOT = { check_variable = { which = "wc_experience" value = 10 } }
}
prev_student_this_class_mentor_potential = {
	is_untouchable_trigger = no

	is_adult = yes
	is_incapable = no
	prisoner = no

	NOT = { character = PREV }
	NOT = { reverse_has_opinion_modifier = { modifier = opinion_teaching_me who = PREV } }	# Isn't your mentor right now

	OR = {
		trigger_if = {
			limit = { potential_mentor_mage_trigger = yes }
			PREV = {
				OR = {
					potential_mage_wo_training_trigger = yes
					is_weak_mage_class_trigger = yes
				}
			}
		}
		trigger_if = {
			limit = { potential_mentor_hunter_trigger = yes }
			PREV = {
				OR = {
					potential_hunter_wo_training_trigger = yes
					is_weak_hunter_class_trigger = yes
				}
			}
		}
		trigger_if = {
			limit = { potential_mentor_warrior_trigger = yes }
			PREV = {
				OR = {
					potential_warrior_wo_training_trigger = yes
					is_weak_warrior_class_trigger = yes
				}
			}
		}
		trigger_if = {
			limit = { potential_mentor_paladin_trigger = yes }
			PREV = {
				OR = {
					potential_paladin_wo_training_trigger = yes
					is_weak_paladin_class_trigger = yes
				}
			}
		}
		trigger_if = {
			limit = { potential_mentor_priest_trigger = yes }
			PREV = {
				OR = {
					potential_priest_wo_training_trigger = yes
					is_weak_priest_class_trigger = yes
				}
			}
		}
		trigger_if = {
			limit = { potential_mentor_rogue_trigger = yes }
			PREV = {
				OR = {
					potential_rogue_wo_training_trigger = yes
					is_weak_rogue_class_trigger = yes
				}
			}
		}
		trigger_if = {
			limit = { potential_mentor_warlock_trigger = yes }
			PREV = {
				OR = {
					potential_warlock_wo_training_trigger = yes
					is_weak_warlock_class_trigger = yes
				}
			}
		}
		trigger_if = {
			limit = { potential_mentor_shaman_trigger = yes }
			PREV = {
				OR = {
					potential_shaman_wo_training_trigger = yes
					is_weak_shaman_class_trigger = yes
				}
			}
		}
		trigger_if = {
			limit = { potential_mentor_druid_trigger = yes }
			PREV = {
				OR = {
					potential_druid_wo_training_trigger = yes
					is_weak_druid_class_trigger = yes
				}
			}
		}
		trigger_if = {
			limit = { potential_mentor_loa_priest_trigger = yes }
			PREV = {
				OR = {
					potential_loa_priest_wo_training_trigger = yes
					is_weak_loa_priest_class_trigger = yes
				}
			}
		}
		trigger_if = {
			limit = { potential_mentor_death_knight_trigger = yes }
			PREV = {
				OR = {
					# potential_death_knight_wo_training_trigger = yes		# Can't train to be DK
					is_weak_death_knight_class_trigger = yes
				}
			}
		}
		trigger_if = {
			limit = { potential_mentor_necromancer_trigger = yes }
			PREV = {
				OR = {
					potential_necromancer_wo_training_trigger = yes
					is_weak_necromancer_class_trigger = yes
				}
			}
		}
		trigger_if = {
			limit = { potential_mentor_shadow_priest_trigger = yes }
			PREV = {
				OR = {
					potential_shadow_priest_wo_training_trigger = yes
					is_weak_shadow_priest_class_trigger = yes
				}
			}
		}

		# Fallback
		always = no
	}
}
prev_student_this_class_mentor_allow = {
	PREV = {
		is_inaccessible_trigger = no

		NOT = { has_opinion_modifier = { who = PREV modifier = opinion_refused_to_be_mentor } }

		OR = {
			trigger_if = {
				limit = { PREV = { potential_mentor_mage_trigger = yes } }
				trigger_if = {
					limit = { is_mage_class_trigger = yes }
					is_weak_mage_class_trigger = yes
				}
				trigger_else = {
					allow_mage_trigger = yes
				}
			}
			trigger_if = {
				limit = { PREV = { potential_mentor_hunter_trigger = yes } }
				trigger_if = {
					limit = { is_hunter_class_trigger = yes }
					is_weak_hunter_class_trigger = yes
				}
				trigger_else = {
					allow_hunter_trigger = yes
				}
			}
			trigger_if = {
				limit = { PREV = { potential_mentor_warrior_trigger = yes } }
				trigger_if = {
					limit = { is_warrior_class_trigger = yes }
					is_weak_warrior_class_trigger = yes
				}
				trigger_else = {
					allow_warrior_trigger = yes
				}
			}
			trigger_if = {
				limit = { PREV = { potential_mentor_paladin_trigger = yes } }
				trigger_if = {
					limit = { is_paladin_class_trigger = yes }
					is_weak_paladin_class_trigger = yes
				}
				trigger_else = {
					allow_paladin_trigger = yes
				}
			}
			trigger_if = {
				limit = { PREV = { potential_mentor_priest_trigger = yes } }
				trigger_if = {
					limit = { is_priest_class_trigger = yes }
					is_weak_priest_class_trigger = yes
				}
				trigger_else = {
					allow_priest_trigger = yes
				}
			}
			trigger_if = {
				limit = { PREV = { potential_mentor_rogue_trigger = yes } }
				trigger_if = {
					limit = { is_rogue_class_trigger = yes }
					is_weak_rogue_class_trigger = yes
				}
				trigger_else = {
					allow_rogue_trigger = yes
				}
			}
			trigger_if = {
				limit = { PREV = { potential_mentor_warlock_trigger = yes } }
				trigger_if = {
					limit = { is_warlock_class_trigger = yes }
					is_weak_warlock_class_trigger = yes
				}
				trigger_else = {
					allow_warlock_trigger = yes
				}
			}
			trigger_if = {
				limit = { PREV = { potential_mentor_shaman_trigger = yes } }
				trigger_if = {
					limit = { is_shaman_class_trigger = yes }
					is_weak_shaman_class_trigger = yes
				}
				trigger_else = {
					allow_shaman_trigger = yes
				}
			}
			trigger_if = {
				limit = { PREV = { potential_mentor_druid_trigger = yes } }
				trigger_if = {
					limit = { is_druid_class_trigger = yes }
					is_weak_druid_class_trigger = yes
				}
				trigger_else = {
					allow_druid_trigger = yes
				}
			}
			trigger_if = {
				limit = { PREV = { potential_mentor_loa_priest_trigger = yes } }
				trigger_if = {
					limit = { is_loa_priest_class_trigger = yes }
					is_weak_loa_priest_class_trigger = yes
				}
				trigger_else = {
					allow_loa_priest_trigger = yes
				}
			}
			trigger_if = {
				limit = { PREV = { potential_mentor_death_knight_trigger = yes } }
				trigger_if = {
					limit = { is_death_knight_class_trigger = yes }
					is_weak_death_knight_class_trigger = yes
				}
				trigger_else = {
					allow_death_knight_trigger = yes
				}
			}
			trigger_if = {
				limit = { PREV = { potential_mentor_necromancer_trigger = yes } }
				trigger_if = {
					limit = { is_necromancer_class_trigger = yes }
					is_weak_necromancer_class_trigger = yes
				}
				trigger_else = {
					allow_necromancer_trigger = yes
				}
			}
			trigger_if = {
				limit = { PREV = { potential_mentor_shadow_priest_trigger = yes } }
				trigger_if = {
					limit = { is_shadow_priest_class_trigger = yes }
					is_weak_shadow_priest_class_trigger = yes
				}
				trigger_else = {
					allow_shadow_priest_trigger = yes
				}
			}

			# Fallback
			always = no
		}
	}

	is_inaccessible_trigger = no

	OR = {
		custom_tooltip = {
			text = has_not_students_tooltip
			NOT = {
				any_opinion_modifier_target = {
					has_opinion_modifier = { who = PREV modifier = opinion_teaching_me }
				}
			}
		}
		PREV = {
			show_scope_change = no

			custom_tooltip = {
				text = is_this_educator_tooltip
				OR = {
					guardian = { character = PREVPREV }
					educator = { character = PREVPREV }
				}
			}
		}
	}
}

# Used in burn_evil_beings and burn_evil_being
is_burnable_allow_trigger = {
	is_inaccessible_trigger = no

	trigger_if = {
		limit = { is_ruler = yes }
		NOT = { reverse_has_opinion_modifier = { who = PREV modifier = opinion_accused_apostate } }
	}
}
is_burnable_potential_trigger = {
	is_alive = yes
	is_dying = no

	OR = {
		host = { character = PREVPREV }
		liege = { character = PREVPREV }
	}
	is_unholy_creature_to_prev_trigger = yes
}

# These conditions must be met to become leader the Order of Embers
ooe_founder_triggers = {
	is_alive = yes
	is_dying = no
	
	is_adult = yes
	is_incapable = no
	prisoner = no
	is_inaccessible_trigger = no

	is_ruler = no	# ...since she's gonna become head of holy order
	is_dark_being_trigger = no
	dark_public_religion_trigger = no
	dark_true_religion_trigger = no
}
# Used in Drust Crisis events
drust_spouse_trigger = {
	is_untouchable_trigger = no
	
	is_alive = yes
	is_dying = no
	
	is_adult = yes
	prisoner = no
	is_inaccessible_trigger = no
	
	OR = {
		is_ruler = no
		is_feudal = yes
		is_tribal = yes
	}
	
	NOT = { has_character_flag = heartsbane_coven_declined_flag }
	
	can_be_undead_trigger = yes
	dark_public_religion_trigger = no
	dark_true_religion_trigger = no
}
drust_sick_spouse_trigger = {
	drust_spouse_trigger = yes
	
	character_disease_trigger = yes
}
drust_worried_spouse_trigger = {
	drust_spouse_trigger = yes
	
	is_incapable = no

	character_disease_trigger = no
}

#Used in Arthas' event
scourge_champion_event_trigger = {
	is_untouchable_trigger = no
	is_alive = yes
	is_dying = no
	
	is_adult = yes
	is_incapable = no
	prisoner = no
	#is_inaccessible_trigger = no
	is_consort = no

	OR = {
		is_ruler = no
		is_feudal = yes
		is_tribal = yes
	}

	can_be_undead_trigger = yes
	trait = creature_human
	religion_group = light_group
	true_religion_group = light_group
	
	e_scourge = { has_holder = yes }
}

#Used in Cho'gall's event
old_gods_chosen_event_trigger = {
	is_alive = yes
	is_dying = no
	is_untouchable_trigger = no
	
	prisoner = no
	is_consort = no
	
	OR = {
		is_ruler = no
		is_feudal = yes
		is_tribal = yes
	}
	
	true_religion = old_gods_worship
	
	has_invader_title_trigger = no
}
garona_hunt_chain_trigger = {
	is_alive = yes
	is_dying = no

	is_untouchable_trigger = no

	is_adult = yes
	is_incapable = no
	prisoner = no
	
	is_ruler = yes
	
	character = event_target:target_chogall
	
	event_target:target_garona = {
		is_alive = yes
		is_dying = no

		is_untouchable_trigger = no

		is_adult = yes
		is_incapable = no
		prisoner = no
		#is_inaccessible_trigger = no
		
		is_ruler = no
		
		NOT = { religion = event_target:target_chogall }
		
		NOT = { is_married = event_target:target_chogall }
		NOT = { obedient = event_target:target_chogall }
	}
}
is_possible_garona_target_trigger = {
	is_alive = yes
	is_dying = no

	is_untouchable_trigger = no

	ai = yes
	is_adult = yes
	is_incapable = no
	prisoner = no
	is_inaccessible_trigger = no
	
	religion = event_target:target_chogall
	NOT = { religion = event_target:target_garona }
	
	combat_rating_diff = { who = event_target:target_garona value < 10 }
	event_target:target_garona = {
		NOT = { is_married = PREV }
		NOT = { obedient = PREV }
	}
}